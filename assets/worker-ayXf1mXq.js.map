{"version":3,"file":"worker-ayXf1mXq.js","sources":["../../node_modules/esbuild-wasm/lib/browser.js","../../lib/error.js","../../node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.mjs","../../node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js","../../node_modules/@jridgewell/trace-mapping/dist/trace-mapping.mjs","../../node_modules/convert-source-map/index.js","../../node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js","../../lib/util.js","../../lib/bundler.js","../../node_modules/@jscadui/3mf-export/src/defMatrix.js","../../node_modules/@jscadui/3mf-export/src/matrix2str.js","../../node_modules/@jscadui/3mf-export/src/makeItem.js","../../node_modules/@jscadui/3mf-export/src/toDate3mf.js","../../node_modules/@jscadui/3mf-export/src/pushHeader.js","../../node_modules/@jscadui/3mf-export/src/pushObjectComponent.js","../../node_modules/@jscadui/3mf-export/src/pushObjectMesh.js","../../node_modules/@jscadui/3mf-export/src/staticFiles.js","../../node_modules/@jscadui/3mf-export/index.js","../../node_modules/fflate/esm/browser.js","../../lib/export-3mf.js","../../node_modules/property-graph/dist/property-graph.modern.js","../../node_modules/@gltf-transform/core/dist/index.modern.js","../../node_modules/ktx-parse/dist/ktx-parse.modern.js","../../node_modules/@gltf-transform/extensions/dist/index.modern.js","../../lib/manifold-gltf.js","../../lib/gltf-io.js","../../lib/export-gltf.js","../../lib/garbage-collector.js","../../lib/math.js","../../lib/animation.js","../../lib/material.js","../../lib/debug.js","../../lib/scene-builder.js","../../manifold.js","../../lib/wasm.js","../../lib/worker.js"],"sourcesContent":["(module=>{\n\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// lib/npm/browser.ts\nvar browser_exports = {};\n__export(browser_exports, {\n  analyzeMetafile: () => analyzeMetafile,\n  analyzeMetafileSync: () => analyzeMetafileSync,\n  build: () => build,\n  buildSync: () => buildSync,\n  context: () => context,\n  default: () => browser_default,\n  formatMessages: () => formatMessages,\n  formatMessagesSync: () => formatMessagesSync,\n  initialize: () => initialize,\n  stop: () => stop,\n  transform: () => transform,\n  transformSync: () => transformSync,\n  version: () => version\n});\nmodule.exports = __toCommonJS(browser_exports);\n\n// lib/shared/stdio_protocol.ts\nfunction encodePacket(packet) {\n  let visit = (value) => {\n    if (value === null) {\n      bb.write8(0);\n    } else if (typeof value === \"boolean\") {\n      bb.write8(1);\n      bb.write8(+value);\n    } else if (typeof value === \"number\") {\n      bb.write8(2);\n      bb.write32(value | 0);\n    } else if (typeof value === \"string\") {\n      bb.write8(3);\n      bb.write(encodeUTF8(value));\n    } else if (value instanceof Uint8Array) {\n      bb.write8(4);\n      bb.write(value);\n    } else if (value instanceof Array) {\n      bb.write8(5);\n      bb.write32(value.length);\n      for (let item of value) {\n        visit(item);\n      }\n    } else {\n      let keys = Object.keys(value);\n      bb.write8(6);\n      bb.write32(keys.length);\n      for (let key of keys) {\n        bb.write(encodeUTF8(key));\n        visit(value[key]);\n      }\n    }\n  };\n  let bb = new ByteBuffer();\n  bb.write32(0);\n  bb.write32(packet.id << 1 | +!packet.isRequest);\n  visit(packet.value);\n  writeUInt32LE(bb.buf, bb.len - 4, 0);\n  return bb.buf.subarray(0, bb.len);\n}\nfunction decodePacket(bytes) {\n  let visit = () => {\n    switch (bb.read8()) {\n      case 0:\n        return null;\n      case 1:\n        return !!bb.read8();\n      case 2:\n        return bb.read32();\n      case 3:\n        return decodeUTF8(bb.read());\n      case 4:\n        return bb.read();\n      case 5: {\n        let count = bb.read32();\n        let value2 = [];\n        for (let i = 0; i < count; i++) {\n          value2.push(visit());\n        }\n        return value2;\n      }\n      case 6: {\n        let count = bb.read32();\n        let value2 = {};\n        for (let i = 0; i < count; i++) {\n          value2[decodeUTF8(bb.read())] = visit();\n        }\n        return value2;\n      }\n      default:\n        throw new Error(\"Invalid packet\");\n    }\n  };\n  let bb = new ByteBuffer(bytes);\n  let id = bb.read32();\n  let isRequest = (id & 1) === 0;\n  id >>>= 1;\n  let value = visit();\n  if (bb.ptr !== bytes.length) {\n    throw new Error(\"Invalid packet\");\n  }\n  return { id, isRequest, value };\n}\nvar ByteBuffer = class {\n  constructor(buf = new Uint8Array(1024)) {\n    this.buf = buf;\n    this.len = 0;\n    this.ptr = 0;\n  }\n  _write(delta) {\n    if (this.len + delta > this.buf.length) {\n      let clone = new Uint8Array((this.len + delta) * 2);\n      clone.set(this.buf);\n      this.buf = clone;\n    }\n    this.len += delta;\n    return this.len - delta;\n  }\n  write8(value) {\n    let offset = this._write(1);\n    this.buf[offset] = value;\n  }\n  write32(value) {\n    let offset = this._write(4);\n    writeUInt32LE(this.buf, value, offset);\n  }\n  write(bytes) {\n    let offset = this._write(4 + bytes.length);\n    writeUInt32LE(this.buf, bytes.length, offset);\n    this.buf.set(bytes, offset + 4);\n  }\n  _read(delta) {\n    if (this.ptr + delta > this.buf.length) {\n      throw new Error(\"Invalid packet\");\n    }\n    this.ptr += delta;\n    return this.ptr - delta;\n  }\n  read8() {\n    return this.buf[this._read(1)];\n  }\n  read32() {\n    return readUInt32LE(this.buf, this._read(4));\n  }\n  read() {\n    let length = this.read32();\n    let bytes = new Uint8Array(length);\n    let ptr = this._read(bytes.length);\n    bytes.set(this.buf.subarray(ptr, ptr + length));\n    return bytes;\n  }\n};\nvar encodeUTF8;\nvar decodeUTF8;\nvar encodeInvariant;\nif (typeof TextEncoder !== \"undefined\" && typeof TextDecoder !== \"undefined\") {\n  let encoder = new TextEncoder();\n  let decoder = new TextDecoder();\n  encodeUTF8 = (text) => encoder.encode(text);\n  decodeUTF8 = (bytes) => decoder.decode(bytes);\n  encodeInvariant = 'new TextEncoder().encode(\"\")';\n} else if (typeof Buffer !== \"undefined\") {\n  encodeUTF8 = (text) => Buffer.from(text);\n  decodeUTF8 = (bytes) => {\n    let { buffer, byteOffset, byteLength } = bytes;\n    return Buffer.from(buffer, byteOffset, byteLength).toString();\n  };\n  encodeInvariant = 'Buffer.from(\"\")';\n} else {\n  throw new Error(\"No UTF-8 codec found\");\n}\nif (!(encodeUTF8(\"\") instanceof Uint8Array))\n  throw new Error(`Invariant violation: \"${encodeInvariant} instanceof Uint8Array\" is incorrectly false\n\nThis indicates that your JavaScript environment is broken. You cannot use\nesbuild in this environment because esbuild relies on this invariant. This\nis not a problem with esbuild. You need to fix your environment instead.\n`);\nfunction readUInt32LE(buffer, offset) {\n  return buffer[offset++] | buffer[offset++] << 8 | buffer[offset++] << 16 | buffer[offset++] << 24;\n}\nfunction writeUInt32LE(buffer, value, offset) {\n  buffer[offset++] = value;\n  buffer[offset++] = value >> 8;\n  buffer[offset++] = value >> 16;\n  buffer[offset++] = value >> 24;\n}\n\n// lib/shared/common.ts\nvar quote = JSON.stringify;\nvar buildLogLevelDefault = \"warning\";\nvar transformLogLevelDefault = \"silent\";\nfunction validateAndJoinStringArray(values, what) {\n  const toJoin = [];\n  for (const value of values) {\n    validateStringValue(value, what);\n    if (value.indexOf(\",\") >= 0) throw new Error(`Invalid ${what}: ${value}`);\n    toJoin.push(value);\n  }\n  return toJoin.join(\",\");\n}\nvar canBeAnything = () => null;\nvar mustBeBoolean = (value) => typeof value === \"boolean\" ? null : \"a boolean\";\nvar mustBeString = (value) => typeof value === \"string\" ? null : \"a string\";\nvar mustBeRegExp = (value) => value instanceof RegExp ? null : \"a RegExp object\";\nvar mustBeInteger = (value) => typeof value === \"number\" && value === (value | 0) ? null : \"an integer\";\nvar mustBeValidPortNumber = (value) => typeof value === \"number\" && value === (value | 0) && value >= 0 && value <= 65535 ? null : \"a valid port number\";\nvar mustBeFunction = (value) => typeof value === \"function\" ? null : \"a function\";\nvar mustBeArray = (value) => Array.isArray(value) ? null : \"an array\";\nvar mustBeArrayOfStrings = (value) => Array.isArray(value) && value.every((x) => typeof x === \"string\") ? null : \"an array of strings\";\nvar mustBeObject = (value) => typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"an object\";\nvar mustBeEntryPoints = (value) => typeof value === \"object\" && value !== null ? null : \"an array or an object\";\nvar mustBeWebAssemblyModule = (value) => value instanceof WebAssembly.Module ? null : \"a WebAssembly.Module\";\nvar mustBeObjectOrNull = (value) => typeof value === \"object\" && !Array.isArray(value) ? null : \"an object or null\";\nvar mustBeStringOrBoolean = (value) => typeof value === \"string\" || typeof value === \"boolean\" ? null : \"a string or a boolean\";\nvar mustBeStringOrObject = (value) => typeof value === \"string\" || typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"a string or an object\";\nvar mustBeStringOrArrayOfStrings = (value) => typeof value === \"string\" || Array.isArray(value) && value.every((x) => typeof x === \"string\") ? null : \"a string or an array of strings\";\nvar mustBeStringOrUint8Array = (value) => typeof value === \"string\" || value instanceof Uint8Array ? null : \"a string or a Uint8Array\";\nvar mustBeStringOrURL = (value) => typeof value === \"string\" || value instanceof URL ? null : \"a string or a URL\";\nfunction getFlag(object, keys, key, mustBeFn) {\n  let value = object[key];\n  keys[key + \"\"] = true;\n  if (value === void 0) return void 0;\n  let mustBe = mustBeFn(value);\n  if (mustBe !== null) throw new Error(`${quote(key)} must be ${mustBe}`);\n  return value;\n}\nfunction checkForInvalidFlags(object, keys, where) {\n  for (let key in object) {\n    if (!(key in keys)) {\n      throw new Error(`Invalid option ${where}: ${quote(key)}`);\n    }\n  }\n}\nfunction validateInitializeOptions(options) {\n  let keys = /* @__PURE__ */ Object.create(null);\n  let wasmURL = getFlag(options, keys, \"wasmURL\", mustBeStringOrURL);\n  let wasmModule = getFlag(options, keys, \"wasmModule\", mustBeWebAssemblyModule);\n  let worker = getFlag(options, keys, \"worker\", mustBeBoolean);\n  checkForInvalidFlags(options, keys, \"in initialize() call\");\n  return {\n    wasmURL,\n    wasmModule,\n    worker\n  };\n}\nfunction validateMangleCache(mangleCache) {\n  let validated;\n  if (mangleCache !== void 0) {\n    validated = /* @__PURE__ */ Object.create(null);\n    for (let key in mangleCache) {\n      let value = mangleCache[key];\n      if (typeof value === \"string\" || value === false) {\n        validated[key] = value;\n      } else {\n        throw new Error(`Expected ${quote(key)} in mangle cache to map to either a string or false`);\n      }\n    }\n  }\n  return validated;\n}\nfunction pushLogFlags(flags, options, keys, isTTY, logLevelDefault) {\n  let color = getFlag(options, keys, \"color\", mustBeBoolean);\n  let logLevel = getFlag(options, keys, \"logLevel\", mustBeString);\n  let logLimit = getFlag(options, keys, \"logLimit\", mustBeInteger);\n  if (color !== void 0) flags.push(`--color=${color}`);\n  else if (isTTY) flags.push(`--color=true`);\n  flags.push(`--log-level=${logLevel || logLevelDefault}`);\n  flags.push(`--log-limit=${logLimit || 0}`);\n}\nfunction validateStringValue(value, what, key) {\n  if (typeof value !== \"string\") {\n    throw new Error(`Expected value for ${what}${key !== void 0 ? \" \" + quote(key) : \"\"} to be a string, got ${typeof value} instead`);\n  }\n  return value;\n}\nfunction pushCommonFlags(flags, options, keys) {\n  let legalComments = getFlag(options, keys, \"legalComments\", mustBeString);\n  let sourceRoot = getFlag(options, keys, \"sourceRoot\", mustBeString);\n  let sourcesContent = getFlag(options, keys, \"sourcesContent\", mustBeBoolean);\n  let target = getFlag(options, keys, \"target\", mustBeStringOrArrayOfStrings);\n  let format = getFlag(options, keys, \"format\", mustBeString);\n  let globalName = getFlag(options, keys, \"globalName\", mustBeString);\n  let mangleProps = getFlag(options, keys, \"mangleProps\", mustBeRegExp);\n  let reserveProps = getFlag(options, keys, \"reserveProps\", mustBeRegExp);\n  let mangleQuoted = getFlag(options, keys, \"mangleQuoted\", mustBeBoolean);\n  let minify = getFlag(options, keys, \"minify\", mustBeBoolean);\n  let minifySyntax = getFlag(options, keys, \"minifySyntax\", mustBeBoolean);\n  let minifyWhitespace = getFlag(options, keys, \"minifyWhitespace\", mustBeBoolean);\n  let minifyIdentifiers = getFlag(options, keys, \"minifyIdentifiers\", mustBeBoolean);\n  let lineLimit = getFlag(options, keys, \"lineLimit\", mustBeInteger);\n  let drop = getFlag(options, keys, \"drop\", mustBeArrayOfStrings);\n  let dropLabels = getFlag(options, keys, \"dropLabels\", mustBeArrayOfStrings);\n  let charset = getFlag(options, keys, \"charset\", mustBeString);\n  let treeShaking = getFlag(options, keys, \"treeShaking\", mustBeBoolean);\n  let ignoreAnnotations = getFlag(options, keys, \"ignoreAnnotations\", mustBeBoolean);\n  let jsx = getFlag(options, keys, \"jsx\", mustBeString);\n  let jsxFactory = getFlag(options, keys, \"jsxFactory\", mustBeString);\n  let jsxFragment = getFlag(options, keys, \"jsxFragment\", mustBeString);\n  let jsxImportSource = getFlag(options, keys, \"jsxImportSource\", mustBeString);\n  let jsxDev = getFlag(options, keys, \"jsxDev\", mustBeBoolean);\n  let jsxSideEffects = getFlag(options, keys, \"jsxSideEffects\", mustBeBoolean);\n  let define = getFlag(options, keys, \"define\", mustBeObject);\n  let logOverride = getFlag(options, keys, \"logOverride\", mustBeObject);\n  let supported = getFlag(options, keys, \"supported\", mustBeObject);\n  let pure = getFlag(options, keys, \"pure\", mustBeArrayOfStrings);\n  let keepNames = getFlag(options, keys, \"keepNames\", mustBeBoolean);\n  let platform = getFlag(options, keys, \"platform\", mustBeString);\n  let tsconfigRaw = getFlag(options, keys, \"tsconfigRaw\", mustBeStringOrObject);\n  let absPaths = getFlag(options, keys, \"absPaths\", mustBeArrayOfStrings);\n  if (legalComments) flags.push(`--legal-comments=${legalComments}`);\n  if (sourceRoot !== void 0) flags.push(`--source-root=${sourceRoot}`);\n  if (sourcesContent !== void 0) flags.push(`--sources-content=${sourcesContent}`);\n  if (target) flags.push(`--target=${validateAndJoinStringArray(Array.isArray(target) ? target : [target], \"target\")}`);\n  if (format) flags.push(`--format=${format}`);\n  if (globalName) flags.push(`--global-name=${globalName}`);\n  if (platform) flags.push(`--platform=${platform}`);\n  if (tsconfigRaw) flags.push(`--tsconfig-raw=${typeof tsconfigRaw === \"string\" ? tsconfigRaw : JSON.stringify(tsconfigRaw)}`);\n  if (minify) flags.push(\"--minify\");\n  if (minifySyntax) flags.push(\"--minify-syntax\");\n  if (minifyWhitespace) flags.push(\"--minify-whitespace\");\n  if (minifyIdentifiers) flags.push(\"--minify-identifiers\");\n  if (lineLimit) flags.push(`--line-limit=${lineLimit}`);\n  if (charset) flags.push(`--charset=${charset}`);\n  if (treeShaking !== void 0) flags.push(`--tree-shaking=${treeShaking}`);\n  if (ignoreAnnotations) flags.push(`--ignore-annotations`);\n  if (drop) for (let what of drop) flags.push(`--drop:${validateStringValue(what, \"drop\")}`);\n  if (dropLabels) flags.push(`--drop-labels=${validateAndJoinStringArray(dropLabels, \"drop label\")}`);\n  if (absPaths) flags.push(`--abs-paths=${validateAndJoinStringArray(absPaths, \"abs paths\")}`);\n  if (mangleProps) flags.push(`--mangle-props=${jsRegExpToGoRegExp(mangleProps)}`);\n  if (reserveProps) flags.push(`--reserve-props=${jsRegExpToGoRegExp(reserveProps)}`);\n  if (mangleQuoted !== void 0) flags.push(`--mangle-quoted=${mangleQuoted}`);\n  if (jsx) flags.push(`--jsx=${jsx}`);\n  if (jsxFactory) flags.push(`--jsx-factory=${jsxFactory}`);\n  if (jsxFragment) flags.push(`--jsx-fragment=${jsxFragment}`);\n  if (jsxImportSource) flags.push(`--jsx-import-source=${jsxImportSource}`);\n  if (jsxDev) flags.push(`--jsx-dev`);\n  if (jsxSideEffects) flags.push(`--jsx-side-effects`);\n  if (define) {\n    for (let key in define) {\n      if (key.indexOf(\"=\") >= 0) throw new Error(`Invalid define: ${key}`);\n      flags.push(`--define:${key}=${validateStringValue(define[key], \"define\", key)}`);\n    }\n  }\n  if (logOverride) {\n    for (let key in logOverride) {\n      if (key.indexOf(\"=\") >= 0) throw new Error(`Invalid log override: ${key}`);\n      flags.push(`--log-override:${key}=${validateStringValue(logOverride[key], \"log override\", key)}`);\n    }\n  }\n  if (supported) {\n    for (let key in supported) {\n      if (key.indexOf(\"=\") >= 0) throw new Error(`Invalid supported: ${key}`);\n      const value = supported[key];\n      if (typeof value !== \"boolean\") throw new Error(`Expected value for supported ${quote(key)} to be a boolean, got ${typeof value} instead`);\n      flags.push(`--supported:${key}=${value}`);\n    }\n  }\n  if (pure) for (let fn of pure) flags.push(`--pure:${validateStringValue(fn, \"pure\")}`);\n  if (keepNames) flags.push(`--keep-names`);\n}\nfunction flagsForBuildOptions(callName, options, isTTY, logLevelDefault, writeDefault) {\n  var _a;\n  let flags = [];\n  let entries = [];\n  let keys = /* @__PURE__ */ Object.create(null);\n  let stdinContents = null;\n  let stdinResolveDir = null;\n  pushLogFlags(flags, options, keys, isTTY, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let bundle = getFlag(options, keys, \"bundle\", mustBeBoolean);\n  let splitting = getFlag(options, keys, \"splitting\", mustBeBoolean);\n  let preserveSymlinks = getFlag(options, keys, \"preserveSymlinks\", mustBeBoolean);\n  let metafile = getFlag(options, keys, \"metafile\", mustBeBoolean);\n  let outfile = getFlag(options, keys, \"outfile\", mustBeString);\n  let outdir = getFlag(options, keys, \"outdir\", mustBeString);\n  let outbase = getFlag(options, keys, \"outbase\", mustBeString);\n  let tsconfig = getFlag(options, keys, \"tsconfig\", mustBeString);\n  let resolveExtensions = getFlag(options, keys, \"resolveExtensions\", mustBeArrayOfStrings);\n  let nodePathsInput = getFlag(options, keys, \"nodePaths\", mustBeArrayOfStrings);\n  let mainFields = getFlag(options, keys, \"mainFields\", mustBeArrayOfStrings);\n  let conditions = getFlag(options, keys, \"conditions\", mustBeArrayOfStrings);\n  let external = getFlag(options, keys, \"external\", mustBeArrayOfStrings);\n  let packages = getFlag(options, keys, \"packages\", mustBeString);\n  let alias = getFlag(options, keys, \"alias\", mustBeObject);\n  let loader = getFlag(options, keys, \"loader\", mustBeObject);\n  let outExtension = getFlag(options, keys, \"outExtension\", mustBeObject);\n  let publicPath = getFlag(options, keys, \"publicPath\", mustBeString);\n  let entryNames = getFlag(options, keys, \"entryNames\", mustBeString);\n  let chunkNames = getFlag(options, keys, \"chunkNames\", mustBeString);\n  let assetNames = getFlag(options, keys, \"assetNames\", mustBeString);\n  let inject = getFlag(options, keys, \"inject\", mustBeArrayOfStrings);\n  let banner = getFlag(options, keys, \"banner\", mustBeObject);\n  let footer = getFlag(options, keys, \"footer\", mustBeObject);\n  let entryPoints = getFlag(options, keys, \"entryPoints\", mustBeEntryPoints);\n  let absWorkingDir = getFlag(options, keys, \"absWorkingDir\", mustBeString);\n  let stdin = getFlag(options, keys, \"stdin\", mustBeObject);\n  let write = (_a = getFlag(options, keys, \"write\", mustBeBoolean)) != null ? _a : writeDefault;\n  let allowOverwrite = getFlag(options, keys, \"allowOverwrite\", mustBeBoolean);\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  keys.plugins = true;\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap) flags.push(`--sourcemap${sourcemap === true ? \"\" : `=${sourcemap}`}`);\n  if (bundle) flags.push(\"--bundle\");\n  if (allowOverwrite) flags.push(\"--allow-overwrite\");\n  if (splitting) flags.push(\"--splitting\");\n  if (preserveSymlinks) flags.push(\"--preserve-symlinks\");\n  if (metafile) flags.push(`--metafile`);\n  if (outfile) flags.push(`--outfile=${outfile}`);\n  if (outdir) flags.push(`--outdir=${outdir}`);\n  if (outbase) flags.push(`--outbase=${outbase}`);\n  if (tsconfig) flags.push(`--tsconfig=${tsconfig}`);\n  if (packages) flags.push(`--packages=${packages}`);\n  if (resolveExtensions) flags.push(`--resolve-extensions=${validateAndJoinStringArray(resolveExtensions, \"resolve extension\")}`);\n  if (publicPath) flags.push(`--public-path=${publicPath}`);\n  if (entryNames) flags.push(`--entry-names=${entryNames}`);\n  if (chunkNames) flags.push(`--chunk-names=${chunkNames}`);\n  if (assetNames) flags.push(`--asset-names=${assetNames}`);\n  if (mainFields) flags.push(`--main-fields=${validateAndJoinStringArray(mainFields, \"main field\")}`);\n  if (conditions) flags.push(`--conditions=${validateAndJoinStringArray(conditions, \"condition\")}`);\n  if (external) for (let name of external) flags.push(`--external:${validateStringValue(name, \"external\")}`);\n  if (alias) {\n    for (let old in alias) {\n      if (old.indexOf(\"=\") >= 0) throw new Error(`Invalid package name in alias: ${old}`);\n      flags.push(`--alias:${old}=${validateStringValue(alias[old], \"alias\", old)}`);\n    }\n  }\n  if (banner) {\n    for (let type in banner) {\n      if (type.indexOf(\"=\") >= 0) throw new Error(`Invalid banner file type: ${type}`);\n      flags.push(`--banner:${type}=${validateStringValue(banner[type], \"banner\", type)}`);\n    }\n  }\n  if (footer) {\n    for (let type in footer) {\n      if (type.indexOf(\"=\") >= 0) throw new Error(`Invalid footer file type: ${type}`);\n      flags.push(`--footer:${type}=${validateStringValue(footer[type], \"footer\", type)}`);\n    }\n  }\n  if (inject) for (let path of inject) flags.push(`--inject:${validateStringValue(path, \"inject\")}`);\n  if (loader) {\n    for (let ext in loader) {\n      if (ext.indexOf(\"=\") >= 0) throw new Error(`Invalid loader extension: ${ext}`);\n      flags.push(`--loader:${ext}=${validateStringValue(loader[ext], \"loader\", ext)}`);\n    }\n  }\n  if (outExtension) {\n    for (let ext in outExtension) {\n      if (ext.indexOf(\"=\") >= 0) throw new Error(`Invalid out extension: ${ext}`);\n      flags.push(`--out-extension:${ext}=${validateStringValue(outExtension[ext], \"out extension\", ext)}`);\n    }\n  }\n  if (entryPoints) {\n    if (Array.isArray(entryPoints)) {\n      for (let i = 0, n = entryPoints.length; i < n; i++) {\n        let entryPoint = entryPoints[i];\n        if (typeof entryPoint === \"object\" && entryPoint !== null) {\n          let entryPointKeys = /* @__PURE__ */ Object.create(null);\n          let input = getFlag(entryPoint, entryPointKeys, \"in\", mustBeString);\n          let output = getFlag(entryPoint, entryPointKeys, \"out\", mustBeString);\n          checkForInvalidFlags(entryPoint, entryPointKeys, \"in entry point at index \" + i);\n          if (input === void 0) throw new Error('Missing property \"in\" for entry point at index ' + i);\n          if (output === void 0) throw new Error('Missing property \"out\" for entry point at index ' + i);\n          entries.push([output, input]);\n        } else {\n          entries.push([\"\", validateStringValue(entryPoint, \"entry point at index \" + i)]);\n        }\n      }\n    } else {\n      for (let key in entryPoints) {\n        entries.push([key, validateStringValue(entryPoints[key], \"entry point\", key)]);\n      }\n    }\n  }\n  if (stdin) {\n    let stdinKeys = /* @__PURE__ */ Object.create(null);\n    let contents = getFlag(stdin, stdinKeys, \"contents\", mustBeStringOrUint8Array);\n    let resolveDir = getFlag(stdin, stdinKeys, \"resolveDir\", mustBeString);\n    let sourcefile = getFlag(stdin, stdinKeys, \"sourcefile\", mustBeString);\n    let loader2 = getFlag(stdin, stdinKeys, \"loader\", mustBeString);\n    checkForInvalidFlags(stdin, stdinKeys, 'in \"stdin\" object');\n    if (sourcefile) flags.push(`--sourcefile=${sourcefile}`);\n    if (loader2) flags.push(`--loader=${loader2}`);\n    if (resolveDir) stdinResolveDir = resolveDir;\n    if (typeof contents === \"string\") stdinContents = encodeUTF8(contents);\n    else if (contents instanceof Uint8Array) stdinContents = contents;\n  }\n  let nodePaths = [];\n  if (nodePathsInput) {\n    for (let value of nodePathsInput) {\n      value += \"\";\n      nodePaths.push(value);\n    }\n  }\n  return {\n    entries,\n    flags,\n    write,\n    stdinContents,\n    stdinResolveDir,\n    absWorkingDir,\n    nodePaths,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\nfunction flagsForTransformOptions(callName, options, isTTY, logLevelDefault) {\n  let flags = [];\n  let keys = /* @__PURE__ */ Object.create(null);\n  pushLogFlags(flags, options, keys, isTTY, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let sourcefile = getFlag(options, keys, \"sourcefile\", mustBeString);\n  let loader = getFlag(options, keys, \"loader\", mustBeString);\n  let banner = getFlag(options, keys, \"banner\", mustBeString);\n  let footer = getFlag(options, keys, \"footer\", mustBeString);\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap) flags.push(`--sourcemap=${sourcemap === true ? \"external\" : sourcemap}`);\n  if (sourcefile) flags.push(`--sourcefile=${sourcefile}`);\n  if (loader) flags.push(`--loader=${loader}`);\n  if (banner) flags.push(`--banner=${banner}`);\n  if (footer) flags.push(`--footer=${footer}`);\n  return {\n    flags,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\nfunction createChannel(streamIn) {\n  const requestCallbacksByKey = {};\n  const closeData = { didClose: false, reason: \"\" };\n  let responseCallbacks = {};\n  let nextRequestID = 0;\n  let nextBuildKey = 0;\n  let stdout = new Uint8Array(16 * 1024);\n  let stdoutUsed = 0;\n  let readFromStdout = (chunk) => {\n    let limit = stdoutUsed + chunk.length;\n    if (limit > stdout.length) {\n      let swap = new Uint8Array(limit * 2);\n      swap.set(stdout);\n      stdout = swap;\n    }\n    stdout.set(chunk, stdoutUsed);\n    stdoutUsed += chunk.length;\n    let offset = 0;\n    while (offset + 4 <= stdoutUsed) {\n      let length = readUInt32LE(stdout, offset);\n      if (offset + 4 + length > stdoutUsed) {\n        break;\n      }\n      offset += 4;\n      handleIncomingPacket(stdout.subarray(offset, offset + length));\n      offset += length;\n    }\n    if (offset > 0) {\n      stdout.copyWithin(0, offset, stdoutUsed);\n      stdoutUsed -= offset;\n    }\n  };\n  let afterClose = (error) => {\n    closeData.didClose = true;\n    if (error) closeData.reason = \": \" + (error.message || error);\n    const text = \"The service was stopped\" + closeData.reason;\n    for (let id in responseCallbacks) {\n      responseCallbacks[id](text, null);\n    }\n    responseCallbacks = {};\n  };\n  let sendRequest = (refs, value, callback) => {\n    if (closeData.didClose) return callback(\"The service is no longer running\" + closeData.reason, null);\n    let id = nextRequestID++;\n    responseCallbacks[id] = (error, response) => {\n      try {\n        callback(error, response);\n      } finally {\n        if (refs) refs.unref();\n      }\n    };\n    if (refs) refs.ref();\n    streamIn.writeToStdin(encodePacket({ id, isRequest: true, value }));\n  };\n  let sendResponse = (id, value) => {\n    if (closeData.didClose) throw new Error(\"The service is no longer running\" + closeData.reason);\n    streamIn.writeToStdin(encodePacket({ id, isRequest: false, value }));\n  };\n  let handleRequest = (id, request) => __async(null, null, function* () {\n    try {\n      if (request.command === \"ping\") {\n        sendResponse(id, {});\n        return;\n      }\n      if (typeof request.key === \"number\") {\n        const requestCallbacks = requestCallbacksByKey[request.key];\n        if (!requestCallbacks) {\n          return;\n        }\n        const callback = requestCallbacks[request.command];\n        if (callback) {\n          yield callback(id, request);\n          return;\n        }\n      }\n      throw new Error(`Invalid command: ` + request.command);\n    } catch (e) {\n      const errors = [extractErrorMessageV8(e, streamIn, null, void 0, \"\")];\n      try {\n        sendResponse(id, { errors });\n      } catch (e2) {\n      }\n    }\n  });\n  let isFirstPacket = true;\n  let handleIncomingPacket = (bytes) => {\n    if (isFirstPacket) {\n      isFirstPacket = false;\n      let binaryVersion = String.fromCharCode(...bytes);\n      if (binaryVersion !== \"0.25.11\") {\n        throw new Error(`Cannot start service: Host version \"${\"0.25.11\"}\" does not match binary version ${quote(binaryVersion)}`);\n      }\n      return;\n    }\n    let packet = decodePacket(bytes);\n    if (packet.isRequest) {\n      handleRequest(packet.id, packet.value);\n    } else {\n      let callback = responseCallbacks[packet.id];\n      delete responseCallbacks[packet.id];\n      if (packet.value.error) callback(packet.value.error, {});\n      else callback(null, packet.value);\n    }\n  };\n  let buildOrContext = ({ callName, refs, options, isTTY, defaultWD, callback }) => {\n    let refCount = 0;\n    const buildKey = nextBuildKey++;\n    const requestCallbacks = {};\n    const buildRefs = {\n      ref() {\n        if (++refCount === 1) {\n          if (refs) refs.ref();\n        }\n      },\n      unref() {\n        if (--refCount === 0) {\n          delete requestCallbacksByKey[buildKey];\n          if (refs) refs.unref();\n        }\n      }\n    };\n    requestCallbacksByKey[buildKey] = requestCallbacks;\n    buildRefs.ref();\n    buildOrContextImpl(\n      callName,\n      buildKey,\n      sendRequest,\n      sendResponse,\n      buildRefs,\n      streamIn,\n      requestCallbacks,\n      options,\n      isTTY,\n      defaultWD,\n      (err, res) => {\n        try {\n          callback(err, res);\n        } finally {\n          buildRefs.unref();\n        }\n      }\n    );\n  };\n  let transform2 = ({ callName, refs, input, options, isTTY, fs, callback }) => {\n    const details = createObjectStash();\n    let start = (inputPath) => {\n      try {\n        if (typeof input !== \"string\" && !(input instanceof Uint8Array))\n          throw new Error('The input to \"transform\" must be a string or a Uint8Array');\n        let {\n          flags,\n          mangleCache\n        } = flagsForTransformOptions(callName, options, isTTY, transformLogLevelDefault);\n        let request = {\n          command: \"transform\",\n          flags,\n          inputFS: inputPath !== null,\n          input: inputPath !== null ? encodeUTF8(inputPath) : typeof input === \"string\" ? encodeUTF8(input) : input\n        };\n        if (mangleCache) request.mangleCache = mangleCache;\n        sendRequest(refs, request, (error, response) => {\n          if (error) return callback(new Error(error), null);\n          let errors = replaceDetailsInMessages(response.errors, details);\n          let warnings = replaceDetailsInMessages(response.warnings, details);\n          let outstanding = 1;\n          let next = () => {\n            if (--outstanding === 0) {\n              let result = {\n                warnings,\n                code: response.code,\n                map: response.map,\n                mangleCache: void 0,\n                legalComments: void 0\n              };\n              if (\"legalComments\" in response) result.legalComments = response == null ? void 0 : response.legalComments;\n              if (response.mangleCache) result.mangleCache = response == null ? void 0 : response.mangleCache;\n              callback(null, result);\n            }\n          };\n          if (errors.length > 0) return callback(failureErrorWithLog(\"Transform failed\", errors, warnings), null);\n          if (response.codeFS) {\n            outstanding++;\n            fs.readFile(response.code, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.code = contents;\n                next();\n              }\n            });\n          }\n          if (response.mapFS) {\n            outstanding++;\n            fs.readFile(response.map, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.map = contents;\n                next();\n              }\n            });\n          }\n          next();\n        });\n      } catch (e) {\n        let flags = [];\n        try {\n          pushLogFlags(flags, options, {}, isTTY, transformLogLevelDefault);\n        } catch (e2) {\n        }\n        const error = extractErrorMessageV8(e, streamIn, details, void 0, \"\");\n        sendRequest(refs, { command: \"error\", flags, error }, () => {\n          error.detail = details.load(error.detail);\n          callback(failureErrorWithLog(\"Transform failed\", [error], []), null);\n        });\n      }\n    };\n    if ((typeof input === \"string\" || input instanceof Uint8Array) && input.length > 1024 * 1024) {\n      let next = start;\n      start = () => fs.writeFile(input, next);\n    }\n    start(null);\n  };\n  let formatMessages2 = ({ callName, refs, messages, options, callback }) => {\n    if (!options) throw new Error(`Missing second argument in ${callName}() call`);\n    let keys = {};\n    let kind = getFlag(options, keys, \"kind\", mustBeString);\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let terminalWidth = getFlag(options, keys, \"terminalWidth\", mustBeInteger);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    if (kind === void 0) throw new Error(`Missing \"kind\" in ${callName}() call`);\n    if (kind !== \"error\" && kind !== \"warning\") throw new Error(`Expected \"kind\" to be \"error\" or \"warning\" in ${callName}() call`);\n    let request = {\n      command: \"format-msgs\",\n      messages: sanitizeMessages(messages, \"messages\", null, \"\", terminalWidth),\n      isWarning: kind === \"warning\"\n    };\n    if (color !== void 0) request.color = color;\n    if (terminalWidth !== void 0) request.terminalWidth = terminalWidth;\n    sendRequest(refs, request, (error, response) => {\n      if (error) return callback(new Error(error), null);\n      callback(null, response.messages);\n    });\n  };\n  let analyzeMetafile2 = ({ callName, refs, metafile, options, callback }) => {\n    if (options === void 0) options = {};\n    let keys = {};\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let verbose = getFlag(options, keys, \"verbose\", mustBeBoolean);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    let request = {\n      command: \"analyze-metafile\",\n      metafile\n    };\n    if (color !== void 0) request.color = color;\n    if (verbose !== void 0) request.verbose = verbose;\n    sendRequest(refs, request, (error, response) => {\n      if (error) return callback(new Error(error), null);\n      callback(null, response.result);\n    });\n  };\n  return {\n    readFromStdout,\n    afterClose,\n    service: {\n      buildOrContext,\n      transform: transform2,\n      formatMessages: formatMessages2,\n      analyzeMetafile: analyzeMetafile2\n    }\n  };\n}\nfunction buildOrContextImpl(callName, buildKey, sendRequest, sendResponse, refs, streamIn, requestCallbacks, options, isTTY, defaultWD, callback) {\n  const details = createObjectStash();\n  const isContext = callName === \"context\";\n  const handleError = (e, pluginName) => {\n    const flags = [];\n    try {\n      pushLogFlags(flags, options, {}, isTTY, buildLogLevelDefault);\n    } catch (e2) {\n    }\n    const message = extractErrorMessageV8(e, streamIn, details, void 0, pluginName);\n    sendRequest(refs, { command: \"error\", flags, error: message }, () => {\n      message.detail = details.load(message.detail);\n      callback(failureErrorWithLog(isContext ? \"Context failed\" : \"Build failed\", [message], []), null);\n    });\n  };\n  let plugins;\n  if (typeof options === \"object\") {\n    const value = options.plugins;\n    if (value !== void 0) {\n      if (!Array.isArray(value)) return handleError(new Error(`\"plugins\" must be an array`), \"\");\n      plugins = value;\n    }\n  }\n  if (plugins && plugins.length > 0) {\n    if (streamIn.isSync) return handleError(new Error(\"Cannot use plugins in synchronous API calls\"), \"\");\n    handlePlugins(\n      buildKey,\n      sendRequest,\n      sendResponse,\n      refs,\n      streamIn,\n      requestCallbacks,\n      options,\n      plugins,\n      details\n    ).then(\n      (result) => {\n        if (!result.ok) return handleError(result.error, result.pluginName);\n        try {\n          buildOrContextContinue(result.requestPlugins, result.runOnEndCallbacks, result.scheduleOnDisposeCallbacks);\n        } catch (e) {\n          handleError(e, \"\");\n        }\n      },\n      (e) => handleError(e, \"\")\n    );\n    return;\n  }\n  try {\n    buildOrContextContinue(null, (result, done) => done([], []), () => {\n    });\n  } catch (e) {\n    handleError(e, \"\");\n  }\n  function buildOrContextContinue(requestPlugins, runOnEndCallbacks, scheduleOnDisposeCallbacks) {\n    const writeDefault = streamIn.hasFS;\n    const {\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir,\n      nodePaths,\n      mangleCache\n    } = flagsForBuildOptions(callName, options, isTTY, buildLogLevelDefault, writeDefault);\n    if (write && !streamIn.hasFS) throw new Error(`The \"write\" option is unavailable in this environment`);\n    const request = {\n      command: \"build\",\n      key: buildKey,\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir: absWorkingDir || defaultWD,\n      nodePaths,\n      context: isContext\n    };\n    if (requestPlugins) request.plugins = requestPlugins;\n    if (mangleCache) request.mangleCache = mangleCache;\n    const buildResponseToResult = (response, callback2) => {\n      const result = {\n        errors: replaceDetailsInMessages(response.errors, details),\n        warnings: replaceDetailsInMessages(response.warnings, details),\n        outputFiles: void 0,\n        metafile: void 0,\n        mangleCache: void 0\n      };\n      const originalErrors = result.errors.slice();\n      const originalWarnings = result.warnings.slice();\n      if (response.outputFiles) result.outputFiles = response.outputFiles.map(convertOutputFiles);\n      if (response.metafile) result.metafile = JSON.parse(response.metafile);\n      if (response.mangleCache) result.mangleCache = response.mangleCache;\n      if (response.writeToStdout !== void 0) console.log(decodeUTF8(response.writeToStdout).replace(/\\n$/, \"\"));\n      runOnEndCallbacks(result, (onEndErrors, onEndWarnings) => {\n        if (originalErrors.length > 0 || onEndErrors.length > 0) {\n          const error = failureErrorWithLog(\"Build failed\", originalErrors.concat(onEndErrors), originalWarnings.concat(onEndWarnings));\n          return callback2(error, null, onEndErrors, onEndWarnings);\n        }\n        callback2(null, result, onEndErrors, onEndWarnings);\n      });\n    };\n    let latestResultPromise;\n    let provideLatestResult;\n    if (isContext)\n      requestCallbacks[\"on-end\"] = (id, request2) => new Promise((resolve) => {\n        buildResponseToResult(request2, (err, result, onEndErrors, onEndWarnings) => {\n          const response = {\n            errors: onEndErrors,\n            warnings: onEndWarnings\n          };\n          if (provideLatestResult) provideLatestResult(err, result);\n          latestResultPromise = void 0;\n          provideLatestResult = void 0;\n          sendResponse(id, response);\n          resolve();\n        });\n      });\n    sendRequest(refs, request, (error, response) => {\n      if (error) return callback(new Error(error), null);\n      if (!isContext) {\n        return buildResponseToResult(response, (err, res) => {\n          scheduleOnDisposeCallbacks();\n          return callback(err, res);\n        });\n      }\n      if (response.errors.length > 0) {\n        return callback(failureErrorWithLog(\"Context failed\", response.errors, response.warnings), null);\n      }\n      let didDispose = false;\n      const result = {\n        rebuild: () => {\n          if (!latestResultPromise) latestResultPromise = new Promise((resolve, reject) => {\n            let settlePromise;\n            provideLatestResult = (err, result2) => {\n              if (!settlePromise) settlePromise = () => err ? reject(err) : resolve(result2);\n            };\n            const triggerAnotherBuild = () => {\n              const request2 = {\n                command: \"rebuild\",\n                key: buildKey\n              };\n              sendRequest(refs, request2, (error2, response2) => {\n                if (error2) {\n                  reject(new Error(error2));\n                } else if (settlePromise) {\n                  settlePromise();\n                } else {\n                  triggerAnotherBuild();\n                }\n              });\n            };\n            triggerAnotherBuild();\n          });\n          return latestResultPromise;\n        },\n        watch: (options2 = {}) => new Promise((resolve, reject) => {\n          if (!streamIn.hasFS) throw new Error(`Cannot use the \"watch\" API in this environment`);\n          const keys = {};\n          const delay = getFlag(options2, keys, \"delay\", mustBeInteger);\n          checkForInvalidFlags(options2, keys, `in watch() call`);\n          const request2 = {\n            command: \"watch\",\n            key: buildKey\n          };\n          if (delay) request2.delay = delay;\n          sendRequest(refs, request2, (error2) => {\n            if (error2) reject(new Error(error2));\n            else resolve(void 0);\n          });\n        }),\n        serve: (options2 = {}) => new Promise((resolve, reject) => {\n          if (!streamIn.hasFS) throw new Error(`Cannot use the \"serve\" API in this environment`);\n          const keys = {};\n          const port = getFlag(options2, keys, \"port\", mustBeValidPortNumber);\n          const host = getFlag(options2, keys, \"host\", mustBeString);\n          const servedir = getFlag(options2, keys, \"servedir\", mustBeString);\n          const keyfile = getFlag(options2, keys, \"keyfile\", mustBeString);\n          const certfile = getFlag(options2, keys, \"certfile\", mustBeString);\n          const fallback = getFlag(options2, keys, \"fallback\", mustBeString);\n          const cors = getFlag(options2, keys, \"cors\", mustBeObject);\n          const onRequest = getFlag(options2, keys, \"onRequest\", mustBeFunction);\n          checkForInvalidFlags(options2, keys, `in serve() call`);\n          const request2 = {\n            command: \"serve\",\n            key: buildKey,\n            onRequest: !!onRequest\n          };\n          if (port !== void 0) request2.port = port;\n          if (host !== void 0) request2.host = host;\n          if (servedir !== void 0) request2.servedir = servedir;\n          if (keyfile !== void 0) request2.keyfile = keyfile;\n          if (certfile !== void 0) request2.certfile = certfile;\n          if (fallback !== void 0) request2.fallback = fallback;\n          if (cors) {\n            const corsKeys = {};\n            const origin = getFlag(cors, corsKeys, \"origin\", mustBeStringOrArrayOfStrings);\n            checkForInvalidFlags(cors, corsKeys, `on \"cors\" object`);\n            if (Array.isArray(origin)) request2.corsOrigin = origin;\n            else if (origin !== void 0) request2.corsOrigin = [origin];\n          }\n          sendRequest(refs, request2, (error2, response2) => {\n            if (error2) return reject(new Error(error2));\n            if (onRequest) {\n              requestCallbacks[\"serve-request\"] = (id, request3) => {\n                onRequest(request3.args);\n                sendResponse(id, {});\n              };\n            }\n            resolve(response2);\n          });\n        }),\n        cancel: () => new Promise((resolve) => {\n          if (didDispose) return resolve();\n          const request2 = {\n            command: \"cancel\",\n            key: buildKey\n          };\n          sendRequest(refs, request2, () => {\n            resolve();\n          });\n        }),\n        dispose: () => new Promise((resolve) => {\n          if (didDispose) return resolve();\n          didDispose = true;\n          const request2 = {\n            command: \"dispose\",\n            key: buildKey\n          };\n          sendRequest(refs, request2, () => {\n            resolve();\n            scheduleOnDisposeCallbacks();\n            refs.unref();\n          });\n        })\n      };\n      refs.ref();\n      callback(null, result);\n    });\n  }\n}\nvar handlePlugins = (buildKey, sendRequest, sendResponse, refs, streamIn, requestCallbacks, initialOptions, plugins, details) => __async(null, null, function* () {\n  let onStartCallbacks = [];\n  let onEndCallbacks = [];\n  let onResolveCallbacks = {};\n  let onLoadCallbacks = {};\n  let onDisposeCallbacks = [];\n  let nextCallbackID = 0;\n  let i = 0;\n  let requestPlugins = [];\n  let isSetupDone = false;\n  plugins = [...plugins];\n  for (let item of plugins) {\n    let keys = {};\n    if (typeof item !== \"object\") throw new Error(`Plugin at index ${i} must be an object`);\n    const name = getFlag(item, keys, \"name\", mustBeString);\n    if (typeof name !== \"string\" || name === \"\") throw new Error(`Plugin at index ${i} is missing a name`);\n    try {\n      let setup = getFlag(item, keys, \"setup\", mustBeFunction);\n      if (typeof setup !== \"function\") throw new Error(`Plugin is missing a setup function`);\n      checkForInvalidFlags(item, keys, `on plugin ${quote(name)}`);\n      let plugin = {\n        name,\n        onStart: false,\n        onEnd: false,\n        onResolve: [],\n        onLoad: []\n      };\n      i++;\n      let resolve = (path, options = {}) => {\n        if (!isSetupDone) throw new Error('Cannot call \"resolve\" before plugin setup has completed');\n        if (typeof path !== \"string\") throw new Error(`The path to resolve must be a string`);\n        let keys2 = /* @__PURE__ */ Object.create(null);\n        let pluginName = getFlag(options, keys2, \"pluginName\", mustBeString);\n        let importer = getFlag(options, keys2, \"importer\", mustBeString);\n        let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n        let resolveDir = getFlag(options, keys2, \"resolveDir\", mustBeString);\n        let kind = getFlag(options, keys2, \"kind\", mustBeString);\n        let pluginData = getFlag(options, keys2, \"pluginData\", canBeAnything);\n        let importAttributes = getFlag(options, keys2, \"with\", mustBeObject);\n        checkForInvalidFlags(options, keys2, \"in resolve() call\");\n        return new Promise((resolve2, reject) => {\n          const request = {\n            command: \"resolve\",\n            path,\n            key: buildKey,\n            pluginName: name\n          };\n          if (pluginName != null) request.pluginName = pluginName;\n          if (importer != null) request.importer = importer;\n          if (namespace != null) request.namespace = namespace;\n          if (resolveDir != null) request.resolveDir = resolveDir;\n          if (kind != null) request.kind = kind;\n          else throw new Error(`Must specify \"kind\" when calling \"resolve\"`);\n          if (pluginData != null) request.pluginData = details.store(pluginData);\n          if (importAttributes != null) request.with = sanitizeStringMap(importAttributes, \"with\");\n          sendRequest(refs, request, (error, response) => {\n            if (error !== null) reject(new Error(error));\n            else resolve2({\n              errors: replaceDetailsInMessages(response.errors, details),\n              warnings: replaceDetailsInMessages(response.warnings, details),\n              path: response.path,\n              external: response.external,\n              sideEffects: response.sideEffects,\n              namespace: response.namespace,\n              suffix: response.suffix,\n              pluginData: details.load(response.pluginData)\n            });\n          });\n        });\n      };\n      let promise = setup({\n        initialOptions,\n        resolve,\n        onStart(callback) {\n          let registeredText = `This error came from the \"onStart\" callback registered here:`;\n          let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onStart\");\n          onStartCallbacks.push({ name, callback, note: registeredNote });\n          plugin.onStart = true;\n        },\n        onEnd(callback) {\n          let registeredText = `This error came from the \"onEnd\" callback registered here:`;\n          let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onEnd\");\n          onEndCallbacks.push({ name, callback, note: registeredNote });\n          plugin.onEnd = true;\n        },\n        onResolve(options, callback) {\n          let registeredText = `This error came from the \"onResolve\" callback registered here:`;\n          let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onResolve\");\n          let keys2 = {};\n          let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n          let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n          checkForInvalidFlags(options, keys2, `in onResolve() call for plugin ${quote(name)}`);\n          if (filter == null) throw new Error(`onResolve() call is missing a filter`);\n          let id = nextCallbackID++;\n          onResolveCallbacks[id] = { name, callback, note: registeredNote };\n          plugin.onResolve.push({ id, filter: jsRegExpToGoRegExp(filter), namespace: namespace || \"\" });\n        },\n        onLoad(options, callback) {\n          let registeredText = `This error came from the \"onLoad\" callback registered here:`;\n          let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onLoad\");\n          let keys2 = {};\n          let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n          let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n          checkForInvalidFlags(options, keys2, `in onLoad() call for plugin ${quote(name)}`);\n          if (filter == null) throw new Error(`onLoad() call is missing a filter`);\n          let id = nextCallbackID++;\n          onLoadCallbacks[id] = { name, callback, note: registeredNote };\n          plugin.onLoad.push({ id, filter: jsRegExpToGoRegExp(filter), namespace: namespace || \"\" });\n        },\n        onDispose(callback) {\n          onDisposeCallbacks.push(callback);\n        },\n        esbuild: streamIn.esbuild\n      });\n      if (promise) yield promise;\n      requestPlugins.push(plugin);\n    } catch (e) {\n      return { ok: false, error: e, pluginName: name };\n    }\n  }\n  requestCallbacks[\"on-start\"] = (id, request) => __async(null, null, function* () {\n    details.clear();\n    let response = { errors: [], warnings: [] };\n    yield Promise.all(onStartCallbacks.map((_0) => __async(null, [_0], function* ({ name, callback, note }) {\n      try {\n        let result = yield callback();\n        if (result != null) {\n          if (typeof result !== \"object\") throw new Error(`Expected onStart() callback in plugin ${quote(name)} to return an object`);\n          let keys = {};\n          let errors = getFlag(result, keys, \"errors\", mustBeArray);\n          let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n          checkForInvalidFlags(result, keys, `from onStart() callback in plugin ${quote(name)}`);\n          if (errors != null) response.errors.push(...sanitizeMessages(errors, \"errors\", details, name, void 0));\n          if (warnings != null) response.warnings.push(...sanitizeMessages(warnings, \"warnings\", details, name, void 0));\n        }\n      } catch (e) {\n        response.errors.push(extractErrorMessageV8(e, streamIn, details, note && note(), name));\n      }\n    })));\n    sendResponse(id, response);\n  });\n  requestCallbacks[\"on-resolve\"] = (id, request) => __async(null, null, function* () {\n    let response = {}, name = \"\", callback, note;\n    for (let id2 of request.ids) {\n      try {\n        ({ name, callback, note } = onResolveCallbacks[id2]);\n        let result = yield callback({\n          path: request.path,\n          importer: request.importer,\n          namespace: request.namespace,\n          resolveDir: request.resolveDir,\n          kind: request.kind,\n          pluginData: details.load(request.pluginData),\n          with: request.with\n        });\n        if (result != null) {\n          if (typeof result !== \"object\") throw new Error(`Expected onResolve() callback in plugin ${quote(name)} to return an object`);\n          let keys = {};\n          let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n          let path = getFlag(result, keys, \"path\", mustBeString);\n          let namespace = getFlag(result, keys, \"namespace\", mustBeString);\n          let suffix = getFlag(result, keys, \"suffix\", mustBeString);\n          let external = getFlag(result, keys, \"external\", mustBeBoolean);\n          let sideEffects = getFlag(result, keys, \"sideEffects\", mustBeBoolean);\n          let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n          let errors = getFlag(result, keys, \"errors\", mustBeArray);\n          let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n          let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArrayOfStrings);\n          let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArrayOfStrings);\n          checkForInvalidFlags(result, keys, `from onResolve() callback in plugin ${quote(name)}`);\n          response.id = id2;\n          if (pluginName != null) response.pluginName = pluginName;\n          if (path != null) response.path = path;\n          if (namespace != null) response.namespace = namespace;\n          if (suffix != null) response.suffix = suffix;\n          if (external != null) response.external = external;\n          if (sideEffects != null) response.sideEffects = sideEffects;\n          if (pluginData != null) response.pluginData = details.store(pluginData);\n          if (errors != null) response.errors = sanitizeMessages(errors, \"errors\", details, name, void 0);\n          if (warnings != null) response.warnings = sanitizeMessages(warnings, \"warnings\", details, name, void 0);\n          if (watchFiles != null) response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n          if (watchDirs != null) response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n          break;\n        }\n      } catch (e) {\n        response = { id: id2, errors: [extractErrorMessageV8(e, streamIn, details, note && note(), name)] };\n        break;\n      }\n    }\n    sendResponse(id, response);\n  });\n  requestCallbacks[\"on-load\"] = (id, request) => __async(null, null, function* () {\n    let response = {}, name = \"\", callback, note;\n    for (let id2 of request.ids) {\n      try {\n        ({ name, callback, note } = onLoadCallbacks[id2]);\n        let result = yield callback({\n          path: request.path,\n          namespace: request.namespace,\n          suffix: request.suffix,\n          pluginData: details.load(request.pluginData),\n          with: request.with\n        });\n        if (result != null) {\n          if (typeof result !== \"object\") throw new Error(`Expected onLoad() callback in plugin ${quote(name)} to return an object`);\n          let keys = {};\n          let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n          let contents = getFlag(result, keys, \"contents\", mustBeStringOrUint8Array);\n          let resolveDir = getFlag(result, keys, \"resolveDir\", mustBeString);\n          let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n          let loader = getFlag(result, keys, \"loader\", mustBeString);\n          let errors = getFlag(result, keys, \"errors\", mustBeArray);\n          let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n          let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArrayOfStrings);\n          let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArrayOfStrings);\n          checkForInvalidFlags(result, keys, `from onLoad() callback in plugin ${quote(name)}`);\n          response.id = id2;\n          if (pluginName != null) response.pluginName = pluginName;\n          if (contents instanceof Uint8Array) response.contents = contents;\n          else if (contents != null) response.contents = encodeUTF8(contents);\n          if (resolveDir != null) response.resolveDir = resolveDir;\n          if (pluginData != null) response.pluginData = details.store(pluginData);\n          if (loader != null) response.loader = loader;\n          if (errors != null) response.errors = sanitizeMessages(errors, \"errors\", details, name, void 0);\n          if (warnings != null) response.warnings = sanitizeMessages(warnings, \"warnings\", details, name, void 0);\n          if (watchFiles != null) response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n          if (watchDirs != null) response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n          break;\n        }\n      } catch (e) {\n        response = { id: id2, errors: [extractErrorMessageV8(e, streamIn, details, note && note(), name)] };\n        break;\n      }\n    }\n    sendResponse(id, response);\n  });\n  let runOnEndCallbacks = (result, done) => done([], []);\n  if (onEndCallbacks.length > 0) {\n    runOnEndCallbacks = (result, done) => {\n      (() => __async(null, null, function* () {\n        const onEndErrors = [];\n        const onEndWarnings = [];\n        for (const { name, callback, note } of onEndCallbacks) {\n          let newErrors;\n          let newWarnings;\n          try {\n            const value = yield callback(result);\n            if (value != null) {\n              if (typeof value !== \"object\") throw new Error(`Expected onEnd() callback in plugin ${quote(name)} to return an object`);\n              let keys = {};\n              let errors = getFlag(value, keys, \"errors\", mustBeArray);\n              let warnings = getFlag(value, keys, \"warnings\", mustBeArray);\n              checkForInvalidFlags(value, keys, `from onEnd() callback in plugin ${quote(name)}`);\n              if (errors != null) newErrors = sanitizeMessages(errors, \"errors\", details, name, void 0);\n              if (warnings != null) newWarnings = sanitizeMessages(warnings, \"warnings\", details, name, void 0);\n            }\n          } catch (e) {\n            newErrors = [extractErrorMessageV8(e, streamIn, details, note && note(), name)];\n          }\n          if (newErrors) {\n            onEndErrors.push(...newErrors);\n            try {\n              result.errors.push(...newErrors);\n            } catch (e) {\n            }\n          }\n          if (newWarnings) {\n            onEndWarnings.push(...newWarnings);\n            try {\n              result.warnings.push(...newWarnings);\n            } catch (e) {\n            }\n          }\n        }\n        done(onEndErrors, onEndWarnings);\n      }))();\n    };\n  }\n  let scheduleOnDisposeCallbacks = () => {\n    for (const cb of onDisposeCallbacks) {\n      setTimeout(() => cb(), 0);\n    }\n  };\n  isSetupDone = true;\n  return {\n    ok: true,\n    requestPlugins,\n    runOnEndCallbacks,\n    scheduleOnDisposeCallbacks\n  };\n});\nfunction createObjectStash() {\n  const map = /* @__PURE__ */ new Map();\n  let nextID = 0;\n  return {\n    clear() {\n      map.clear();\n    },\n    load(id) {\n      return map.get(id);\n    },\n    store(value) {\n      if (value === void 0) return -1;\n      const id = nextID++;\n      map.set(id, value);\n      return id;\n    }\n  };\n}\nfunction extractCallerV8(e, streamIn, ident) {\n  let note;\n  let tried = false;\n  return () => {\n    if (tried) return note;\n    tried = true;\n    try {\n      let lines = (e.stack + \"\").split(\"\\n\");\n      lines.splice(1, 1);\n      let location2 = parseStackLinesV8(streamIn, lines, ident);\n      if (location2) {\n        note = { text: e.message, location: location2 };\n        return note;\n      }\n    } catch (e2) {\n    }\n  };\n}\nfunction extractErrorMessageV8(e, streamIn, stash, note, pluginName) {\n  let text = \"Internal error\";\n  let location2 = null;\n  try {\n    text = (e && e.message || e) + \"\";\n  } catch (e2) {\n  }\n  try {\n    location2 = parseStackLinesV8(streamIn, (e.stack + \"\").split(\"\\n\"), \"\");\n  } catch (e2) {\n  }\n  return { id: \"\", pluginName, text, location: location2, notes: note ? [note] : [], detail: stash ? stash.store(e) : -1 };\n}\nfunction parseStackLinesV8(streamIn, lines, ident) {\n  let at = \"    at \";\n  if (streamIn.readFileSync && !lines[0].startsWith(at) && lines[1].startsWith(at)) {\n    for (let i = 1; i < lines.length; i++) {\n      let line = lines[i];\n      if (!line.startsWith(at)) continue;\n      line = line.slice(at.length);\n      while (true) {\n        let match = /^(?:new |async )?\\S+ \\((.*)\\)$/.exec(line);\n        if (match) {\n          line = match[1];\n          continue;\n        }\n        match = /^eval at \\S+ \\((.*)\\)(?:, \\S+:\\d+:\\d+)?$/.exec(line);\n        if (match) {\n          line = match[1];\n          continue;\n        }\n        match = /^(\\S+):(\\d+):(\\d+)$/.exec(line);\n        if (match) {\n          let contents;\n          try {\n            contents = streamIn.readFileSync(match[1], \"utf8\");\n          } catch (e) {\n            break;\n          }\n          let lineText = contents.split(/\\r\\n|\\r|\\n|\\u2028|\\u2029/)[+match[2] - 1] || \"\";\n          let column = +match[3] - 1;\n          let length = lineText.slice(column, column + ident.length) === ident ? ident.length : 0;\n          return {\n            file: match[1],\n            namespace: \"file\",\n            line: +match[2],\n            column: encodeUTF8(lineText.slice(0, column)).length,\n            length: encodeUTF8(lineText.slice(column, column + length)).length,\n            lineText: lineText + \"\\n\" + lines.slice(1).join(\"\\n\"),\n            suggestion: \"\"\n          };\n        }\n        break;\n      }\n    }\n  }\n  return null;\n}\nfunction failureErrorWithLog(text, errors, warnings) {\n  let limit = 5;\n  text += errors.length < 1 ? \"\" : ` with ${errors.length} error${errors.length < 2 ? \"\" : \"s\"}:` + errors.slice(0, limit + 1).map((e, i) => {\n    if (i === limit) return \"\\n...\";\n    if (!e.location) return `\nerror: ${e.text}`;\n    let { file, line, column } = e.location;\n    let pluginText = e.pluginName ? `[plugin: ${e.pluginName}] ` : \"\";\n    return `\n${file}:${line}:${column}: ERROR: ${pluginText}${e.text}`;\n  }).join(\"\");\n  let error = new Error(text);\n  for (const [key, value] of [[\"errors\", errors], [\"warnings\", warnings]]) {\n    Object.defineProperty(error, key, {\n      configurable: true,\n      enumerable: true,\n      get: () => value,\n      set: (value2) => Object.defineProperty(error, key, {\n        configurable: true,\n        enumerable: true,\n        value: value2\n      })\n    });\n  }\n  return error;\n}\nfunction replaceDetailsInMessages(messages, stash) {\n  for (const message of messages) {\n    message.detail = stash.load(message.detail);\n  }\n  return messages;\n}\nfunction sanitizeLocation(location2, where, terminalWidth) {\n  if (location2 == null) return null;\n  let keys = {};\n  let file = getFlag(location2, keys, \"file\", mustBeString);\n  let namespace = getFlag(location2, keys, \"namespace\", mustBeString);\n  let line = getFlag(location2, keys, \"line\", mustBeInteger);\n  let column = getFlag(location2, keys, \"column\", mustBeInteger);\n  let length = getFlag(location2, keys, \"length\", mustBeInteger);\n  let lineText = getFlag(location2, keys, \"lineText\", mustBeString);\n  let suggestion = getFlag(location2, keys, \"suggestion\", mustBeString);\n  checkForInvalidFlags(location2, keys, where);\n  if (lineText) {\n    const relevantASCII = lineText.slice(\n      0,\n      (column && column > 0 ? column : 0) + (length && length > 0 ? length : 0) + (terminalWidth && terminalWidth > 0 ? terminalWidth : 80)\n    );\n    if (!/[\\x7F-\\uFFFF]/.test(relevantASCII) && !/\\n/.test(lineText)) {\n      lineText = relevantASCII;\n    }\n  }\n  return {\n    file: file || \"\",\n    namespace: namespace || \"\",\n    line: line || 0,\n    column: column || 0,\n    length: length || 0,\n    lineText: lineText || \"\",\n    suggestion: suggestion || \"\"\n  };\n}\nfunction sanitizeMessages(messages, property, stash, fallbackPluginName, terminalWidth) {\n  let messagesClone = [];\n  let index = 0;\n  for (const message of messages) {\n    let keys = {};\n    let id = getFlag(message, keys, \"id\", mustBeString);\n    let pluginName = getFlag(message, keys, \"pluginName\", mustBeString);\n    let text = getFlag(message, keys, \"text\", mustBeString);\n    let location2 = getFlag(message, keys, \"location\", mustBeObjectOrNull);\n    let notes = getFlag(message, keys, \"notes\", mustBeArray);\n    let detail = getFlag(message, keys, \"detail\", canBeAnything);\n    let where = `in element ${index} of \"${property}\"`;\n    checkForInvalidFlags(message, keys, where);\n    let notesClone = [];\n    if (notes) {\n      for (const note of notes) {\n        let noteKeys = {};\n        let noteText = getFlag(note, noteKeys, \"text\", mustBeString);\n        let noteLocation = getFlag(note, noteKeys, \"location\", mustBeObjectOrNull);\n        checkForInvalidFlags(note, noteKeys, where);\n        notesClone.push({\n          text: noteText || \"\",\n          location: sanitizeLocation(noteLocation, where, terminalWidth)\n        });\n      }\n    }\n    messagesClone.push({\n      id: id || \"\",\n      pluginName: pluginName || fallbackPluginName,\n      text: text || \"\",\n      location: sanitizeLocation(location2, where, terminalWidth),\n      notes: notesClone,\n      detail: stash ? stash.store(detail) : -1\n    });\n    index++;\n  }\n  return messagesClone;\n}\nfunction sanitizeStringArray(values, property) {\n  const result = [];\n  for (const value of values) {\n    if (typeof value !== \"string\") throw new Error(`${quote(property)} must be an array of strings`);\n    result.push(value);\n  }\n  return result;\n}\nfunction sanitizeStringMap(map, property) {\n  const result = /* @__PURE__ */ Object.create(null);\n  for (const key in map) {\n    const value = map[key];\n    if (typeof value !== \"string\") throw new Error(`key ${quote(key)} in object ${quote(property)} must be a string`);\n    result[key] = value;\n  }\n  return result;\n}\nfunction convertOutputFiles({ path, contents, hash }) {\n  let text = null;\n  return {\n    path,\n    contents,\n    hash,\n    get text() {\n      const binary = this.contents;\n      if (text === null || binary !== contents) {\n        contents = binary;\n        text = decodeUTF8(binary);\n      }\n      return text;\n    }\n  };\n}\nfunction jsRegExpToGoRegExp(regexp) {\n  let result = regexp.source;\n  if (regexp.flags) result = `(?${regexp.flags})${result}`;\n  return result;\n}\n\n// lib/npm/browser.ts\nvar version = \"0.25.11\";\nvar build = (options) => ensureServiceIsRunning().build(options);\nvar context = (options) => ensureServiceIsRunning().context(options);\nvar transform = (input, options) => ensureServiceIsRunning().transform(input, options);\nvar formatMessages = (messages, options) => ensureServiceIsRunning().formatMessages(messages, options);\nvar analyzeMetafile = (metafile, options) => ensureServiceIsRunning().analyzeMetafile(metafile, options);\nvar buildSync = () => {\n  throw new Error(`The \"buildSync\" API only works in node`);\n};\nvar transformSync = () => {\n  throw new Error(`The \"transformSync\" API only works in node`);\n};\nvar formatMessagesSync = () => {\n  throw new Error(`The \"formatMessagesSync\" API only works in node`);\n};\nvar analyzeMetafileSync = () => {\n  throw new Error(`The \"analyzeMetafileSync\" API only works in node`);\n};\nvar stop = () => {\n  if (stopService) stopService();\n  return Promise.resolve();\n};\nvar initializePromise;\nvar stopService;\nvar longLivedService;\nvar ensureServiceIsRunning = () => {\n  if (longLivedService) return longLivedService;\n  if (initializePromise) throw new Error('You need to wait for the promise returned from \"initialize\" to be resolved before calling this');\n  throw new Error('You need to call \"initialize\" before calling this');\n};\nvar initialize = (options) => {\n  options = validateInitializeOptions(options || {});\n  let wasmURL = options.wasmURL;\n  let wasmModule = options.wasmModule;\n  let useWorker = options.worker !== false;\n  if (!wasmURL && !wasmModule) throw new Error('Must provide either the \"wasmURL\" option or the \"wasmModule\" option');\n  if (initializePromise) throw new Error('Cannot call \"initialize\" more than once');\n  initializePromise = startRunningService(wasmURL || \"\", wasmModule, useWorker);\n  initializePromise.catch(() => {\n    initializePromise = void 0;\n  });\n  return initializePromise;\n};\nvar startRunningService = (wasmURL, wasmModule, useWorker) => __async(null, null, function* () {\n  let worker;\n  let rejectAllWith;\n  const rejectAllPromise = new Promise((resolve) => rejectAllWith = resolve);\n  if (useWorker) {\n    let blob = new Blob([`onmessage=${'((postMessage) => {\\n      // Copyright 2018 The Go Authors. All rights reserved.\\n      // Use of this source code is governed by a BSD-style\\n      // license that can be found in the LICENSE file.\\n      var __async = (__this, __arguments, generator) => {\\n        return new Promise((resolve, reject) => {\\n          var fulfilled = (value) => {\\n            try {\\n              step(generator.next(value));\\n            } catch (e) {\\n              reject(e);\\n            }\\n          };\\n          var rejected = (value) => {\\n            try {\\n              step(generator.throw(value));\\n            } catch (e) {\\n              reject(e);\\n            }\\n          };\\n          var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\\n          step((generator = generator.apply(__this, __arguments)).next());\\n        });\\n      };\\n      let onmessage;\\n      let globalThis = {};\\n      for (let o = self; o; o = Object.getPrototypeOf(o))\\n        for (let k of Object.getOwnPropertyNames(o))\\n          if (!(k in globalThis))\\n            Object.defineProperty(globalThis, k, { get: () => self[k] });\\n      \"use strict\";\\n      (() => {\\n        const enosys = () => {\\n          const err = new Error(\"not implemented\");\\n          err.code = \"ENOSYS\";\\n          return err;\\n        };\\n        if (!globalThis.fs) {\\n          let outputBuf = \"\";\\n          globalThis.fs = {\\n            constants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 },\\n            // unused\\n            writeSync(fd, buf) {\\n              outputBuf += decoder.decode(buf);\\n              const nl = outputBuf.lastIndexOf(\"\\\\n\");\\n              if (nl != -1) {\\n                console.log(outputBuf.substring(0, nl));\\n                outputBuf = outputBuf.substring(nl + 1);\\n              }\\n              return buf.length;\\n            },\\n            write(fd, buf, offset, length, position, callback) {\\n              if (offset !== 0 || length !== buf.length || position !== null) {\\n                callback(enosys());\\n                return;\\n              }\\n              const n = this.writeSync(fd, buf);\\n              callback(null, n);\\n            },\\n            chmod(path, mode, callback) {\\n              callback(enosys());\\n            },\\n            chown(path, uid, gid, callback) {\\n              callback(enosys());\\n            },\\n            close(fd, callback) {\\n              callback(enosys());\\n            },\\n            fchmod(fd, mode, callback) {\\n              callback(enosys());\\n            },\\n            fchown(fd, uid, gid, callback) {\\n              callback(enosys());\\n            },\\n            fstat(fd, callback) {\\n              callback(enosys());\\n            },\\n            fsync(fd, callback) {\\n              callback(null);\\n            },\\n            ftruncate(fd, length, callback) {\\n              callback(enosys());\\n            },\\n            lchown(path, uid, gid, callback) {\\n              callback(enosys());\\n            },\\n            link(path, link, callback) {\\n              callback(enosys());\\n            },\\n            lstat(path, callback) {\\n              callback(enosys());\\n            },\\n            mkdir(path, perm, callback) {\\n              callback(enosys());\\n            },\\n            open(path, flags, mode, callback) {\\n              callback(enosys());\\n            },\\n            read(fd, buffer, offset, length, position, callback) {\\n              callback(enosys());\\n            },\\n            readdir(path, callback) {\\n              callback(enosys());\\n            },\\n            readlink(path, callback) {\\n              callback(enosys());\\n            },\\n            rename(from, to, callback) {\\n              callback(enosys());\\n            },\\n            rmdir(path, callback) {\\n              callback(enosys());\\n            },\\n            stat(path, callback) {\\n              callback(enosys());\\n            },\\n            symlink(path, link, callback) {\\n              callback(enosys());\\n            },\\n            truncate(path, length, callback) {\\n              callback(enosys());\\n            },\\n            unlink(path, callback) {\\n              callback(enosys());\\n            },\\n            utimes(path, atime, mtime, callback) {\\n              callback(enosys());\\n            }\\n          };\\n        }\\n        if (!globalThis.process) {\\n          globalThis.process = {\\n            getuid() {\\n              return -1;\\n            },\\n            getgid() {\\n              return -1;\\n            },\\n            geteuid() {\\n              return -1;\\n            },\\n            getegid() {\\n              return -1;\\n            },\\n            getgroups() {\\n              throw enosys();\\n            },\\n            pid: -1,\\n            ppid: -1,\\n            umask() {\\n              throw enosys();\\n            },\\n            cwd() {\\n              throw enosys();\\n            },\\n            chdir() {\\n              throw enosys();\\n            }\\n          };\\n        }\\n        if (!globalThis.crypto) {\\n          throw new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\\n        }\\n        if (!globalThis.performance) {\\n          throw new Error(\"globalThis.performance is not available, polyfill required (performance.now only)\");\\n        }\\n        if (!globalThis.TextEncoder) {\\n          throw new Error(\"globalThis.TextEncoder is not available, polyfill required\");\\n        }\\n        if (!globalThis.TextDecoder) {\\n          throw new Error(\"globalThis.TextDecoder is not available, polyfill required\");\\n        }\\n        const encoder = new TextEncoder(\"utf-8\");\\n        const decoder = new TextDecoder(\"utf-8\");\\n        globalThis.Go = class {\\n          constructor() {\\n            this.argv = [\"js\"];\\n            this.env = {};\\n            this.exit = (code) => {\\n              if (code !== 0) {\\n                console.warn(\"exit code:\", code);\\n              }\\n            };\\n            this._exitPromise = new Promise((resolve) => {\\n              this._resolveExitPromise = resolve;\\n            });\\n            this._pendingEvent = null;\\n            this._scheduledTimeouts = /* @__PURE__ */ new Map();\\n            this._nextCallbackTimeoutID = 1;\\n            const setInt64 = (addr, v) => {\\n              this.mem.setUint32(addr + 0, v, true);\\n              this.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\\n            };\\n            const setInt32 = (addr, v) => {\\n              this.mem.setUint32(addr + 0, v, true);\\n            };\\n            const getInt64 = (addr) => {\\n              const low = this.mem.getUint32(addr + 0, true);\\n              const high = this.mem.getInt32(addr + 4, true);\\n              return low + high * 4294967296;\\n            };\\n            const loadValue = (addr) => {\\n              const f = this.mem.getFloat64(addr, true);\\n              if (f === 0) {\\n                return void 0;\\n              }\\n              if (!isNaN(f)) {\\n                return f;\\n              }\\n              const id = this.mem.getUint32(addr, true);\\n              return this._values[id];\\n            };\\n            const storeValue = (addr, v) => {\\n              const nanHead = 2146959360;\\n              if (typeof v === \"number\" && v !== 0) {\\n                if (isNaN(v)) {\\n                  this.mem.setUint32(addr + 4, nanHead, true);\\n                  this.mem.setUint32(addr, 0, true);\\n                  return;\\n                }\\n                this.mem.setFloat64(addr, v, true);\\n                return;\\n              }\\n              if (v === void 0) {\\n                this.mem.setFloat64(addr, 0, true);\\n                return;\\n              }\\n              let id = this._ids.get(v);\\n              if (id === void 0) {\\n                id = this._idPool.pop();\\n                if (id === void 0) {\\n                  id = this._values.length;\\n                }\\n                this._values[id] = v;\\n                this._goRefCounts[id] = 0;\\n                this._ids.set(v, id);\\n              }\\n              this._goRefCounts[id]++;\\n              let typeFlag = 0;\\n              switch (typeof v) {\\n                case \"object\":\\n                  if (v !== null) {\\n                    typeFlag = 1;\\n                  }\\n                  break;\\n                case \"string\":\\n                  typeFlag = 2;\\n                  break;\\n                case \"symbol\":\\n                  typeFlag = 3;\\n                  break;\\n                case \"function\":\\n                  typeFlag = 4;\\n                  break;\\n              }\\n              this.mem.setUint32(addr + 4, nanHead | typeFlag, true);\\n              this.mem.setUint32(addr, id, true);\\n            };\\n            const loadSlice = (addr) => {\\n              const array = getInt64(addr + 0);\\n              const len = getInt64(addr + 8);\\n              return new Uint8Array(this._inst.exports.mem.buffer, array, len);\\n            };\\n            const loadSliceOfValues = (addr) => {\\n              const array = getInt64(addr + 0);\\n              const len = getInt64(addr + 8);\\n              const a = new Array(len);\\n              for (let i = 0; i < len; i++) {\\n                a[i] = loadValue(array + i * 8);\\n              }\\n              return a;\\n            };\\n            const loadString = (addr) => {\\n              const saddr = getInt64(addr + 0);\\n              const len = getInt64(addr + 8);\\n              return decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\\n            };\\n            const timeOrigin = Date.now() - performance.now();\\n            this.importObject = {\\n              _gotest: {\\n                add: (a, b) => a + b\\n              },\\n              gojs: {\\n                // Go\\'s SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\\n                // may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\\n                // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\\n                // This changes the SP, thus we have to update the SP used by the imported function.\\n                // func wasmExit(code int32)\\n                \"runtime.wasmExit\": (sp) => {\\n                  sp >>>= 0;\\n                  const code = this.mem.getInt32(sp + 8, true);\\n                  this.exited = true;\\n                  delete this._inst;\\n                  delete this._values;\\n                  delete this._goRefCounts;\\n                  delete this._ids;\\n                  delete this._idPool;\\n                  this.exit(code);\\n                },\\n                // func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\\n                \"runtime.wasmWrite\": (sp) => {\\n                  sp >>>= 0;\\n                  const fd = getInt64(sp + 8);\\n                  const p = getInt64(sp + 16);\\n                  const n = this.mem.getInt32(sp + 24, true);\\n                  globalThis.fs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\\n                },\\n                // func resetMemoryDataView()\\n                \"runtime.resetMemoryDataView\": (sp) => {\\n                  sp >>>= 0;\\n                  this.mem = new DataView(this._inst.exports.mem.buffer);\\n                },\\n                // func nanotime1() int64\\n                \"runtime.nanotime1\": (sp) => {\\n                  sp >>>= 0;\\n                  setInt64(sp + 8, (timeOrigin + performance.now()) * 1e6);\\n                },\\n                // func walltime() (sec int64, nsec int32)\\n                \"runtime.walltime\": (sp) => {\\n                  sp >>>= 0;\\n                  const msec = (/* @__PURE__ */ new Date()).getTime();\\n                  setInt64(sp + 8, msec / 1e3);\\n                  this.mem.setInt32(sp + 16, msec % 1e3 * 1e6, true);\\n                },\\n                // func scheduleTimeoutEvent(delay int64) int32\\n                \"runtime.scheduleTimeoutEvent\": (sp) => {\\n                  sp >>>= 0;\\n                  const id = this._nextCallbackTimeoutID;\\n                  this._nextCallbackTimeoutID++;\\n                  this._scheduledTimeouts.set(id, setTimeout(\\n                    () => {\\n                      this._resume();\\n                      while (this._scheduledTimeouts.has(id)) {\\n                        console.warn(\"scheduleTimeoutEvent: missed timeout event\");\\n                        this._resume();\\n                      }\\n                    },\\n                    getInt64(sp + 8)\\n                  ));\\n                  this.mem.setInt32(sp + 16, id, true);\\n                },\\n                // func clearTimeoutEvent(id int32)\\n                \"runtime.clearTimeoutEvent\": (sp) => {\\n                  sp >>>= 0;\\n                  const id = this.mem.getInt32(sp + 8, true);\\n                  clearTimeout(this._scheduledTimeouts.get(id));\\n                  this._scheduledTimeouts.delete(id);\\n                },\\n                // func getRandomData(r []byte)\\n                \"runtime.getRandomData\": (sp) => {\\n                  sp >>>= 0;\\n                  crypto.getRandomValues(loadSlice(sp + 8));\\n                },\\n                // func finalizeRef(v ref)\\n                \"syscall/js.finalizeRef\": (sp) => {\\n                  sp >>>= 0;\\n                  const id = this.mem.getUint32(sp + 8, true);\\n                  this._goRefCounts[id]--;\\n                  if (this._goRefCounts[id] === 0) {\\n                    const v = this._values[id];\\n                    this._values[id] = null;\\n                    this._ids.delete(v);\\n                    this._idPool.push(id);\\n                  }\\n                },\\n                // func stringVal(value string) ref\\n                \"syscall/js.stringVal\": (sp) => {\\n                  sp >>>= 0;\\n                  storeValue(sp + 24, loadString(sp + 8));\\n                },\\n                // func valueGet(v ref, p string) ref\\n                \"syscall/js.valueGet\": (sp) => {\\n                  sp >>>= 0;\\n                  const result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\\n                  sp = this._inst.exports.getsp() >>> 0;\\n                  storeValue(sp + 32, result);\\n                },\\n                // func valueSet(v ref, p string, x ref)\\n                \"syscall/js.valueSet\": (sp) => {\\n                  sp >>>= 0;\\n                  Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\\n                },\\n                // func valueDelete(v ref, p string)\\n                \"syscall/js.valueDelete\": (sp) => {\\n                  sp >>>= 0;\\n                  Reflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\\n                },\\n                // func valueIndex(v ref, i int) ref\\n                \"syscall/js.valueIndex\": (sp) => {\\n                  sp >>>= 0;\\n                  storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\\n                },\\n                // valueSetIndex(v ref, i int, x ref)\\n                \"syscall/js.valueSetIndex\": (sp) => {\\n                  sp >>>= 0;\\n                  Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\\n                },\\n                // func valueCall(v ref, m string, args []ref) (ref, bool)\\n                \"syscall/js.valueCall\": (sp) => {\\n                  sp >>>= 0;\\n                  try {\\n                    const v = loadValue(sp + 8);\\n                    const m = Reflect.get(v, loadString(sp + 16));\\n                    const args = loadSliceOfValues(sp + 32);\\n                    const result = Reflect.apply(m, v, args);\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 56, result);\\n                    this.mem.setUint8(sp + 64, 1);\\n                  } catch (err) {\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 56, err);\\n                    this.mem.setUint8(sp + 64, 0);\\n                  }\\n                },\\n                // func valueInvoke(v ref, args []ref) (ref, bool)\\n                \"syscall/js.valueInvoke\": (sp) => {\\n                  sp >>>= 0;\\n                  try {\\n                    const v = loadValue(sp + 8);\\n                    const args = loadSliceOfValues(sp + 16);\\n                    const result = Reflect.apply(v, void 0, args);\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 40, result);\\n                    this.mem.setUint8(sp + 48, 1);\\n                  } catch (err) {\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 40, err);\\n                    this.mem.setUint8(sp + 48, 0);\\n                  }\\n                },\\n                // func valueNew(v ref, args []ref) (ref, bool)\\n                \"syscall/js.valueNew\": (sp) => {\\n                  sp >>>= 0;\\n                  try {\\n                    const v = loadValue(sp + 8);\\n                    const args = loadSliceOfValues(sp + 16);\\n                    const result = Reflect.construct(v, args);\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 40, result);\\n                    this.mem.setUint8(sp + 48, 1);\\n                  } catch (err) {\\n                    sp = this._inst.exports.getsp() >>> 0;\\n                    storeValue(sp + 40, err);\\n                    this.mem.setUint8(sp + 48, 0);\\n                  }\\n                },\\n                // func valueLength(v ref) int\\n                \"syscall/js.valueLength\": (sp) => {\\n                  sp >>>= 0;\\n                  setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\\n                },\\n                // valuePrepareString(v ref) (ref, int)\\n                \"syscall/js.valuePrepareString\": (sp) => {\\n                  sp >>>= 0;\\n                  const str = encoder.encode(String(loadValue(sp + 8)));\\n                  storeValue(sp + 16, str);\\n                  setInt64(sp + 24, str.length);\\n                },\\n                // valueLoadString(v ref, b []byte)\\n                \"syscall/js.valueLoadString\": (sp) => {\\n                  sp >>>= 0;\\n                  const str = loadValue(sp + 8);\\n                  loadSlice(sp + 16).set(str);\\n                },\\n                // func valueInstanceOf(v ref, t ref) bool\\n                \"syscall/js.valueInstanceOf\": (sp) => {\\n                  sp >>>= 0;\\n                  this.mem.setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16) ? 1 : 0);\\n                },\\n                // func copyBytesToGo(dst []byte, src ref) (int, bool)\\n                \"syscall/js.copyBytesToGo\": (sp) => {\\n                  sp >>>= 0;\\n                  const dst = loadSlice(sp + 8);\\n                  const src = loadValue(sp + 32);\\n                  if (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\\n                    this.mem.setUint8(sp + 48, 0);\\n                    return;\\n                  }\\n                  const toCopy = src.subarray(0, dst.length);\\n                  dst.set(toCopy);\\n                  setInt64(sp + 40, toCopy.length);\\n                  this.mem.setUint8(sp + 48, 1);\\n                },\\n                // func copyBytesToJS(dst ref, src []byte) (int, bool)\\n                \"syscall/js.copyBytesToJS\": (sp) => {\\n                  sp >>>= 0;\\n                  const dst = loadValue(sp + 8);\\n                  const src = loadSlice(sp + 16);\\n                  if (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\\n                    this.mem.setUint8(sp + 48, 0);\\n                    return;\\n                  }\\n                  const toCopy = src.subarray(0, dst.length);\\n                  dst.set(toCopy);\\n                  setInt64(sp + 40, toCopy.length);\\n                  this.mem.setUint8(sp + 48, 1);\\n                },\\n                \"debug\": (value) => {\\n                  console.log(value);\\n                }\\n              }\\n            };\\n          }\\n          run(instance) {\\n            return __async(this, null, function* () {\\n              if (!(instance instanceof WebAssembly.Instance)) {\\n                throw new Error(\"Go.run: WebAssembly.Instance expected\");\\n              }\\n              this._inst = instance;\\n              this.mem = new DataView(this._inst.exports.mem.buffer);\\n              this._values = [\\n                // JS values that Go currently has references to, indexed by reference id\\n                NaN,\\n                0,\\n                null,\\n                true,\\n                false,\\n                globalThis,\\n                this\\n              ];\\n              this._goRefCounts = new Array(this._values.length).fill(Infinity);\\n              this._ids = /* @__PURE__ */ new Map([\\n                // mapping from JS values to reference ids\\n                [0, 1],\\n                [null, 2],\\n                [true, 3],\\n                [false, 4],\\n                [globalThis, 5],\\n                [this, 6]\\n              ]);\\n              this._idPool = [];\\n              this.exited = false;\\n              let offset = 4096;\\n              const strPtr = (str) => {\\n                const ptr = offset;\\n                const bytes = encoder.encode(str + \"\\\\0\");\\n                new Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\\n                offset += bytes.length;\\n                if (offset % 8 !== 0) {\\n                  offset += 8 - offset % 8;\\n                }\\n                return ptr;\\n              };\\n              const argc = this.argv.length;\\n              const argvPtrs = [];\\n              this.argv.forEach((arg) => {\\n                argvPtrs.push(strPtr(arg));\\n              });\\n              argvPtrs.push(0);\\n              const keys = Object.keys(this.env).sort();\\n              keys.forEach((key) => {\\n                argvPtrs.push(strPtr(`${key}=${this.env[key]}`));\\n              });\\n              argvPtrs.push(0);\\n              const argv = offset;\\n              argvPtrs.forEach((ptr) => {\\n                this.mem.setUint32(offset, ptr, true);\\n                this.mem.setUint32(offset + 4, 0, true);\\n                offset += 8;\\n              });\\n              const wasmMinDataAddr = 4096 + 8192;\\n              if (offset >= wasmMinDataAddr) {\\n                throw new Error(\"total length of command line and environment variables exceeds limit\");\\n              }\\n              this._inst.exports.run(argc, argv);\\n              if (this.exited) {\\n                this._resolveExitPromise();\\n              }\\n              yield this._exitPromise;\\n            });\\n          }\\n          _resume() {\\n            if (this.exited) {\\n              throw new Error(\"Go program has already exited\");\\n            }\\n            this._inst.exports.resume();\\n            if (this.exited) {\\n              this._resolveExitPromise();\\n            }\\n          }\\n          _makeFuncWrapper(id) {\\n            const go = this;\\n            return function() {\\n              const event = { id, this: this, args: arguments };\\n              go._pendingEvent = event;\\n              go._resume();\\n              return event.result;\\n            };\\n          }\\n        };\\n      })();\\n      onmessage = ({ data: wasm }) => {\\n        let decoder = new TextDecoder();\\n        let fs = globalThis.fs;\\n        let stderr = \"\";\\n        fs.writeSync = (fd, buffer) => {\\n          if (fd === 1) {\\n            postMessage(buffer);\\n          } else if (fd === 2) {\\n            stderr += decoder.decode(buffer);\\n            let parts = stderr.split(\"\\\\n\");\\n            if (parts.length > 1) console.log(parts.slice(0, -1).join(\"\\\\n\"));\\n            stderr = parts[parts.length - 1];\\n          } else {\\n            throw new Error(\"Bad write\");\\n          }\\n          return buffer.length;\\n        };\\n        let stdin = [];\\n        let resumeStdin;\\n        let stdinPos = 0;\\n        onmessage = ({ data }) => {\\n          if (data.length > 0) {\\n            stdin.push(data);\\n            if (resumeStdin) resumeStdin();\\n          }\\n          return go;\\n        };\\n        fs.read = (fd, buffer, offset, length, position, callback) => {\\n          if (fd !== 0 || offset !== 0 || length !== buffer.length || position !== null) {\\n            throw new Error(\"Bad read\");\\n          }\\n          if (stdin.length === 0) {\\n            resumeStdin = () => fs.read(fd, buffer, offset, length, position, callback);\\n            return;\\n          }\\n          let first = stdin[0];\\n          let count = Math.max(0, Math.min(length, first.length - stdinPos));\\n          buffer.set(first.subarray(stdinPos, stdinPos + count), offset);\\n          stdinPos += count;\\n          if (stdinPos === first.length) {\\n            stdin.shift();\\n            stdinPos = 0;\\n          }\\n          callback(null, count);\\n        };\\n        let go = new globalThis.Go();\\n        go.argv = [\"\", `--service=${\"0.25.11\"}`];\\n        tryToInstantiateModule(wasm, go).then(\\n          (instance) => {\\n            postMessage(null);\\n            go.run(instance);\\n          },\\n          (error) => {\\n            postMessage(error);\\n          }\\n        );\\n        return go;\\n      };\\n      function tryToInstantiateModule(wasm, go) {\\n        return __async(this, null, function* () {\\n          if (wasm instanceof WebAssembly.Module) {\\n            return WebAssembly.instantiate(wasm, go.importObject);\\n          }\\n          const res = yield fetch(wasm);\\n          if (!res.ok) throw new Error(`Failed to download ${JSON.stringify(wasm)}`);\\n          if (\"instantiateStreaming\" in WebAssembly && /^application\\\\/wasm($|;)/i.test(res.headers.get(\"Content-Type\") || \"\")) {\\n            const result2 = yield WebAssembly.instantiateStreaming(res, go.importObject);\\n            return result2.instance;\\n          }\\n          const bytes = yield res.arrayBuffer();\\n          const result = yield WebAssembly.instantiate(bytes, go.importObject);\\n          return result.instance;\\n        });\\n      }\\n      return (m) => onmessage(m);\\n    })'}(postMessage)`], { type: \"text/javascript\" });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    let onmessage = ((postMessage) => {\n      // Copyright 2018 The Go Authors. All rights reserved.\n      // Use of this source code is governed by a BSD-style\n      // license that can be found in the LICENSE file.\n      var __async = (__this, __arguments, generator) => {\n        return new Promise((resolve, reject) => {\n          var fulfilled = (value) => {\n            try {\n              step(generator.next(value));\n            } catch (e) {\n              reject(e);\n            }\n          };\n          var rejected = (value) => {\n            try {\n              step(generator.throw(value));\n            } catch (e) {\n              reject(e);\n            }\n          };\n          var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n          step((generator = generator.apply(__this, __arguments)).next());\n        });\n      };\n      let onmessage;\n      let globalThis = {};\n      for (let o = self; o; o = Object.getPrototypeOf(o))\n        for (let k of Object.getOwnPropertyNames(o))\n          if (!(k in globalThis))\n            Object.defineProperty(globalThis, k, { get: () => self[k] });\n      \"use strict\";\n      (() => {\n        const enosys = () => {\n          const err = new Error(\"not implemented\");\n          err.code = \"ENOSYS\";\n          return err;\n        };\n        if (!globalThis.fs) {\n          let outputBuf = \"\";\n          globalThis.fs = {\n            constants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 },\n            // unused\n            writeSync(fd, buf) {\n              outputBuf += decoder.decode(buf);\n              const nl = outputBuf.lastIndexOf(\"\\n\");\n              if (nl != -1) {\n                console.log(outputBuf.substring(0, nl));\n                outputBuf = outputBuf.substring(nl + 1);\n              }\n              return buf.length;\n            },\n            write(fd, buf, offset, length, position, callback) {\n              if (offset !== 0 || length !== buf.length || position !== null) {\n                callback(enosys());\n                return;\n              }\n              const n = this.writeSync(fd, buf);\n              callback(null, n);\n            },\n            chmod(path, mode, callback) {\n              callback(enosys());\n            },\n            chown(path, uid, gid, callback) {\n              callback(enosys());\n            },\n            close(fd, callback) {\n              callback(enosys());\n            },\n            fchmod(fd, mode, callback) {\n              callback(enosys());\n            },\n            fchown(fd, uid, gid, callback) {\n              callback(enosys());\n            },\n            fstat(fd, callback) {\n              callback(enosys());\n            },\n            fsync(fd, callback) {\n              callback(null);\n            },\n            ftruncate(fd, length, callback) {\n              callback(enosys());\n            },\n            lchown(path, uid, gid, callback) {\n              callback(enosys());\n            },\n            link(path, link, callback) {\n              callback(enosys());\n            },\n            lstat(path, callback) {\n              callback(enosys());\n            },\n            mkdir(path, perm, callback) {\n              callback(enosys());\n            },\n            open(path, flags, mode, callback) {\n              callback(enosys());\n            },\n            read(fd, buffer, offset, length, position, callback) {\n              callback(enosys());\n            },\n            readdir(path, callback) {\n              callback(enosys());\n            },\n            readlink(path, callback) {\n              callback(enosys());\n            },\n            rename(from, to, callback) {\n              callback(enosys());\n            },\n            rmdir(path, callback) {\n              callback(enosys());\n            },\n            stat(path, callback) {\n              callback(enosys());\n            },\n            symlink(path, link, callback) {\n              callback(enosys());\n            },\n            truncate(path, length, callback) {\n              callback(enosys());\n            },\n            unlink(path, callback) {\n              callback(enosys());\n            },\n            utimes(path, atime, mtime, callback) {\n              callback(enosys());\n            }\n          };\n        }\n        if (!globalThis.process) {\n          globalThis.process = {\n            getuid() {\n              return -1;\n            },\n            getgid() {\n              return -1;\n            },\n            geteuid() {\n              return -1;\n            },\n            getegid() {\n              return -1;\n            },\n            getgroups() {\n              throw enosys();\n            },\n            pid: -1,\n            ppid: -1,\n            umask() {\n              throw enosys();\n            },\n            cwd() {\n              throw enosys();\n            },\n            chdir() {\n              throw enosys();\n            }\n          };\n        }\n        if (!globalThis.crypto) {\n          throw new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\n        }\n        if (!globalThis.performance) {\n          throw new Error(\"globalThis.performance is not available, polyfill required (performance.now only)\");\n        }\n        if (!globalThis.TextEncoder) {\n          throw new Error(\"globalThis.TextEncoder is not available, polyfill required\");\n        }\n        if (!globalThis.TextDecoder) {\n          throw new Error(\"globalThis.TextDecoder is not available, polyfill required\");\n        }\n        const encoder = new TextEncoder(\"utf-8\");\n        const decoder = new TextDecoder(\"utf-8\");\n        globalThis.Go = class {\n          constructor() {\n            this.argv = [\"js\"];\n            this.env = {};\n            this.exit = (code) => {\n              if (code !== 0) {\n                console.warn(\"exit code:\", code);\n              }\n            };\n            this._exitPromise = new Promise((resolve) => {\n              this._resolveExitPromise = resolve;\n            });\n            this._pendingEvent = null;\n            this._scheduledTimeouts = /* @__PURE__ */ new Map();\n            this._nextCallbackTimeoutID = 1;\n            const setInt64 = (addr, v) => {\n              this.mem.setUint32(addr + 0, v, true);\n              this.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n            };\n            const setInt32 = (addr, v) => {\n              this.mem.setUint32(addr + 0, v, true);\n            };\n            const getInt64 = (addr) => {\n              const low = this.mem.getUint32(addr + 0, true);\n              const high = this.mem.getInt32(addr + 4, true);\n              return low + high * 4294967296;\n            };\n            const loadValue = (addr) => {\n              const f = this.mem.getFloat64(addr, true);\n              if (f === 0) {\n                return void 0;\n              }\n              if (!isNaN(f)) {\n                return f;\n              }\n              const id = this.mem.getUint32(addr, true);\n              return this._values[id];\n            };\n            const storeValue = (addr, v) => {\n              const nanHead = 2146959360;\n              if (typeof v === \"number\" && v !== 0) {\n                if (isNaN(v)) {\n                  this.mem.setUint32(addr + 4, nanHead, true);\n                  this.mem.setUint32(addr, 0, true);\n                  return;\n                }\n                this.mem.setFloat64(addr, v, true);\n                return;\n              }\n              if (v === void 0) {\n                this.mem.setFloat64(addr, 0, true);\n                return;\n              }\n              let id = this._ids.get(v);\n              if (id === void 0) {\n                id = this._idPool.pop();\n                if (id === void 0) {\n                  id = this._values.length;\n                }\n                this._values[id] = v;\n                this._goRefCounts[id] = 0;\n                this._ids.set(v, id);\n              }\n              this._goRefCounts[id]++;\n              let typeFlag = 0;\n              switch (typeof v) {\n                case \"object\":\n                  if (v !== null) {\n                    typeFlag = 1;\n                  }\n                  break;\n                case \"string\":\n                  typeFlag = 2;\n                  break;\n                case \"symbol\":\n                  typeFlag = 3;\n                  break;\n                case \"function\":\n                  typeFlag = 4;\n                  break;\n              }\n              this.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n              this.mem.setUint32(addr, id, true);\n            };\n            const loadSlice = (addr) => {\n              const array = getInt64(addr + 0);\n              const len = getInt64(addr + 8);\n              return new Uint8Array(this._inst.exports.mem.buffer, array, len);\n            };\n            const loadSliceOfValues = (addr) => {\n              const array = getInt64(addr + 0);\n              const len = getInt64(addr + 8);\n              const a = new Array(len);\n              for (let i = 0; i < len; i++) {\n                a[i] = loadValue(array + i * 8);\n              }\n              return a;\n            };\n            const loadString = (addr) => {\n              const saddr = getInt64(addr + 0);\n              const len = getInt64(addr + 8);\n              return decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n            };\n            const timeOrigin = Date.now() - performance.now();\n            this.importObject = {\n              _gotest: {\n                add: (a, b) => a + b\n              },\n              gojs: {\n                // Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n                // may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n                // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n                // This changes the SP, thus we have to update the SP used by the imported function.\n                // func wasmExit(code int32)\n                \"runtime.wasmExit\": (sp) => {\n                  sp >>>= 0;\n                  const code = this.mem.getInt32(sp + 8, true);\n                  this.exited = true;\n                  delete this._inst;\n                  delete this._values;\n                  delete this._goRefCounts;\n                  delete this._ids;\n                  delete this._idPool;\n                  this.exit(code);\n                },\n                // func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n                \"runtime.wasmWrite\": (sp) => {\n                  sp >>>= 0;\n                  const fd = getInt64(sp + 8);\n                  const p = getInt64(sp + 16);\n                  const n = this.mem.getInt32(sp + 24, true);\n                  globalThis.fs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n                },\n                // func resetMemoryDataView()\n                \"runtime.resetMemoryDataView\": (sp) => {\n                  sp >>>= 0;\n                  this.mem = new DataView(this._inst.exports.mem.buffer);\n                },\n                // func nanotime1() int64\n                \"runtime.nanotime1\": (sp) => {\n                  sp >>>= 0;\n                  setInt64(sp + 8, (timeOrigin + performance.now()) * 1e6);\n                },\n                // func walltime() (sec int64, nsec int32)\n                \"runtime.walltime\": (sp) => {\n                  sp >>>= 0;\n                  const msec = (/* @__PURE__ */ new Date()).getTime();\n                  setInt64(sp + 8, msec / 1e3);\n                  this.mem.setInt32(sp + 16, msec % 1e3 * 1e6, true);\n                },\n                // func scheduleTimeoutEvent(delay int64) int32\n                \"runtime.scheduleTimeoutEvent\": (sp) => {\n                  sp >>>= 0;\n                  const id = this._nextCallbackTimeoutID;\n                  this._nextCallbackTimeoutID++;\n                  this._scheduledTimeouts.set(id, setTimeout(\n                    () => {\n                      this._resume();\n                      while (this._scheduledTimeouts.has(id)) {\n                        console.warn(\"scheduleTimeoutEvent: missed timeout event\");\n                        this._resume();\n                      }\n                    },\n                    getInt64(sp + 8)\n                  ));\n                  this.mem.setInt32(sp + 16, id, true);\n                },\n                // func clearTimeoutEvent(id int32)\n                \"runtime.clearTimeoutEvent\": (sp) => {\n                  sp >>>= 0;\n                  const id = this.mem.getInt32(sp + 8, true);\n                  clearTimeout(this._scheduledTimeouts.get(id));\n                  this._scheduledTimeouts.delete(id);\n                },\n                // func getRandomData(r []byte)\n                \"runtime.getRandomData\": (sp) => {\n                  sp >>>= 0;\n                  crypto.getRandomValues(loadSlice(sp + 8));\n                },\n                // func finalizeRef(v ref)\n                \"syscall/js.finalizeRef\": (sp) => {\n                  sp >>>= 0;\n                  const id = this.mem.getUint32(sp + 8, true);\n                  this._goRefCounts[id]--;\n                  if (this._goRefCounts[id] === 0) {\n                    const v = this._values[id];\n                    this._values[id] = null;\n                    this._ids.delete(v);\n                    this._idPool.push(id);\n                  }\n                },\n                // func stringVal(value string) ref\n                \"syscall/js.stringVal\": (sp) => {\n                  sp >>>= 0;\n                  storeValue(sp + 24, loadString(sp + 8));\n                },\n                // func valueGet(v ref, p string) ref\n                \"syscall/js.valueGet\": (sp) => {\n                  sp >>>= 0;\n                  const result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n                  sp = this._inst.exports.getsp() >>> 0;\n                  storeValue(sp + 32, result);\n                },\n                // func valueSet(v ref, p string, x ref)\n                \"syscall/js.valueSet\": (sp) => {\n                  sp >>>= 0;\n                  Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n                },\n                // func valueDelete(v ref, p string)\n                \"syscall/js.valueDelete\": (sp) => {\n                  sp >>>= 0;\n                  Reflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n                },\n                // func valueIndex(v ref, i int) ref\n                \"syscall/js.valueIndex\": (sp) => {\n                  sp >>>= 0;\n                  storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n                },\n                // valueSetIndex(v ref, i int, x ref)\n                \"syscall/js.valueSetIndex\": (sp) => {\n                  sp >>>= 0;\n                  Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n                },\n                // func valueCall(v ref, m string, args []ref) (ref, bool)\n                \"syscall/js.valueCall\": (sp) => {\n                  sp >>>= 0;\n                  try {\n                    const v = loadValue(sp + 8);\n                    const m = Reflect.get(v, loadString(sp + 16));\n                    const args = loadSliceOfValues(sp + 32);\n                    const result = Reflect.apply(m, v, args);\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 56, result);\n                    this.mem.setUint8(sp + 64, 1);\n                  } catch (err) {\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 56, err);\n                    this.mem.setUint8(sp + 64, 0);\n                  }\n                },\n                // func valueInvoke(v ref, args []ref) (ref, bool)\n                \"syscall/js.valueInvoke\": (sp) => {\n                  sp >>>= 0;\n                  try {\n                    const v = loadValue(sp + 8);\n                    const args = loadSliceOfValues(sp + 16);\n                    const result = Reflect.apply(v, void 0, args);\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 40, result);\n                    this.mem.setUint8(sp + 48, 1);\n                  } catch (err) {\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 40, err);\n                    this.mem.setUint8(sp + 48, 0);\n                  }\n                },\n                // func valueNew(v ref, args []ref) (ref, bool)\n                \"syscall/js.valueNew\": (sp) => {\n                  sp >>>= 0;\n                  try {\n                    const v = loadValue(sp + 8);\n                    const args = loadSliceOfValues(sp + 16);\n                    const result = Reflect.construct(v, args);\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 40, result);\n                    this.mem.setUint8(sp + 48, 1);\n                  } catch (err) {\n                    sp = this._inst.exports.getsp() >>> 0;\n                    storeValue(sp + 40, err);\n                    this.mem.setUint8(sp + 48, 0);\n                  }\n                },\n                // func valueLength(v ref) int\n                \"syscall/js.valueLength\": (sp) => {\n                  sp >>>= 0;\n                  setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n                },\n                // valuePrepareString(v ref) (ref, int)\n                \"syscall/js.valuePrepareString\": (sp) => {\n                  sp >>>= 0;\n                  const str = encoder.encode(String(loadValue(sp + 8)));\n                  storeValue(sp + 16, str);\n                  setInt64(sp + 24, str.length);\n                },\n                // valueLoadString(v ref, b []byte)\n                \"syscall/js.valueLoadString\": (sp) => {\n                  sp >>>= 0;\n                  const str = loadValue(sp + 8);\n                  loadSlice(sp + 16).set(str);\n                },\n                // func valueInstanceOf(v ref, t ref) bool\n                \"syscall/js.valueInstanceOf\": (sp) => {\n                  sp >>>= 0;\n                  this.mem.setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16) ? 1 : 0);\n                },\n                // func copyBytesToGo(dst []byte, src ref) (int, bool)\n                \"syscall/js.copyBytesToGo\": (sp) => {\n                  sp >>>= 0;\n                  const dst = loadSlice(sp + 8);\n                  const src = loadValue(sp + 32);\n                  if (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n                    this.mem.setUint8(sp + 48, 0);\n                    return;\n                  }\n                  const toCopy = src.subarray(0, dst.length);\n                  dst.set(toCopy);\n                  setInt64(sp + 40, toCopy.length);\n                  this.mem.setUint8(sp + 48, 1);\n                },\n                // func copyBytesToJS(dst ref, src []byte) (int, bool)\n                \"syscall/js.copyBytesToJS\": (sp) => {\n                  sp >>>= 0;\n                  const dst = loadValue(sp + 8);\n                  const src = loadSlice(sp + 16);\n                  if (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n                    this.mem.setUint8(sp + 48, 0);\n                    return;\n                  }\n                  const toCopy = src.subarray(0, dst.length);\n                  dst.set(toCopy);\n                  setInt64(sp + 40, toCopy.length);\n                  this.mem.setUint8(sp + 48, 1);\n                },\n                \"debug\": (value) => {\n                  console.log(value);\n                }\n              }\n            };\n          }\n          run(instance) {\n            return __async(this, null, function* () {\n              if (!(instance instanceof WebAssembly.Instance)) {\n                throw new Error(\"Go.run: WebAssembly.Instance expected\");\n              }\n              this._inst = instance;\n              this.mem = new DataView(this._inst.exports.mem.buffer);\n              this._values = [\n                // JS values that Go currently has references to, indexed by reference id\n                NaN,\n                0,\n                null,\n                true,\n                false,\n                globalThis,\n                this\n              ];\n              this._goRefCounts = new Array(this._values.length).fill(Infinity);\n              this._ids = /* @__PURE__ */ new Map([\n                // mapping from JS values to reference ids\n                [0, 1],\n                [null, 2],\n                [true, 3],\n                [false, 4],\n                [globalThis, 5],\n                [this, 6]\n              ]);\n              this._idPool = [];\n              this.exited = false;\n              let offset = 4096;\n              const strPtr = (str) => {\n                const ptr = offset;\n                const bytes = encoder.encode(str + \"\\0\");\n                new Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n                offset += bytes.length;\n                if (offset % 8 !== 0) {\n                  offset += 8 - offset % 8;\n                }\n                return ptr;\n              };\n              const argc = this.argv.length;\n              const argvPtrs = [];\n              this.argv.forEach((arg) => {\n                argvPtrs.push(strPtr(arg));\n              });\n              argvPtrs.push(0);\n              const keys = Object.keys(this.env).sort();\n              keys.forEach((key) => {\n                argvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n              });\n              argvPtrs.push(0);\n              const argv = offset;\n              argvPtrs.forEach((ptr) => {\n                this.mem.setUint32(offset, ptr, true);\n                this.mem.setUint32(offset + 4, 0, true);\n                offset += 8;\n              });\n              const wasmMinDataAddr = 4096 + 8192;\n              if (offset >= wasmMinDataAddr) {\n                throw new Error(\"total length of command line and environment variables exceeds limit\");\n              }\n              this._inst.exports.run(argc, argv);\n              if (this.exited) {\n                this._resolveExitPromise();\n              }\n              yield this._exitPromise;\n            });\n          }\n          _resume() {\n            if (this.exited) {\n              throw new Error(\"Go program has already exited\");\n            }\n            this._inst.exports.resume();\n            if (this.exited) {\n              this._resolveExitPromise();\n            }\n          }\n          _makeFuncWrapper(id) {\n            const go = this;\n            return function() {\n              const event = { id, this: this, args: arguments };\n              go._pendingEvent = event;\n              go._resume();\n              return event.result;\n            };\n          }\n        };\n      })();\n      onmessage = ({ data: wasm }) => {\n        let decoder = new TextDecoder();\n        let fs = globalThis.fs;\n        let stderr = \"\";\n        fs.writeSync = (fd, buffer) => {\n          if (fd === 1) {\n            postMessage(buffer);\n          } else if (fd === 2) {\n            stderr += decoder.decode(buffer);\n            let parts = stderr.split(\"\\n\");\n            if (parts.length > 1) console.log(parts.slice(0, -1).join(\"\\n\"));\n            stderr = parts[parts.length - 1];\n          } else {\n            throw new Error(\"Bad write\");\n          }\n          return buffer.length;\n        };\n        let stdin = [];\n        let resumeStdin;\n        let stdinPos = 0;\n        onmessage = ({ data }) => {\n          if (data.length > 0) {\n            stdin.push(data);\n            if (resumeStdin) resumeStdin();\n          }\n          return go;\n        };\n        fs.read = (fd, buffer, offset, length, position, callback) => {\n          if (fd !== 0 || offset !== 0 || length !== buffer.length || position !== null) {\n            throw new Error(\"Bad read\");\n          }\n          if (stdin.length === 0) {\n            resumeStdin = () => fs.read(fd, buffer, offset, length, position, callback);\n            return;\n          }\n          let first = stdin[0];\n          let count = Math.max(0, Math.min(length, first.length - stdinPos));\n          buffer.set(first.subarray(stdinPos, stdinPos + count), offset);\n          stdinPos += count;\n          if (stdinPos === first.length) {\n            stdin.shift();\n            stdinPos = 0;\n          }\n          callback(null, count);\n        };\n        let go = new globalThis.Go();\n        go.argv = [\"\", `--service=${\"0.25.11\"}`];\n        tryToInstantiateModule(wasm, go).then(\n          (instance) => {\n            postMessage(null);\n            go.run(instance);\n          },\n          (error) => {\n            postMessage(error);\n          }\n        );\n        return go;\n      };\n      function tryToInstantiateModule(wasm, go) {\n        return __async(this, null, function* () {\n          if (wasm instanceof WebAssembly.Module) {\n            return WebAssembly.instantiate(wasm, go.importObject);\n          }\n          const res = yield fetch(wasm);\n          if (!res.ok) throw new Error(`Failed to download ${JSON.stringify(wasm)}`);\n          if (\"instantiateStreaming\" in WebAssembly && /^application\\/wasm($|;)/i.test(res.headers.get(\"Content-Type\") || \"\")) {\n            const result2 = yield WebAssembly.instantiateStreaming(res, go.importObject);\n            return result2.instance;\n          }\n          const bytes = yield res.arrayBuffer();\n          const result = yield WebAssembly.instantiate(bytes, go.importObject);\n          return result.instance;\n        });\n      }\n      return (m) => onmessage(m);\n    })((data) => worker.onmessage({ data }));\n    let go;\n    worker = {\n      onmessage: null,\n      postMessage: (data) => setTimeout(() => {\n        try {\n          go = onmessage({ data });\n        } catch (error) {\n          rejectAllWith(error);\n        }\n      }),\n      terminate() {\n        if (go)\n          for (let timeout of go._scheduledTimeouts.values())\n            clearTimeout(timeout);\n      }\n    };\n  }\n  let firstMessageResolve;\n  let firstMessageReject;\n  const firstMessagePromise = new Promise((resolve, reject) => {\n    firstMessageResolve = resolve;\n    firstMessageReject = reject;\n  });\n  worker.onmessage = ({ data: error }) => {\n    worker.onmessage = ({ data }) => readFromStdout(data);\n    if (error) firstMessageReject(error);\n    else firstMessageResolve();\n  };\n  worker.postMessage(wasmModule || new URL(wasmURL, location.href).toString());\n  let { readFromStdout, service } = createChannel({\n    writeToStdin(bytes) {\n      worker.postMessage(bytes);\n    },\n    isSync: false,\n    hasFS: false,\n    esbuild: browser_exports\n  });\n  yield firstMessagePromise;\n  stopService = () => {\n    worker.terminate();\n    initializePromise = void 0;\n    stopService = void 0;\n    longLivedService = void 0;\n  };\n  longLivedService = {\n    build: (options) => new Promise((resolve, reject) => {\n      rejectAllPromise.then(reject);\n      service.buildOrContext({\n        callName: \"build\",\n        refs: null,\n        options,\n        isTTY: false,\n        defaultWD: \"/\",\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      });\n    }),\n    context: (options) => new Promise((resolve, reject) => {\n      rejectAllPromise.then(reject);\n      service.buildOrContext({\n        callName: \"context\",\n        refs: null,\n        options,\n        isTTY: false,\n        defaultWD: \"/\",\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      });\n    }),\n    transform: (input, options) => new Promise((resolve, reject) => {\n      rejectAllPromise.then(reject);\n      service.transform({\n        callName: \"transform\",\n        refs: null,\n        input,\n        options: options || {},\n        isTTY: false,\n        fs: {\n          readFile(_, callback) {\n            callback(new Error(\"Internal error\"), null);\n          },\n          writeFile(_, callback) {\n            callback(null);\n          }\n        },\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      });\n    }),\n    formatMessages: (messages, options) => new Promise((resolve, reject) => {\n      rejectAllPromise.then(reject);\n      service.formatMessages({\n        callName: \"formatMessages\",\n        refs: null,\n        messages,\n        options,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      });\n    }),\n    analyzeMetafile: (metafile, options) => new Promise((resolve, reject) => {\n      rejectAllPromise.then(reject);\n      service.analyzeMetafile({\n        callName: \"analyzeMetafile\",\n        refs: null,\n        metafile: typeof metafile === \"string\" ? metafile : JSON.stringify(metafile),\n        options,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      });\n    })\n  };\n});\nvar browser_default = browser_exports;\n})(typeof module===\"object\"?module:{set exports(x){(typeof self!==\"undefined\"?self:this).esbuild=x}});\n","// Copyright 2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport class BundlerError extends Error {\n    location;\n    error;\n    constructor(failure, options) {\n        super(undefined, options);\n        this.cause = failure;\n        this.error = failure.errors[0];\n    }\n    get name() {\n        return 'BundlerError';\n    }\n    get message() {\n        return this.error.text;\n    }\n    get stack() {\n        if (!this.error.location)\n            return undefined;\n        const { file, line, column } = this.error.location;\n        return `${this.toString()}\\n    at ${file}:${line}:${column}`;\n    }\n}\n;\nexport class RuntimeError extends Error {\n    manifoldStack;\n    cause;\n    constructor(cause, message, options) {\n        super(message ?? cause.message, options);\n        this.cause = cause;\n    }\n    get name() {\n        return this.cause.name;\n    }\n    get message() {\n        return this.cause.message;\n    }\n    get stack() {\n        return this.manifoldStack;\n    }\n}\n//# sourceMappingURL=error.js.map","// src/vlq.ts\nvar comma = \",\".charCodeAt(0);\nvar semicolon = \";\".charCodeAt(0);\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar intToChar = new Uint8Array(64);\nvar charToInt = new Uint8Array(128);\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\nfunction decodeInteger(reader, relative) {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n  const shouldNegate = value & 1;\n  value >>>= 1;\n  if (shouldNegate) {\n    value = -2147483648 | -value;\n  }\n  return relative + value;\n}\nfunction encodeInteger(builder, num, relative) {\n  let delta = num - relative;\n  delta = delta < 0 ? -delta << 1 | 1 : delta << 1;\n  do {\n    let clamped = delta & 31;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 32;\n    builder.write(intToChar[clamped]);\n  } while (delta > 0);\n  return num;\n}\nfunction hasMoreVlq(reader, max) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\n\n// src/strings.ts\nvar bufLength = 1024 * 16;\nvar td = typeof TextDecoder !== \"undefined\" ? /* @__PURE__ */ new TextDecoder() : typeof Buffer !== \"undefined\" ? {\n  decode(buf) {\n    const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n    return out.toString();\n  }\n} : {\n  decode(buf) {\n    let out = \"\";\n    for (let i = 0; i < buf.length; i++) {\n      out += String.fromCharCode(buf[i]);\n    }\n    return out;\n  }\n};\nvar StringWriter = class {\n  constructor() {\n    this.pos = 0;\n    this.out = \"\";\n    this.buffer = new Uint8Array(bufLength);\n  }\n  write(v) {\n    const { buffer } = this;\n    buffer[this.pos++] = v;\n    if (this.pos === bufLength) {\n      this.out += td.decode(buffer);\n      this.pos = 0;\n    }\n  }\n  flush() {\n    const { buffer, out, pos } = this;\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\n  }\n};\nvar StringReader = class {\n  constructor(buffer) {\n    this.pos = 0;\n    this.buffer = buffer;\n  }\n  next() {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.pos);\n  }\n  indexOf(char) {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n};\n\n// src/scopes.ts\nvar EMPTY = [];\nfunction decodeOriginalScopes(input) {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const scopes = [];\n  const stack = [];\n  let line = 0;\n  for (; reader.pos < length; reader.pos++) {\n    line = decodeInteger(reader, line);\n    const column = decodeInteger(reader, 0);\n    if (!hasMoreVlq(reader, length)) {\n      const last = stack.pop();\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n    const kind = decodeInteger(reader, 0);\n    const fields = decodeInteger(reader, 0);\n    const hasName = fields & 1;\n    const scope = hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind];\n    let vars = EMPTY;\n    if (hasMoreVlq(reader, length)) {\n      vars = [];\n      do {\n        const varsIndex = decodeInteger(reader, 0);\n        vars.push(varsIndex);\n      } while (hasMoreVlq(reader, length));\n    }\n    scope.vars = vars;\n    scopes.push(scope);\n    stack.push(scope);\n  }\n  return scopes;\n}\nfunction encodeOriginalScopes(scopes) {\n  const writer = new StringWriter();\n  for (let i = 0; i < scopes.length; ) {\n    i = _encodeOriginalScopes(scopes, i, writer, [0]);\n  }\n  return writer.flush();\n}\nfunction _encodeOriginalScopes(scopes, index, writer, state) {\n  const scope = scopes[index];\n  const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;\n  if (index > 0) writer.write(comma);\n  state[0] = encodeInteger(writer, startLine, state[0]);\n  encodeInteger(writer, startColumn, 0);\n  encodeInteger(writer, kind, 0);\n  const fields = scope.length === 6 ? 1 : 0;\n  encodeInteger(writer, fields, 0);\n  if (scope.length === 6) encodeInteger(writer, scope[5], 0);\n  for (const v of vars) {\n    encodeInteger(writer, v, 0);\n  }\n  for (index++; index < scopes.length; ) {\n    const next = scopes[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || l === endLine && c >= endColumn) {\n      break;\n    }\n    index = _encodeOriginalScopes(scopes, index, writer, state);\n  }\n  writer.write(comma);\n  state[0] = encodeInteger(writer, endLine, state[0]);\n  encodeInteger(writer, endColumn, 0);\n  return index;\n}\nfunction decodeGeneratedRanges(input) {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const ranges = [];\n  const stack = [];\n  let genLine = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n  do {\n    const semi = reader.indexOf(\";\");\n    let genColumn = 0;\n    for (; reader.pos < semi; reader.pos++) {\n      genColumn = decodeInteger(reader, genColumn);\n      if (!hasMoreVlq(reader, semi)) {\n        const last = stack.pop();\n        last[2] = genLine;\n        last[3] = genColumn;\n        continue;\n      }\n      const fields = decodeInteger(reader, 0);\n      const hasDefinition = fields & 1;\n      const hasCallsite = fields & 2;\n      const hasScope = fields & 4;\n      let callsite = null;\n      let bindings = EMPTY;\n      let range;\n      if (hasDefinition) {\n        const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);\n        definitionScopeIndex = decodeInteger(\n          reader,\n          definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0\n        );\n        definitionSourcesIndex = defSourcesIndex;\n        range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex];\n      } else {\n        range = [genLine, genColumn, 0, 0];\n      }\n      range.isScope = !!hasScope;\n      if (hasCallsite) {\n        const prevCsi = callsiteSourcesIndex;\n        const prevLine = callsiteLine;\n        callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);\n        const sameSource = prevCsi === callsiteSourcesIndex;\n        callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);\n        callsiteColumn = decodeInteger(\n          reader,\n          sameSource && prevLine === callsiteLine ? callsiteColumn : 0\n        );\n        callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n      }\n      range.callsite = callsite;\n      if (hasMoreVlq(reader, semi)) {\n        bindings = [];\n        do {\n          bindingLine = genLine;\n          bindingColumn = genColumn;\n          const expressionsCount = decodeInteger(reader, 0);\n          let expressionRanges;\n          if (expressionsCount < -1) {\n            expressionRanges = [[decodeInteger(reader, 0)]];\n            for (let i = -1; i > expressionsCount; i--) {\n              const prevBl = bindingLine;\n              bindingLine = decodeInteger(reader, bindingLine);\n              bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);\n              const expression = decodeInteger(reader, 0);\n              expressionRanges.push([expression, bindingLine, bindingColumn]);\n            }\n          } else {\n            expressionRanges = [[expressionsCount]];\n          }\n          bindings.push(expressionRanges);\n        } while (hasMoreVlq(reader, semi));\n      }\n      range.bindings = bindings;\n      ranges.push(range);\n      stack.push(range);\n    }\n    genLine++;\n    reader.pos = semi + 1;\n  } while (reader.pos < length);\n  return ranges;\n}\nfunction encodeGeneratedRanges(ranges) {\n  if (ranges.length === 0) return \"\";\n  const writer = new StringWriter();\n  for (let i = 0; i < ranges.length; ) {\n    i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);\n  }\n  return writer.flush();\n}\nfunction _encodeGeneratedRanges(ranges, index, writer, state) {\n  const range = ranges[index];\n  const {\n    0: startLine,\n    1: startColumn,\n    2: endLine,\n    3: endColumn,\n    isScope,\n    callsite,\n    bindings\n  } = range;\n  if (state[0] < startLine) {\n    catchupLine(writer, state[0], startLine);\n    state[0] = startLine;\n    state[1] = 0;\n  } else if (index > 0) {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, range[1], state[1]);\n  const fields = (range.length === 6 ? 1 : 0) | (callsite ? 2 : 0) | (isScope ? 4 : 0);\n  encodeInteger(writer, fields, 0);\n  if (range.length === 6) {\n    const { 4: sourcesIndex, 5: scopesIndex } = range;\n    if (sourcesIndex !== state[2]) {\n      state[3] = 0;\n    }\n    state[2] = encodeInteger(writer, sourcesIndex, state[2]);\n    state[3] = encodeInteger(writer, scopesIndex, state[3]);\n  }\n  if (callsite) {\n    const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite;\n    if (sourcesIndex !== state[4]) {\n      state[5] = 0;\n      state[6] = 0;\n    } else if (callLine !== state[5]) {\n      state[6] = 0;\n    }\n    state[4] = encodeInteger(writer, sourcesIndex, state[4]);\n    state[5] = encodeInteger(writer, callLine, state[5]);\n    state[6] = encodeInteger(writer, callColumn, state[6]);\n  }\n  if (bindings) {\n    for (const binding of bindings) {\n      if (binding.length > 1) encodeInteger(writer, -binding.length, 0);\n      const expression = binding[0][0];\n      encodeInteger(writer, expression, 0);\n      let bindingStartLine = startLine;\n      let bindingStartColumn = startColumn;\n      for (let i = 1; i < binding.length; i++) {\n        const expRange = binding[i];\n        bindingStartLine = encodeInteger(writer, expRange[1], bindingStartLine);\n        bindingStartColumn = encodeInteger(writer, expRange[2], bindingStartColumn);\n        encodeInteger(writer, expRange[0], 0);\n      }\n    }\n  }\n  for (index++; index < ranges.length; ) {\n    const next = ranges[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || l === endLine && c >= endColumn) {\n      break;\n    }\n    index = _encodeGeneratedRanges(ranges, index, writer, state);\n  }\n  if (state[0] < endLine) {\n    catchupLine(writer, state[0], endLine);\n    state[0] = endLine;\n    state[1] = 0;\n  } else {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, endColumn, state[1]);\n  return index;\n}\nfunction catchupLine(writer, lastLine, line) {\n  do {\n    writer.write(semicolon);\n  } while (++lastLine < line);\n}\n\n// src/sourcemap-codec.ts\nfunction decode(mappings) {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n  do {\n    const semi = reader.indexOf(\";\");\n    const line = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n    while (reader.pos < semi) {\n      let seg;\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n      line.push(seg);\n      reader.pos++;\n    }\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n  return decoded;\n}\nfunction sort(line) {\n  line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n  return a[0] - b[0];\n}\nfunction encode(decoded) {\n  const writer = new StringWriter();\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) writer.write(semicolon);\n    if (line.length === 0) continue;\n    let genColumn = 0;\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      if (j > 0) writer.write(comma);\n      genColumn = encodeInteger(writer, segment[0], genColumn);\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\n    }\n  }\n  return writer.flush();\n}\nexport {\n  decode,\n  decodeGeneratedRanges,\n  decodeOriginalScopes,\n  encode,\n  encodeGeneratedRanges,\n  encodeOriginalScopes\n};\n//# sourceMappingURL=sourcemap-codec.mjs.map\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.resolveURI = factory());\n})(this, (function () { 'use strict';\n\n    // Matches the scheme of a URL, eg \"http://\"\n    const schemeRegex = /^[\\w+.-]+:\\/\\//;\n    /**\n     * Matches the parts of a URL:\n     * 1. Scheme, including \":\", guaranteed.\n     * 2. User/password, including \"@\", optional.\n     * 3. Host, guaranteed.\n     * 4. Port, including \":\", optional.\n     * 5. Path, including \"/\", optional.\n     * 6. Query, including \"?\", optional.\n     * 7. Hash, including \"#\", optional.\n     */\n    const urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n    /**\n     * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n     * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n     *\n     * 1. Host, optional.\n     * 2. Path, which may include \"/\", guaranteed.\n     * 3. Query, including \"?\", optional.\n     * 4. Hash, including \"#\", optional.\n     */\n    const fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n    function isAbsoluteUrl(input) {\n        return schemeRegex.test(input);\n    }\n    function isSchemeRelativeUrl(input) {\n        return input.startsWith('//');\n    }\n    function isAbsolutePath(input) {\n        return input.startsWith('/');\n    }\n    function isFileUrl(input) {\n        return input.startsWith('file:');\n    }\n    function isRelative(input) {\n        return /^[.?#]/.test(input);\n    }\n    function parseAbsoluteUrl(input) {\n        const match = urlRegex.exec(input);\n        return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/', match[6] || '', match[7] || '');\n    }\n    function parseFileUrl(input) {\n        const match = fileRegex.exec(input);\n        const path = match[2];\n        return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path, match[3] || '', match[4] || '');\n    }\n    function makeUrl(scheme, user, host, port, path, query, hash) {\n        return {\n            scheme,\n            user,\n            host,\n            port,\n            path,\n            query,\n            hash,\n            type: 7 /* Absolute */,\n        };\n    }\n    function parseUrl(input) {\n        if (isSchemeRelativeUrl(input)) {\n            const url = parseAbsoluteUrl('http:' + input);\n            url.scheme = '';\n            url.type = 6 /* SchemeRelative */;\n            return url;\n        }\n        if (isAbsolutePath(input)) {\n            const url = parseAbsoluteUrl('http://foo.com' + input);\n            url.scheme = '';\n            url.host = '';\n            url.type = 5 /* AbsolutePath */;\n            return url;\n        }\n        if (isFileUrl(input))\n            return parseFileUrl(input);\n        if (isAbsoluteUrl(input))\n            return parseAbsoluteUrl(input);\n        const url = parseAbsoluteUrl('http://foo.com/' + input);\n        url.scheme = '';\n        url.host = '';\n        url.type = input\n            ? input.startsWith('?')\n                ? 3 /* Query */\n                : input.startsWith('#')\n                    ? 2 /* Hash */\n                    : 4 /* RelativePath */\n            : 1 /* Empty */;\n        return url;\n    }\n    function stripPathFilename(path) {\n        // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n        // paths. It's not a file, so we can't strip it.\n        if (path.endsWith('/..'))\n            return path;\n        const index = path.lastIndexOf('/');\n        return path.slice(0, index + 1);\n    }\n    function mergePaths(url, base) {\n        normalizePath(base, base.type);\n        // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n        // path).\n        if (url.path === '/') {\n            url.path = base.path;\n        }\n        else {\n            // Resolution happens relative to the base path's directory, not the file.\n            url.path = stripPathFilename(base.path) + url.path;\n        }\n    }\n    /**\n     * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n     * \"foo/.\". We need to normalize to a standard representation.\n     */\n    function normalizePath(url, type) {\n        const rel = type <= 4 /* RelativePath */;\n        const pieces = url.path.split('/');\n        // We need to preserve the first piece always, so that we output a leading slash. The item at\n        // pieces[0] is an empty string.\n        let pointer = 1;\n        // Positive is the number of real directories we've output, used for popping a parent directory.\n        // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n        let positive = 0;\n        // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n        // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n        // real directory, we won't need to append, unless the other conditions happen again.\n        let addTrailingSlash = false;\n        for (let i = 1; i < pieces.length; i++) {\n            const piece = pieces[i];\n            // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n            if (!piece) {\n                addTrailingSlash = true;\n                continue;\n            }\n            // If we encounter a real directory, then we don't need to append anymore.\n            addTrailingSlash = false;\n            // A current directory, which we can always drop.\n            if (piece === '.')\n                continue;\n            // A parent directory, we need to see if there are any real directories we can pop. Else, we\n            // have an excess of parents, and we'll need to keep the \"..\".\n            if (piece === '..') {\n                if (positive) {\n                    addTrailingSlash = true;\n                    positive--;\n                    pointer--;\n                }\n                else if (rel) {\n                    // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n                    // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n                    pieces[pointer++] = piece;\n                }\n                continue;\n            }\n            // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n            // any popped or dropped directories.\n            pieces[pointer++] = piece;\n            positive++;\n        }\n        let path = '';\n        for (let i = 1; i < pointer; i++) {\n            path += '/' + pieces[i];\n        }\n        if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n            path += '/';\n        }\n        url.path = path;\n    }\n    /**\n     * Attempts to resolve `input` URL/path relative to `base`.\n     */\n    function resolve(input, base) {\n        if (!input && !base)\n            return '';\n        const url = parseUrl(input);\n        let inputType = url.type;\n        if (base && inputType !== 7 /* Absolute */) {\n            const baseUrl = parseUrl(base);\n            const baseType = baseUrl.type;\n            switch (inputType) {\n                case 1 /* Empty */:\n                    url.hash = baseUrl.hash;\n                // fall through\n                case 2 /* Hash */:\n                    url.query = baseUrl.query;\n                // fall through\n                case 3 /* Query */:\n                case 4 /* RelativePath */:\n                    mergePaths(url, baseUrl);\n                // fall through\n                case 5 /* AbsolutePath */:\n                    // The host, user, and port are joined, you can't copy one without the others.\n                    url.user = baseUrl.user;\n                    url.host = baseUrl.host;\n                    url.port = baseUrl.port;\n                // fall through\n                case 6 /* SchemeRelative */:\n                    // The input doesn't have a schema at least, so we need to copy at least that over.\n                    url.scheme = baseUrl.scheme;\n            }\n            if (baseType > inputType)\n                inputType = baseType;\n        }\n        normalizePath(url, inputType);\n        const queryHash = url.query + url.hash;\n        switch (inputType) {\n            // This is impossible, because of the empty checks at the start of the function.\n            // case UrlType.Empty:\n            case 2 /* Hash */:\n            case 3 /* Query */:\n                return queryHash;\n            case 4 /* RelativePath */: {\n                // The first char is always a \"/\", and we need it to be relative.\n                const path = url.path.slice(1);\n                if (!path)\n                    return queryHash || '.';\n                if (isRelative(base || input) && !isRelative(path)) {\n                    // If base started with a leading \".\", or there is no base and input started with a \".\",\n                    // then we need to ensure that the relative path starts with a \".\". We don't know if\n                    // relative starts with a \"..\", though, so check before prepending.\n                    return './' + path + queryHash;\n                }\n                return path + queryHash;\n            }\n            case 5 /* AbsolutePath */:\n                return url.path + queryHash;\n            default:\n                return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n        }\n    }\n\n    return resolve;\n\n}));\n//# sourceMappingURL=resolve-uri.umd.js.map\n","// src/trace-mapping.ts\nimport { encode, decode } from \"@jridgewell/sourcemap-codec\";\n\n// src/resolve.ts\nimport resolveUri from \"@jridgewell/resolve-uri\";\n\n// src/strip-filename.ts\nfunction stripFilename(path) {\n  if (!path) return \"\";\n  const index = path.lastIndexOf(\"/\");\n  return path.slice(0, index + 1);\n}\n\n// src/resolve.ts\nfunction resolver(mapUrl, sourceRoot) {\n  const from = stripFilename(mapUrl);\n  const prefix = sourceRoot ? sourceRoot + \"/\" : \"\";\n  return (source) => resolveUri(prefix + (source || \"\"), from);\n}\n\n// src/sourcemap-segment.ts\nvar COLUMN = 0;\nvar SOURCES_INDEX = 1;\nvar SOURCE_LINE = 2;\nvar SOURCE_COLUMN = 3;\nvar NAMES_INDEX = 4;\nvar REV_GENERATED_LINE = 1;\nvar REV_GENERATED_COLUMN = 2;\n\n// src/sort.ts\nfunction maybeSort(mappings, owned) {\n  const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n  if (unsortedIndex === mappings.length) return mappings;\n  if (!owned) mappings = mappings.slice();\n  for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n    mappings[i] = sortSegments(mappings[i], owned);\n  }\n  return mappings;\n}\nfunction nextUnsortedSegmentLine(mappings, start) {\n  for (let i = start; i < mappings.length; i++) {\n    if (!isSorted(mappings[i])) return i;\n  }\n  return mappings.length;\n}\nfunction isSorted(line) {\n  for (let j = 1; j < line.length; j++) {\n    if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction sortSegments(line, owned) {\n  if (!owned) line = line.slice();\n  return line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n  return a[COLUMN] - b[COLUMN];\n}\n\n// src/by-source.ts\nfunction buildBySources(decoded, memos) {\n  const sources = memos.map(() => []);\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      if (seg.length === 1) continue;\n      const sourceIndex2 = seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      const source = sources[sourceIndex2];\n      const segs = source[sourceLine] || (source[sourceLine] = []);\n      segs.push([sourceColumn, i, seg[COLUMN]]);\n    }\n  }\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    for (let j = 0; j < source.length; j++) {\n      const line = source[j];\n      if (line) line.sort(sortComparator);\n    }\n  }\n  return sources;\n}\n\n// src/binary-search.ts\nvar found = false;\nfunction binarySearch(haystack, needle, low, high) {\n  while (low <= high) {\n    const mid = low + (high - low >> 1);\n    const cmp = haystack[mid][COLUMN] - needle;\n    if (cmp === 0) {\n      found = true;\n      return mid;\n    }\n    if (cmp < 0) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n  found = false;\n  return low - 1;\n}\nfunction upperBound(haystack, needle, index) {\n  for (let i = index + 1; i < haystack.length; index = i++) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\nfunction lowerBound(haystack, needle, index) {\n  for (let i = index - 1; i >= 0; index = i--) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\nfunction memoizedState() {\n  return {\n    lastKey: -1,\n    lastNeedle: -1,\n    lastIndex: -1\n  };\n}\nfunction memoizedBinarySearch(haystack, needle, state, key) {\n  const { lastKey, lastNeedle, lastIndex } = state;\n  let low = 0;\n  let high = haystack.length - 1;\n  if (key === lastKey) {\n    if (needle === lastNeedle) {\n      found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n      return lastIndex;\n    }\n    if (needle >= lastNeedle) {\n      low = lastIndex === -1 ? 0 : lastIndex;\n    } else {\n      high = lastIndex;\n    }\n  }\n  state.lastKey = key;\n  state.lastNeedle = needle;\n  return state.lastIndex = binarySearch(haystack, needle, low, high);\n}\n\n// src/types.ts\nfunction parse(map) {\n  return typeof map === \"string\" ? JSON.parse(map) : map;\n}\n\n// src/flatten-map.ts\nvar FlattenMap = function(map, mapUrl) {\n  const parsed = parse(map);\n  if (!(\"sections\" in parsed)) {\n    return new TraceMap(parsed, mapUrl);\n  }\n  const mappings = [];\n  const sources = [];\n  const sourcesContent = [];\n  const names = [];\n  const ignoreList = [];\n  recurse(\n    parsed,\n    mapUrl,\n    mappings,\n    sources,\n    sourcesContent,\n    names,\n    ignoreList,\n    0,\n    0,\n    Infinity,\n    Infinity\n  );\n  const joined = {\n    version: 3,\n    file: parsed.file,\n    names,\n    sources,\n    sourcesContent,\n    mappings,\n    ignoreList\n  };\n  return presortedDecodedMap(joined);\n};\nfunction recurse(input, mapUrl, mappings, sources, sourcesContent, names, ignoreList, lineOffset, columnOffset, stopLine, stopColumn) {\n  const { sections } = input;\n  for (let i = 0; i < sections.length; i++) {\n    const { map, offset } = sections[i];\n    let sl = stopLine;\n    let sc = stopColumn;\n    if (i + 1 < sections.length) {\n      const nextOffset = sections[i + 1].offset;\n      sl = Math.min(stopLine, lineOffset + nextOffset.line);\n      if (sl === stopLine) {\n        sc = Math.min(stopColumn, columnOffset + nextOffset.column);\n      } else if (sl < stopLine) {\n        sc = columnOffset + nextOffset.column;\n      }\n    }\n    addSection(\n      map,\n      mapUrl,\n      mappings,\n      sources,\n      sourcesContent,\n      names,\n      ignoreList,\n      lineOffset + offset.line,\n      columnOffset + offset.column,\n      sl,\n      sc\n    );\n  }\n}\nfunction addSection(input, mapUrl, mappings, sources, sourcesContent, names, ignoreList, lineOffset, columnOffset, stopLine, stopColumn) {\n  const parsed = parse(input);\n  if (\"sections\" in parsed) return recurse(...arguments);\n  const map = new TraceMap(parsed, mapUrl);\n  const sourcesOffset = sources.length;\n  const namesOffset = names.length;\n  const decoded = decodedMappings(map);\n  const { resolvedSources, sourcesContent: contents, ignoreList: ignores } = map;\n  append(sources, resolvedSources);\n  append(names, map.names);\n  if (contents) append(sourcesContent, contents);\n  else for (let i = 0; i < resolvedSources.length; i++) sourcesContent.push(null);\n  if (ignores) for (let i = 0; i < ignores.length; i++) ignoreList.push(ignores[i] + sourcesOffset);\n  for (let i = 0; i < decoded.length; i++) {\n    const lineI = lineOffset + i;\n    if (lineI > stopLine) return;\n    const out = getLine(mappings, lineI);\n    const cOffset = i === 0 ? columnOffset : 0;\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const column = cOffset + seg[COLUMN];\n      if (lineI === stopLine && column >= stopColumn) return;\n      if (seg.length === 1) {\n        out.push([column]);\n        continue;\n      }\n      const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      out.push(\n        seg.length === 4 ? [column, sourcesIndex, sourceLine, sourceColumn] : [column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]]\n      );\n    }\n  }\n}\nfunction append(arr, other) {\n  for (let i = 0; i < other.length; i++) arr.push(other[i]);\n}\nfunction getLine(arr, index) {\n  for (let i = arr.length; i <= index; i++) arr[i] = [];\n  return arr[index];\n}\n\n// src/trace-mapping.ts\nvar LINE_GTR_ZERO = \"`line` must be greater than 0 (lines start at line 1)\";\nvar COL_GTR_EQ_ZERO = \"`column` must be greater than or equal to 0 (columns start at column 0)\";\nvar LEAST_UPPER_BOUND = -1;\nvar GREATEST_LOWER_BOUND = 1;\nvar TraceMap = class {\n  constructor(map, mapUrl) {\n    const isString = typeof map === \"string\";\n    if (!isString && map._decodedMemo) return map;\n    const parsed = parse(map);\n    const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n    this.version = version;\n    this.file = file;\n    this.names = names || [];\n    this.sourceRoot = sourceRoot;\n    this.sources = sources;\n    this.sourcesContent = sourcesContent;\n    this.ignoreList = parsed.ignoreList || parsed.x_google_ignoreList || void 0;\n    const resolve = resolver(mapUrl, sourceRoot);\n    this.resolvedSources = sources.map(resolve);\n    const { mappings } = parsed;\n    if (typeof mappings === \"string\") {\n      this._encoded = mappings;\n      this._decoded = void 0;\n    } else if (Array.isArray(mappings)) {\n      this._encoded = void 0;\n      this._decoded = maybeSort(mappings, isString);\n    } else if (parsed.sections) {\n      throw new Error(`TraceMap passed sectioned source map, please use FlattenMap export instead`);\n    } else {\n      throw new Error(`invalid source map: ${JSON.stringify(parsed)}`);\n    }\n    this._decodedMemo = memoizedState();\n    this._bySources = void 0;\n    this._bySourceMemos = void 0;\n  }\n};\nfunction cast(map) {\n  return map;\n}\nfunction encodedMappings(map) {\n  var _a, _b;\n  return (_b = (_a = cast(map))._encoded) != null ? _b : _a._encoded = encode(cast(map)._decoded);\n}\nfunction decodedMappings(map) {\n  var _a;\n  return (_a = cast(map))._decoded || (_a._decoded = decode(cast(map)._encoded));\n}\nfunction traceSegment(map, line, column) {\n  const decoded = decodedMappings(map);\n  if (line >= decoded.length) return null;\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    GREATEST_LOWER_BOUND\n  );\n  return index === -1 ? null : segments[index];\n}\nfunction originalPositionFor(map, needle) {\n  let { line, column, bias } = needle;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n  const decoded = decodedMappings(map);\n  if (line >= decoded.length) return OMapping(null, null, null, null);\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    bias || GREATEST_LOWER_BOUND\n  );\n  if (index === -1) return OMapping(null, null, null, null);\n  const segment = segments[index];\n  if (segment.length === 1) return OMapping(null, null, null, null);\n  const { names, resolvedSources } = map;\n  return OMapping(\n    resolvedSources[segment[SOURCES_INDEX]],\n    segment[SOURCE_LINE] + 1,\n    segment[SOURCE_COLUMN],\n    segment.length === 5 ? names[segment[NAMES_INDEX]] : null\n  );\n}\nfunction generatedPositionFor(map, needle) {\n  const { source, line, column, bias } = needle;\n  return generatedPosition(map, source, line, column, bias || GREATEST_LOWER_BOUND, false);\n}\nfunction allGeneratedPositionsFor(map, needle) {\n  const { source, line, column, bias } = needle;\n  return generatedPosition(map, source, line, column, bias || LEAST_UPPER_BOUND, true);\n}\nfunction eachMapping(map, cb) {\n  const decoded = decodedMappings(map);\n  const { names, resolvedSources } = map;\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const generatedLine = i + 1;\n      const generatedColumn = seg[0];\n      let source = null;\n      let originalLine = null;\n      let originalColumn = null;\n      let name = null;\n      if (seg.length !== 1) {\n        source = resolvedSources[seg[1]];\n        originalLine = seg[2] + 1;\n        originalColumn = seg[3];\n      }\n      if (seg.length === 5) name = names[seg[4]];\n      cb({\n        generatedLine,\n        generatedColumn,\n        source,\n        originalLine,\n        originalColumn,\n        name\n      });\n    }\n  }\n}\nfunction sourceIndex(map, source) {\n  const { sources, resolvedSources } = map;\n  let index = sources.indexOf(source);\n  if (index === -1) index = resolvedSources.indexOf(source);\n  return index;\n}\nfunction sourceContentFor(map, source) {\n  const { sourcesContent } = map;\n  if (sourcesContent == null) return null;\n  const index = sourceIndex(map, source);\n  return index === -1 ? null : sourcesContent[index];\n}\nfunction isIgnored(map, source) {\n  const { ignoreList } = map;\n  if (ignoreList == null) return false;\n  const index = sourceIndex(map, source);\n  return index === -1 ? false : ignoreList.includes(index);\n}\nfunction presortedDecodedMap(map, mapUrl) {\n  const tracer = new TraceMap(clone(map, []), mapUrl);\n  cast(tracer)._decoded = map.mappings;\n  return tracer;\n}\nfunction decodedMap(map) {\n  return clone(map, decodedMappings(map));\n}\nfunction encodedMap(map) {\n  return clone(map, encodedMappings(map));\n}\nfunction clone(map, mappings) {\n  return {\n    version: map.version,\n    file: map.file,\n    names: map.names,\n    sourceRoot: map.sourceRoot,\n    sources: map.sources,\n    sourcesContent: map.sourcesContent,\n    mappings,\n    ignoreList: map.ignoreList || map.x_google_ignoreList\n  };\n}\nfunction OMapping(source, line, column, name) {\n  return { source, line, column, name };\n}\nfunction GMapping(line, column) {\n  return { line, column };\n}\nfunction traceSegmentInternal(segments, memo, line, column, bias) {\n  let index = memoizedBinarySearch(segments, column, memo, line);\n  if (found) {\n    index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n  } else if (bias === LEAST_UPPER_BOUND) index++;\n  if (index === -1 || index === segments.length) return -1;\n  return index;\n}\nfunction sliceGeneratedPositions(segments, memo, line, column, bias) {\n  let min = traceSegmentInternal(segments, memo, line, column, GREATEST_LOWER_BOUND);\n  if (!found && bias === LEAST_UPPER_BOUND) min++;\n  if (min === -1 || min === segments.length) return [];\n  const matchedColumn = found ? column : segments[min][COLUMN];\n  if (!found) min = lowerBound(segments, matchedColumn, min);\n  const max = upperBound(segments, matchedColumn, min);\n  const result = [];\n  for (; min <= max; min++) {\n    const segment = segments[min];\n    result.push(GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]));\n  }\n  return result;\n}\nfunction generatedPosition(map, source, line, column, bias, all) {\n  var _a, _b;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n  const { sources, resolvedSources } = map;\n  let sourceIndex2 = sources.indexOf(source);\n  if (sourceIndex2 === -1) sourceIndex2 = resolvedSources.indexOf(source);\n  if (sourceIndex2 === -1) return all ? [] : GMapping(null, null);\n  const bySourceMemos = (_a = cast(map))._bySourceMemos || (_a._bySourceMemos = sources.map(memoizedState));\n  const generated = (_b = cast(map))._bySources || (_b._bySources = buildBySources(decodedMappings(map), bySourceMemos));\n  const segments = generated[sourceIndex2][line];\n  if (segments == null) return all ? [] : GMapping(null, null);\n  const memo = bySourceMemos[sourceIndex2];\n  if (all) return sliceGeneratedPositions(segments, memo, line, column, bias);\n  const index = traceSegmentInternal(segments, memo, line, column, bias);\n  if (index === -1) return GMapping(null, null);\n  const segment = segments[index];\n  return GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]);\n}\nexport {\n  FlattenMap as AnyMap,\n  FlattenMap,\n  GREATEST_LOWER_BOUND,\n  LEAST_UPPER_BOUND,\n  TraceMap,\n  allGeneratedPositionsFor,\n  decodedMap,\n  decodedMappings,\n  eachMapping,\n  encodedMap,\n  encodedMappings,\n  generatedPositionFor,\n  isIgnored,\n  originalPositionFor,\n  presortedDecodedMap,\n  sourceContentFor,\n  traceSegment\n};\n//# sourceMappingURL=trace-mapping.mjs.map\n","'use strict';\n\nObject.defineProperty(exports, 'commentRegex', {\n  get: function getCommentRegex () {\n    // Groups: 1: media type, 2: MIME type, 3: charset, 4: encoding, 5: data.\n    return /^\\s*?\\/[\\/\\*][@#]\\s+?sourceMappingURL=data:(((?:application|text)\\/json)(?:;charset=([^;,]+?)?)?)?(?:;(base64))?,(.*?)$/mg;\n  }\n});\n\n\nObject.defineProperty(exports, 'mapFileCommentRegex', {\n  get: function getMapFileCommentRegex () {\n    // Matches sourceMappingURL in either // or /* comment styles.\n    return /(?:\\/\\/[@#][ \\t]+?sourceMappingURL=([^\\s'\"`]+?)[ \\t]*?$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^*]+?)[ \\t]*?(?:\\*\\/){1}[ \\t]*?$)/mg;\n  }\n});\n\nvar decodeBase64;\nif (typeof Buffer !== 'undefined') {\n  if (typeof Buffer.from === 'function') {\n    decodeBase64 = decodeBase64WithBufferFrom;\n  } else {\n    decodeBase64 = decodeBase64WithNewBuffer;\n  }\n} else {\n  decodeBase64 = decodeBase64WithAtob;\n}\n\nfunction decodeBase64WithBufferFrom(base64) {\n  return Buffer.from(base64, 'base64').toString();\n}\n\nfunction decodeBase64WithNewBuffer(base64) {\n  if (typeof value === 'number') {\n    throw new TypeError('The value to decode must not be of type number.');\n  }\n  return new Buffer(base64, 'base64').toString();\n}\n\nfunction decodeBase64WithAtob(base64) {\n  return decodeURIComponent(escape(atob(base64)));\n}\n\nfunction stripComment(sm) {\n  return sm.split(',').pop();\n}\n\nfunction readFromFileMap(sm, read) {\n  var r = exports.mapFileCommentRegex.exec(sm);\n  // for some odd reason //# .. captures in 1 and /* .. */ in 2\n  var filename = r[1] || r[2];\n\n  try {\n    var sm = read(filename);\n    if (sm != null && typeof sm.catch === 'function') {\n      return sm.catch(throwError);\n    } else {\n      return sm;\n    }\n  } catch (e) {\n    throwError(e);\n  }\n\n  function throwError(e) {\n    throw new Error('An error occurred while trying to read the map file at ' + filename + '\\n' + e.stack);\n  }\n}\n\nfunction Converter (sm, opts) {\n  opts = opts || {};\n\n  if (opts.hasComment) {\n    sm = stripComment(sm);\n  }\n\n  if (opts.encoding === 'base64') {\n    sm = decodeBase64(sm);\n  } else if (opts.encoding === 'uri') {\n    sm = decodeURIComponent(sm);\n  }\n\n  if (opts.isJSON || opts.encoding) {\n    sm = JSON.parse(sm);\n  }\n\n  this.sourcemap = sm;\n}\n\nConverter.prototype.toJSON = function (space) {\n  return JSON.stringify(this.sourcemap, null, space);\n};\n\nif (typeof Buffer !== 'undefined') {\n  if (typeof Buffer.from === 'function') {\n    Converter.prototype.toBase64 = encodeBase64WithBufferFrom;\n  } else {\n    Converter.prototype.toBase64 = encodeBase64WithNewBuffer;\n  }\n} else {\n  Converter.prototype.toBase64 = encodeBase64WithBtoa;\n}\n\nfunction encodeBase64WithBufferFrom() {\n  var json = this.toJSON();\n  return Buffer.from(json, 'utf8').toString('base64');\n}\n\nfunction encodeBase64WithNewBuffer() {\n  var json = this.toJSON();\n  if (typeof json === 'number') {\n    throw new TypeError('The json to encode must not be of type number.');\n  }\n  return new Buffer(json, 'utf8').toString('base64');\n}\n\nfunction encodeBase64WithBtoa() {\n  var json = this.toJSON();\n  return btoa(unescape(encodeURIComponent(json)));\n}\n\nConverter.prototype.toURI = function () {\n  var json = this.toJSON();\n  return encodeURIComponent(json);\n};\n\nConverter.prototype.toComment = function (options) {\n  var encoding, content, data;\n  if (options != null && options.encoding === 'uri') {\n    encoding = '';\n    content = this.toURI();\n  } else {\n    encoding = ';base64';\n    content = this.toBase64();\n  }\n  data = 'sourceMappingURL=data:application/json;charset=utf-8' + encoding + ',' + content;\n  return options != null && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n\n// returns copy instead of original\nConverter.prototype.toObject = function () {\n  return JSON.parse(this.toJSON());\n};\n\nConverter.prototype.addProperty = function (key, value) {\n  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property \"' + key + '\" already exists on the sourcemap, use set property instead');\n  return this.setProperty(key, value);\n};\n\nConverter.prototype.setProperty = function (key, value) {\n  this.sourcemap[key] = value;\n  return this;\n};\n\nConverter.prototype.getProperty = function (key) {\n  return this.sourcemap[key];\n};\n\nexports.fromObject = function (obj) {\n  return new Converter(obj);\n};\n\nexports.fromJSON = function (json) {\n  return new Converter(json, { isJSON: true });\n};\n\nexports.fromURI = function (uri) {\n  return new Converter(uri, { encoding: 'uri' });\n};\n\nexports.fromBase64 = function (base64) {\n  return new Converter(base64, { encoding: 'base64' });\n};\n\nexports.fromComment = function (comment) {\n  var m, encoding;\n  comment = comment\n    .replace(/^\\/\\*/g, '//')\n    .replace(/\\*\\/$/g, '');\n  m = exports.commentRegex.exec(comment);\n  encoding = m && m[4] || 'uri';\n  return new Converter(comment, { encoding: encoding, hasComment: true });\n};\n\nfunction makeConverter(sm) {\n  return new Converter(sm, { isJSON: true });\n}\n\nexports.fromMapFileComment = function (comment, read) {\n  if (typeof read === 'string') {\n    throw new Error(\n      'String directory paths are no longer supported with `fromMapFileComment`\\n' +\n      'Please review the Upgrading documentation at https://github.com/thlorenz/convert-source-map#upgrading'\n    )\n  }\n\n  var sm = readFromFileMap(comment, read);\n  if (sm != null && typeof sm.then === 'function') {\n    return sm.then(makeConverter);\n  } else {\n    return makeConverter(sm);\n  }\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromSource = function (content) {\n  var m = content.match(exports.commentRegex);\n  return m ? exports.fromComment(m.pop()) : null;\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromMapFileSource = function (content, read) {\n  if (typeof read === 'string') {\n    throw new Error(\n      'String directory paths are no longer supported with `fromMapFileSource`\\n' +\n      'Please review the Upgrading documentation at https://github.com/thlorenz/convert-source-map#upgrading'\n    )\n  }\n  var m = content.match(exports.mapFileCommentRegex);\n  return m ? exports.fromMapFileComment(m.pop(), read) : null;\n};\n\nexports.removeComments = function (src) {\n  return src.replace(exports.commentRegex, '');\n};\n\nexports.removeMapFileComments = function (src) {\n  return src.replace(exports.mapFileCommentRegex, '');\n};\n\nexports.generateMapFileComment = function (file, options) {\n  var data = 'sourceMappingURL=' + file;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n","var UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nexport { parse };\n","// Copyright 2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { originalPositionFor, TraceMap } from '@jridgewell/trace-mapping';\nimport convert from 'convert-source-map';\nimport * as stackTraceParser from 'stacktrace-parser';\n/**\n * Are we in a web worker?\n *\n * @returns A boolean.\n */\nexport const isWebWorker = () => typeof self !== 'undefined' && typeof self.document == 'undefined';\n/**\n * Are we in Node?\n *\n * @returns A boolean.\n */\nexport const isNode = () => typeof process !== 'undefined' && !!process?.versions?.node;\nexport const getSourceMappedStackTrace = (code, error, lineOffset = 0) => {\n    const converter = convert.fromSource(code);\n    if (!converter || !error.stack) {\n        // No inline source map.  We can't do anything.\n        return error.stack;\n    }\n    const tracer = new TraceMap(converter.toObject());\n    let stack = stackTraceParser.parse(error.stack);\n    stack = stack.slice(0, stack.findIndex(call => call.methodName == 'evaluate'));\n    stack = stack.map((frame) => {\n        if ((frame.lineNumber + lineOffset) < 1) {\n            return frame; // Line number is out of range.\n        }\n        const { line: lineNumber, column, source: file } = originalPositionFor(tracer, { line: frame.lineNumber + lineOffset, column: frame.column });\n        // Because the evaluator uses a Function constructor, the method name at\n        // top level of the manifoldCAD script will be 'anonymous'.  Ignoring\n        // that makes the stack more readable at the potential cost of confusion\n        // if a manifoldCAD user is also constructing new Functions within their\n        // model.\n        const methodName = (frame.methodName != 'anonymous') ? frame.methodName : '';\n        return { ...frame, lineNumber, column, file, methodName };\n    });\n    return [\n        error.toString(), ...stack.map(frame => {\n            const location = `${frame.file}:${frame.lineNumber}:${frame.column}`;\n            if (frame.methodName) {\n                return `    at ${frame.methodName} (${location})`;\n            }\n            else {\n                return `    at ${location}`;\n            }\n        })\n    ].reduce((acc, cur) => `${acc}\\n${cur}`);\n};\n//# sourceMappingURL=util.js.map","// Copyright 2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport * as esbuild from 'esbuild-wasm';\nimport { BundlerError } from \"./error.js\";\nimport { isNode } from \"./util.js\";\nlet esbuildWasmUrl = null;\nlet esbuildHasOwnWorker = false;\nexport const setWasmUrl = (url) => {\n    esbuildWasmUrl = url;\n};\nexport const setHasOwnWorker = (x) => {\n    esbuildHasOwnWorker = x;\n};\n/**\n * These content delivery networks provide NPM modules as ES modules,\n * whether they were published that way or not.\n */\nexport const cdnUrlHelpers = {\n    'esm.sh': (specifier) => `https://esm.sh/${specifier}`,\n    'jsDelivr': (specifier) => `https://cdn.jsdelivr.net/npm/${specifier}/+esm`,\n    'skypack': (specifier) => `https://cdn.skypack.dev/${specifier}`\n};\nconst cdnUrl = (specifier, jsCDN) => {\n    if (!jsCDN)\n        return specifier;\n    const helper = cdnUrlHelpers[jsCDN];\n    return helper ? helper(specifier) : `${jsCDN}${specifier}`;\n};\n// Swallow informational logs in testing framework\nfunction log(...args) {\n    if (typeof self !== 'undefined' && self.console) {\n        self.console.log(...args);\n    }\n}\n/**\n * This is a plugin for esbuild that has three functions:\n *\n *   * It resolves NPM packages to urls served by various CDNs.\n *   * It fetches imports from http/https urls.\n *   * It provides evaluation context to npm packages.\n *\n * ManifoldCAD libraries can include `manifold-3d/manifoldCAD` to get access to\n * the evaluator context.  Outside of the evaluator, this involves importing a\n * module.  Inside the evaluator, imports are in the global namespace.  The\n * imported module will not be able to see the actual evaluator context.  Here,\n * we will swap it out for an object we will inject at evaluation time.\n */\nexport const esbuildManifoldPlugin = (options = {}) => ({\n    name: 'esbuild-manifold-plugin',\n    async setup(build) {\n        let manifoldCADExportPath = null;\n        const manifoldCADExportSpecifier = 'manifold-3d/manifoldCAD';\n        const ManifoldCADExportMatch = /^manifold-3d\\/manifoldCAD(.ts|.js)?$/;\n        const manifoldCADExportNames = [\n            // Manifold classes.\n            'Mesh', 'Manifold', 'CrossSection',\n            // Manifold methods.\n            'setMinCircularAngle', 'setMinCircularEdgeLength', 'setCircularSegments',\n            'getCircularSegments', 'resetToCircularDefaults', 'triangulate',\n            // Scene builder exports.\n            'show', 'only', 'setMaterial', 'setMorphStart', 'setMorphEnd',\n            // GLTFNode and utilities.\n            'GLTFNode', 'getGLTFNodes', 'resetGLTFNodes',\n            // ManifoldCAD specific exports.\n            'isManifoldCAD'\n        ];\n        if (isNode()) {\n            // We only need to check against the local manifoldCAD context on disk if\n            // we happen to be running in node.  Truthfully, this is really only\n            // necessary in development.  End users will almost always import\n            // `manifold-3d/manifoldCAD` instead of `some/path/to/manifoldCAD`.\n            (async () => {\n                const { resolve, dirname } = await import('node:path');\n                const { fileURLToPath } = await import('node:url');\n                const dir = __dirname ?? import.meta?.dirname ??\n                    dirname(fileURLToPath(import.meta.url));\n                manifoldCADExportPath = resolve(dir, './manifoldCAD.ts');\n            })();\n        }\n        const skipResolve = {};\n        // Try to resolve local files.  If we can't, blindly resolve them to a CDN.\n        build.onResolve({ filter: /.*/ }, async (args) => {\n            // skipResolve used to avoid loops.\n            // https://github.com/evanw/esbuild/issues/2198#issuecomment-1104566397\n            if (args.pluginData === skipResolve)\n                return null;\n            // Skip a few cases handled elsewhere.\n            if (args.namespace === 'http-url')\n                return null;\n            if (args.path.match(/^https?:\\/\\//))\n                return null;\n            // Is this a manifoldCAD context import?\n            const pluginData = {\n                toplevel: args.importer === options.filename || args.importer === '<stdin>'\n            };\n            if (args.path.match(ManifoldCADExportMatch)) {\n                return { namespace: 'manifold-cad-globals', path: args.path, pluginData };\n            }\n            // Is this a virtual file?\n            if (options.files && Object.keys(options.files).includes(args.path)) {\n                return { namespace: 'virtual-file', path: args.path };\n            }\n            // Try esbuilds' resolver first.\n            const result = await build.resolve(args.path, {\n                resolveDir: args.resolveDir,\n                kind: 'import-statement',\n                pluginData: skipResolve\n            });\n            // We found a local file!\n            if (result.errors.length === 0) {\n                if (manifoldCADExportPath && manifoldCADExportPath === result.path) {\n                    // It resolved to our local manifoldCAD context.\n                    return {\n                        namespace: 'manifold-cad-globals',\n                        path: args.path,\n                        pluginData\n                    };\n                }\n                return result;\n            }\n            // Built in resolver failed.  Are we fetching remote packages?\n            if (options.fetchRemotePackages !== false && options.jsCDN) {\n                return {\n                    path: cdnUrl(args.path, options.jsCDN),\n                    namespace: 'http-url',\n                };\n            }\n            // Okay fine.  I give up.\n            return null;\n        });\n        // Inject context.\n        build.onLoad({ filter: /.*/, namespace: 'manifold-cad-globals' }, (args) => {\n            // This is a string replace.\n            const globals = args.pluginData?.toplevel ?\n                '_manifold_cad_top_level' :\n                '_manifold_cad_library';\n            return {\n                // Type hinting isn't necessary.  Only esbuild will see the swap,\n                // and it doesn't do type validation.\n                contents: `export const {${manifoldCADExportNames}} = ${globals};`,\n            };\n        });\n        // Virtual files.\n        build.onLoad({ filter: /.*/, namespace: 'virtual-file' }, (args) => ({ contents: (options.files)[args.path] }));\n        // Unless disabled, handle HTTP/HTTPs urls.\n        if (options.fetchRemotePackages !== false) {\n            // Resolve absolute urls.\n            build.onResolve({ filter: /^https?:\\/\\// }, args => {\n                return { path: args.path, namespace: 'http-url' };\n            });\n            // Resolve relative http urls into absolute urls.\n            build.onResolve({ filter: /.*/, namespace: 'http-url' }, args => {\n                const path = new URL(args.path, args.importer).toString();\n                // Is this a manifoldCAD context import from a remote package?\n                // e.g.: `/npm/manifold-3d/manifoldCAD/+esm`\n                if (path === cdnUrl(manifoldCADExportSpecifier, options.jsCDN)) {\n                    const response = {\n                        path,\n                        namespace: 'manifold-cad-globals',\n                        pluginData: { toplevel: false }\n                    };\n                    return response;\n                }\n                return { path, namespace: 'http-url' };\n            });\n            // Fetch urls.\n            build.onLoad({ filter: /.*/, namespace: 'http-url' }, async (args) => {\n                const response = await fetch(args.path);\n                if (response.ok) {\n                    log(`Fetching ${args.path}.`);\n                    return { contents: await response.text() };\n                }\n                else {\n                    return { errors: [{ text: await response.text() }] };\n                }\n            });\n        }\n    },\n});\nlet esbuild_initialized = false;\nconst getEsbuildConfig = async (options = {}) => {\n    if (!esbuild_initialized) {\n        const esbuildOptions = {};\n        if (!isNode()) {\n            if (!esbuildWasmUrl || typeof esbuildWasmUrl !== 'string') {\n                throw new Error('No URL given for \\'esbuild.wasm\\'.');\n            }\n            esbuildOptions.wasmURL = esbuildWasmUrl;\n            esbuildOptions.worker = esbuildHasOwnWorker === true;\n        }\n        await esbuild.initialize(esbuildOptions);\n        esbuild_initialized = true;\n    }\n    return {\n        // Create a bundle in memory.\n        bundle: true,\n        write: false,\n        platform: 'neutral',\n        treeShaking: false,\n        sourcemap: 'inline',\n        sourcesContent: false, // We have the source handy already.\n        format: 'cjs',\n        logLevel: 'silent',\n        plugins: [\n            esbuildManifoldPlugin(options),\n        ],\n        // Some CDN imports will check import.meta.env.  This is only present when\n        // generating an ESM bundle.  In other cases, it generates log noise, so\n        // let's drop it down a log level.\n        logOverride: { 'empty-import-meta': 'info' }\n    };\n};\nexport const bundleFile = async (entrypoint, options = {}) => {\n    try {\n        const built = await esbuild.build({\n            ...(await getEsbuildConfig({ ...options, filename: entrypoint })),\n            entryPoints: [entrypoint],\n        });\n        return built.outputFiles[0].text;\n    }\n    catch (error) {\n        if (error.errors?.length) {\n            throw new BundlerError(error);\n        }\n        else {\n            throw error;\n        }\n    }\n};\nexport const bundleCode = async (code, options = {}) => {\n    try {\n        let resolveDir;\n        if (isNode() && options.filename) {\n            const { dirname } = await import('node:path');\n            resolveDir = dirname(options.filename);\n        }\n        const built = await esbuild.build({\n            ...(await getEsbuildConfig(options)),\n            stdin: {\n                contents: code,\n                sourcefile: options.filename,\n                resolveDir,\n                loader: 'ts',\n            }\n        });\n        return built.outputFiles[0].text;\n    }\n    catch (error) {\n        if (error.errors?.length) {\n            throw new BundlerError(error);\n        }\n        else {\n            throw error;\n        }\n    }\n};\n//# sourceMappingURL=bundler.js.map","/* prettier-ignore */\r\nexport const defMatrix = [\r\n    1, 0, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1\r\n  ]\r\n","\r\n/** transform for attribute as specifiend in 3mf format\r\n * \r\n * When objects need to be transformed for rotation, scaling, or translation purposes, \r\n * row-major affine 3D matrices (4x4) are used. The matrix SHOULD NOT be singular or nearly singular.\r\n * Transforms are of the form, where only the first 3 column values are specified. \r\n * The last column is never provided, and has the fixed values 0.0, 0.0, 0.0, 1.0. \r\n * When specified as an attribute value, \r\n * matrices have the form \"m00 m01 m02 m10 m11 m12 m20 m21 m22 m30 m31 m32\" \r\n * where each value is a decimal number of arbitrary precision.\r\n * \r\n * @param {mat4} matrix\r\n * @return string tarnsform attribute value\r\n*/\r\nexport const matrix2str = m=>{\r\n    let str = ''\r\n    for(let i=0; i<16; i++){\r\n        if(i % 4 == 3) continue\r\n        if(i>0) str += ' '\r\n        str += m[i] || 0\r\n    }\r\n    return str\r\n}","import { defMatrix } from './defMatrix.js'\r\nimport { matrix2str } from './matrix2str.js'\r\n/**\r\n * \r\n * @param {string} id - must start with 1, can not be zero by spec\r\n * @param {mat4} matrix \r\n * @returns \r\n */\r\nexport const makeItem = (id = 1, matrix = defMatrix) =>\r\n  `    <item objectid=\"${id}\" transform=\"${matrix2str(matrix)}\" />\\n`\r\n","export const toDate3mf = d => (d ? d.toISOString().substring(0, 10) : '')\r\n","import { toDate3mf } from './toDate3mf.js'\r\n\r\n/**\r\n * @typedef Header\r\n * @prop {'micron'|'millimeter'|'centimeter'|'inch'|'foot'|'meter'} unit\r\n * @prop {string} [title]\r\n * @prop {string} [author]\r\n * @prop {string} [description]\r\n * @prop {string} [application]\r\n * @prop {string} [creationDate]\r\n * @prop {string} [license]\r\n * @prop {string} [modificationDate] \r\n * \r\n * \r\n * @param {Array<string>} out \r\n * @param {Header} param1 \r\n */\r\nexport function pushHeader(out,{\r\n  unit = 'millimeter',\r\n  title = 'jscad model',\r\n  author = '',\r\n  description = '',\r\n  application = 'jscad',\r\n  creationDate = new Date(),\r\n  license = '',\r\n  modificationDate,\r\n}={}) {\r\n  out.push(\r\n    `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<model unit=\"${unit}\" xml:lang=\"en-US\" xmlns=\"http://schemas.microsoft.com/3dmanufacturing/core/2015/02\" xmlns:slic3rpe=\"http://schemas.slic3r.org/3mf/2017/06\">\r\n  <metadata name=\"slic3rpe:Version3mf\">1</metadata>\r\n  <metadata name=\"Title\">${title}</metadata>\r\n  <metadata name=\"Designer\">${author}</metadata>\r\n  <metadata name=\"Description\">${description || title}</metadata>\r\n  <metadata name=\"Copyright\"></metadata>\r\n  <metadata name=\"LicenseTerms\">${license}</metadata>\r\n  <metadata name=\"Rating\"></metadata>\r\n  <metadata name=\"CreationDate\">${toDate3mf(creationDate)}</metadata>\r\n  <metadata name=\"ModificationDate\">${toDate3mf(modificationDate || creationDate)}</metadata>\r\n  <metadata name=\"Application\">${application}</metadata>\r\n   `,\r\n  )\r\n}\r\n","import {defMatrix} from './defMatrix.js'\r\nimport {matrix2str} from './matrix2str.js'\r\n\r\n/**\r\n * \r\n * @param {Array<String>} out \r\n * @param {string} id \r\n * @param {Array<import('../index.js').Component3MF>} children \r\n * @param {string} name \r\n */\r\nexport function pushObjectWithComponents(out, id, children, name) {\r\n  out.push(`<object id=\"${id}\" type=\"model\"${\r\n      name == null ? '' : ' name=\"' + name + '\"'}>\\n`)\r\n  out.push(` <components>\\n`)\r\n  children.forEach(\r\n      ({objectID, transform}) => {addComp(out, objectID, transform)})\r\n  out.push(` </components>\\n`)\r\n  out.push(`</object>\\n`)\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} out \r\n * @param {*} id - must start with 1, can not be zero by spec \r\n * @param {*} matrix \r\n */\r\nconst addComp = (out, id = 1, matrix = defMatrix) => {\r\n  out.push(\r\n      `    <component objectid=\"${id}\" transform=\"${matrix2str(matrix)}\" />\\n`)\r\n}\r\n","/**\r\n *\r\n * @param {Arrray<string>} out\r\n * @param {string} id\r\n * @param {Float32Array} vertices\r\n * @param {Uint32Array} indices\r\n * @param {number} precision\r\n * @param {string} [name]\r\n * @returns\r\n */\r\nexport function pushObjectWithMesh(\r\n    out, id, vertices, indices, precision, name) {\r\n  out.push(`  <object id=\"${id}\" type=\"model\"${\r\n      !name ? '' : ' name=\"' + name + '\"'}>\r\n   <mesh>\r\n    <vertices>\r\n`)\r\n\r\n  for (let i = 0; i < vertices.length; i += 3) {\r\n    out.push(`     <vertex x=\"${vertices[i].toPrecision(precision)}\" y=\"${\r\n        vertices[i + 1].toPrecision(\r\n            precision)}\" z=\"${vertices[i + 2].toPrecision(precision)}\" />\\n`)\r\n  }\r\n\r\n  out.push(`    </vertices>\r\n    <triangles>\r\n`)\r\n\r\n  for (let i = 0; i < indices.length; i += 3) {\r\n    out.push(`     <triangle v1=\"${indices[i]}\" v2=\"${indices[i + 1]}\" v3=\"${\r\n        indices[i + 2]}\" />\\n`)\r\n  }\r\n\r\n\r\n  out.push(`    </triangles>\r\n   </mesh>\r\n  </object>\r\n`)\r\n\r\n  return out\r\n}","\r\n/** File that describes content types inside a 3mf  */\r\nexport const fileForContentTypes = {\r\n  name:'[Content_Types].xml',\r\n  content: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\">\r\n<Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" />\r\n<Default Extension=\"model\" ContentType=\"application/vnd.ms-package.3dmanufacturing-3dmodel+xml\" />\r\n<Default Extension=\"png\" ContentType=\"image/png\" />\r\n</Types>`\r\n}\r\n\r\n","// this implementation exports to 3mf by filling array of strings and doing join\r\n// at the encoding tests for large files have shown significant speedup related\r\n// to using string concatenation\r\nimport { makeItem } from './src/makeItem.js'\r\nimport { pushHeader } from './src/pushHeader.js'\r\nimport { pushObjectWithComponents } from './src/pushObjectComponent.js'\r\nimport { pushObjectWithMesh } from './src/pushObjectMesh.js'\r\n\r\nexport * from './src/staticFiles.js'\r\n\r\n/**\r\n * @typedef Mesh3MF\r\n * @prop {string} id\r\n * @prop {Float32Array} vertices\r\n * @prop {Uint32Array} indices\r\n * @prop {string} [name]\r\n *\r\n * @typedef Mesh3MFSimpleExt\r\n * @prop {mat4} transform\r\n *\r\n * @typedef {Mesh3MF & Mesh3MFSimpleExt} Mesh3MFSimple\r\n *\r\n * @typedef Component3MF\r\n * @prop {string} id\r\n * @prop {string} name\r\n * @prop {Array<Child3MF>} children\r\n *\r\n * @typedef Child3MF\r\n * @prop {string} objectID\r\n * @prop {mat4} transform\r\n *\r\n * @typedef To3MF\r\n * @prop {Array<Mesh3MF>} meshes - manually declare meshes\r\n * @prop {Array<Component3MF>} [components] - components can combine items\r\n * @prop {Array<Child3MF>} items - output items, each pointing to component or mesh with objectID\r\n * @prop {number} precision\r\n * @prop {import('./src/pushHeader.js').Header} header\r\n */\r\n\r\n/**\r\n * @param {To3MF} options\r\n * @returns string\r\n */\r\nexport function to3dmodel({ meshes = [], components = [], items = [], precision = 17, header }) {\r\n  // items to be placed on the scene (build section of 3mf)\r\n  const out = []\r\n\r\n  // <model> tag is opened here\r\n  pushHeader(out, header)\r\n\r\n  // #region resources\r\n  out.push('  <resources>\\n')\r\n\r\n  if (items.length == 0) {\r\n    console.error('3MF empty build! Include items or simple.')\r\n  }\r\n\r\n  meshes.forEach(({ id, vertices, indices, name }) => pushObjectWithMesh(out, id, vertices, indices, precision, name))\r\n\r\n  components.forEach(({ id, children, name }) => {\r\n    pushObjectWithComponents(out, id, children, name)\r\n  })\r\n\r\n  out.push('  </resources>\\n')\r\n  // #endregion\r\n\r\n  out.push(`<build>\\n`)\r\n  items.forEach(({ objectID, transform }) => {\r\n    out.push(makeItem(objectID, transform))\r\n  })\r\n  out.push('</build>\\n')\r\n\r\n  out.push('</model>\\n') // model tag was opened in the pushHeader()\r\n\r\n  return out.join('')\r\n}\r\n\r\n/** Simple export provided meshes that have transform attached to them and autocreate items and pass to to3dmodel.\r\n *\r\n * @param {Array<Mesh3MFSimple>} meshes\r\n * @param {import('./src/pushHeader.js').Header} header\r\n * @param {number} precision\r\n * @returns string\r\n */\r\nexport function to3dmodelSimple(meshes, header, precision) {\r\n  const items = []\r\n  meshes.forEach(({ id, transform }) => {\r\n    items.push({ objectID: id, transform })\r\n  })\r\n  return to3dmodel({ meshes, items, header, precision })\r\n}\r\n\r\n/** File that describes file relationships inside a 3mf  */\r\nexport class FileForRelThumbnail {\r\n  constructor() {\r\n    this.idSeq = 0\r\n    this.lines = [\r\n      `<?xml version=\"1.0\" encoding=\"UTF-8\"?>`,\r\n      `<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">`,\r\n    ]\r\n  }\r\n  get name() {\r\n    return '_rels/.rels'\r\n  }\r\n    /**\r\n   *\r\n   * @param {*} target file path\r\n   * @param {*} xmlType xml schema url\r\n   */\r\n  addRel(target, xmlType) {\r\n    this.lines.push(`  <Relationship Target=\"${target}\" Id=\"rel-${++this.idSeq}\" Type=\"${xmlType}\" />`)\r\n  }\r\n  add3dModel(path) {\r\n    this.addRel(path, 'http://schemas.microsoft.com/3dmanufacturing/2013/01/3dmodel')\r\n  }\r\n  addThumbnail(path) {\r\n    this.addRel(path, 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/thumbnail')\r\n  }\r\n\r\n  get content() {\r\n    return this.lines.join('\\n') + `\\n</Relationships>`\r\n  }\r\n}\r\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","// Copyright 2023-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { fileForContentTypes, FileForRelThumbnail, to3dmodel } from '@jscadui/3mf-export';\nimport { strToU8, zipSync } from 'fflate';\n/**\n * Object to convert GLTF documents to a 3MF binary.\n *\n * @property unit\n * @property title\n * @property author\n * @property description\n * @property application\n * @property creationDate\n * @property license\n * @property modificationDate\n */\nexport class Export3MF {\n    extensions = ['3mf'];\n    unit = 'millimeter';\n    title = 'ManifoldCAD.org model';\n    author;\n    description = 'ManifoldCAD.org model';\n    application = 'ManifoldCAD.org';\n    creationDate;\n    license;\n    modificationDate;\n    /**\n     * Convert a GLTF-Transform document to a 3MF model.\n     *\n     * @param doc The GLTF document to convert.\n     * @returns A blob containing the converted model.\n     */\n    async asBlob(doc) {\n        const to3mf = {\n            meshes: [],\n            components: [],\n            items: [],\n            precision: 7,\n            header: {\n                unit: this.unit,\n                title: this.title,\n                description: this.description,\n                application: this.application,\n                creationDate: this.creationDate,\n                license: this.license,\n                modificationDate: this.modificationDate\n            }\n        };\n        // GLTF references by array index.\n        // 3MF references by ID.\n        let nextGlobalID = 1;\n        const object2globalID = new Map();\n        const getObjectID = (obj) => `${object2globalID.get(obj)}`;\n        const getMeshID = (mesh) => {\n            // If a mesh has been cloned with a different material, find\n            // the original mesh.  This isn't a general GLTF feature; this is set\n            // by the ManifoldCAD GLTF exporter.\n            const { clonedFrom } = mesh.getExtras();\n            if (clonedFrom) {\n                return object2globalID.get(clonedFrom);\n            }\n            return object2globalID.get(mesh);\n        };\n        const setObjectID = (obj) => {\n            const objectID = `${nextGlobalID++}`;\n            object2globalID.set(obj, objectID);\n            return objectID;\n        };\n        // Get meshes in place first.\n        for (const mesh of doc.getRoot().listMeshes()) {\n            const manifoldPrimitive = mesh.getExtension('EXT_mesh_manifold');\n            if (manifoldPrimitive) {\n                // This mesh has a list of triangle vertices already.\n                const indices = manifoldPrimitive.getIndices();\n                const positionAccessor = mesh.listPrimitives()[0].getAttribute('POSITION');\n                const objectID = setObjectID(mesh);\n                to3mf.meshes.push({\n                    vertices: positionAccessor.getArray(),\n                    indices: indices.getArray(),\n                    id: objectID\n                });\n            }\n            const { clonedFrom } = mesh.getExtras();\n            if (!manifoldPrimitive && clonedFrom) {\n                // GLTF Mesh, instance of another mesh.\n                // getMeshID will find this when adding it to components.\n                continue;\n            }\n            if (!manifoldPrimitive && !clonedFrom) {\n                // GLTF Mesh, no manifold primitive,\n                // not an instance of another mesh.\n                // We should handle this case, but for now we do not.\n                console.log('skipping non-ManifoldCAD mesh');\n            }\n        }\n        // Some 3MF parsers (like PrusaSlicer) expect child nodes\n        // to be defined before their parents.\n        const nodes = doc.getRoot().listNodes().reverse();\n        for (const node of nodes) {\n            const meshID = node.getMesh() && getMeshID(node.getMesh());\n            to3mf.components.push({\n                id: setObjectID(node),\n                name: node.getName(),\n                children: meshID ? [{ objectID: meshID }] : [],\n                transform: node.getMatrix().map(n => n.toFixed(to3mf.precision))\n            });\n        }\n        // Now we can work out our node hierarchy.\n        for (const node of doc.getRoot().listNodes()) {\n            const objectID = getObjectID(node);\n            if (!objectID) {\n                console.log(`Could not find object ID for ${node.getName()}`);\n                continue;\n            }\n            const child = {\n                objectID,\n                // Most 3MF parsers will not accept a number in scientific notation.\n                // Transforms are serialized to a string, containing 12 numbers\n                // separated by spaces.  If we force a number to a string here,\n                // 3mf-export passes it through.\n                transform: node.getMatrix().map(n => n.toFixed(to3mf?.precision ?? 7))\n            };\n            const parent = node.getParentNode();\n            if (parent) {\n                // This is a child node, add it to its parent.\n                const parentID = getObjectID(parent);\n                const parent3mf = to3mf.components.find((comp) => comp.id == parentID);\n                parent3mf.children.push(child);\n            }\n            else {\n                // This is a root node.\n                // Add it to the build list.\n                to3mf.items.push({ objectID });\n            }\n        }\n        const fileForRelThumbnail = new FileForRelThumbnail();\n        fileForRelThumbnail.add3dModel('3D/3dmodel.model');\n        const model = to3dmodel(to3mf);\n        const files = {};\n        files['3D/3dmodel.model'] = strToU8(model);\n        files[fileForContentTypes.name] = strToU8(fileForContentTypes.content);\n        files[fileForRelThumbnail.name] = strToU8(fileForRelThumbnail.content);\n        const zipFile = zipSync(files);\n        return new Blob([zipFile], { type: 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml' });\n    }\n}\n//# sourceMappingURL=export-3mf.js.map","class EventDispatcher {\n  constructor() {\n    this._listeners = {};\n  }\n\n  addEventListener(type, listener) {\n    const listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n\n    return this;\n  }\n\n  removeEventListener(type, listener) {\n    const listeners = this._listeners;\n    const listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      const index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n\n    return this;\n  }\n\n  dispatchEvent(event) {\n    const listeners = this._listeners;\n    const listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      // Make a copy, in case listeners are removed while iterating.\n      const array = listenerArray.slice(0);\n\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n    }\n\n    return this;\n  }\n\n  dispose() {\n    for (const key in this._listeners) {\n      delete this._listeners[key];\n    }\n  }\n\n}\n\n/**\n * Represents a connection between two {@link GraphNode} resources in a {@link Graph}.\n *\n * The left node is considered the owner, and the right node the resource. The\n * owner is responsible for being able find and remove a reference to a resource, given\n * that link. The resource does not hold a reference to the link or to the owner,\n * although that reverse lookup can be done on the graph.\n */\nclass GraphEdge {\n  constructor(_name, _parent, _child, _attributes = {}) {\n    this._name = void 0;\n    this._parent = void 0;\n    this._child = void 0;\n    this._attributes = void 0;\n    this._disposed = false;\n    this._name = _name;\n    this._parent = _parent;\n    this._child = _child;\n    this._attributes = _attributes;\n\n    if (!_parent.isOnGraph(_child)) {\n      throw new Error('Cannot connect disconnected graphs.');\n    }\n  }\n  /** Name (attribute name from parent {@link GraphNode}). */\n\n\n  getName() {\n    return this._name;\n  }\n  /** Owner node. */\n\n\n  getParent() {\n    return this._parent;\n  }\n  /** Resource node. */\n\n\n  getChild() {\n    return this._child;\n  }\n  /**\n   * Sets the child node.\n   *\n   * @internal Only {@link Graph} implementations may safely call this method directly. Use\n   * \t{@link Property.swap} or {@link Graph.swapChild} instead.\n   */\n\n\n  setChild(child) {\n    this._child = child;\n    return this;\n  }\n  /** Attributes of the graph node relationship. */\n\n\n  getAttributes() {\n    return this._attributes;\n  }\n  /** Destroys a (currently intact) edge, updating both the graph and the owner. */\n\n\n  dispose() {\n    if (this._disposed) return; // @ts-expect-error GraphEdge doesn't know types of parent GraphNode.\n\n    this._parent._destroyRef(this);\n\n    this._disposed = true;\n  }\n  /** Whether this link has been destroyed. */\n\n\n  isDisposed() {\n    return this._disposed;\n  }\n\n}\n\n/**\n * A graph manages a network of {@link GraphNode} nodes, connected\n * by {@link @Link} edges.\n */\n\nclass Graph extends EventDispatcher {\n  constructor(...args) {\n    super(...args);\n    this._emptySet = new Set();\n    this._edges = new Set();\n    this._parentEdges = new Map();\n    this._childEdges = new Map();\n  }\n\n  /** Returns a list of all parent->child edges on this graph. */\n  listEdges() {\n    return Array.from(this._edges);\n  }\n  /** Returns a list of all edges on the graph having the given node as their child. */\n\n\n  listParentEdges(node) {\n    return Array.from(this._childEdges.get(node) || this._emptySet);\n  }\n  /** Returns a list of parent nodes for the given child node. */\n\n\n  listParents(node) {\n    const parentSet = new Set();\n\n    for (const edge of this.listParentEdges(node)) {\n      parentSet.add(edge.getParent());\n    }\n\n    return Array.from(parentSet);\n  }\n  /** Returns a list of all edges on the graph having the given node as their parent. */\n\n\n  listChildEdges(node) {\n    return Array.from(this._parentEdges.get(node) || this._emptySet);\n  }\n  /** Returns a list of child nodes for the given parent node. */\n\n\n  listChildren(node) {\n    const childSet = new Set();\n\n    for (const edge of this.listChildEdges(node)) {\n      childSet.add(edge.getChild());\n    }\n\n    return Array.from(childSet);\n  }\n\n  disconnectParents(node, filter) {\n    for (const edge of this.listParentEdges(node)) {\n      if (!filter || filter(edge.getParent())) {\n        edge.dispose();\n      }\n    }\n\n    return this;\n  }\n  /**********************************************************************************************\n   * Internal.\n   */\n\n  /**\n   * Creates a {@link GraphEdge} connecting two {@link GraphNode} instances. Edge is returned\n   * for the caller to store.\n   * @param a Owner\n   * @param b Resource\n   * @hidden\n   * @internal\n   */\n\n\n  _createEdge(name, a, b, attributes) {\n    const edge = new GraphEdge(name, a, b, attributes);\n\n    this._edges.add(edge);\n\n    const parent = edge.getParent();\n    if (!this._parentEdges.has(parent)) this._parentEdges.set(parent, new Set());\n\n    this._parentEdges.get(parent).add(edge);\n\n    const child = edge.getChild();\n    if (!this._childEdges.has(child)) this._childEdges.set(child, new Set());\n\n    this._childEdges.get(child).add(edge);\n\n    return edge;\n  }\n  /**\n   * Detaches a {@link GraphEdge} from the {@link Graph}. Before calling this\n   * method, ensure that the GraphEdge has first been detached from any\n   * associated {@link GraphNode} attributes.\n   * @hidden\n   * @internal\n   */\n\n\n  _destroyEdge(edge) {\n    this._edges.delete(edge);\n\n    this._parentEdges.get(edge.getParent()).delete(edge);\n\n    this._childEdges.get(edge.getChild()).delete(edge);\n\n    return this;\n  }\n\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * An ordered collection of {@link Ref Refs}, allowing duplicates. Removing\n * a Ref is an O(n) operation — use {@link RefSet} for faster removal, if\n * duplicates are not required.\n */\nclass RefList {\n  constructor(refs) {\n    this.list = [];\n\n    if (refs) {\n      for (const ref of refs) {\n        this.list.push(ref);\n      }\n    }\n  }\n\n  add(ref) {\n    this.list.push(ref);\n  }\n\n  remove(ref) {\n    const index = this.list.indexOf(ref);\n    if (index >= 0) this.list.splice(index, 1);\n  }\n\n  removeChild(child) {\n    const refs = [];\n\n    for (const ref of this.list) {\n      if (ref.getChild() === child) {\n        refs.push(ref);\n      }\n    }\n\n    for (const ref of refs) {\n      this.remove(ref);\n    }\n\n    return refs;\n  }\n\n  listRefsByChild(child) {\n    const refs = [];\n\n    for (const ref of this.list) {\n      if (ref.getChild() === child) {\n        refs.push(ref);\n      }\n    }\n\n    return refs;\n  }\n\n  values() {\n    return this.list;\n  }\n\n}\n/**\n * An ordered collection of {@link Ref Refs}, without duplicates. Adding or\n * removing a Ref is typically O(1) or O(log(n)), and faster than\n * {@link RefList}. If support for duplicates is required, use {@link RefList}.\n */\n\nclass RefSet {\n  constructor(refs) {\n    this.set = new Set();\n    this.map = new Map();\n\n    if (refs) {\n      for (const ref of refs) {\n        this.add(ref);\n      }\n    }\n  }\n\n  add(ref) {\n    const child = ref.getChild();\n    this.removeChild(child);\n    this.set.add(ref);\n    this.map.set(child, ref);\n  }\n\n  remove(ref) {\n    this.set.delete(ref);\n    this.map.delete(ref.getChild());\n  }\n\n  removeChild(child) {\n    const ref = this.map.get(child) || null;\n    if (ref) this.remove(ref);\n    return ref;\n  }\n\n  getRefByChild(child) {\n    return this.map.get(child) || null;\n  }\n\n  values() {\n    return Array.from(this.set);\n  }\n\n}\n/**\n * Map (or dictionary) from string keys to {@link Ref Refs}.\n */\n\nclass RefMap {\n  constructor(map) {\n    this.map = {};\n\n    if (map) {\n      Object.assign(this.map, map);\n    }\n  }\n\n  set(key, child) {\n    this.map[key] = child;\n  }\n\n  delete(key) {\n    delete this.map[key];\n  }\n\n  get(key) {\n    return this.map[key] || null;\n  }\n\n  keys() {\n    return Object.keys(this.map);\n  }\n\n  values() {\n    return Object.values(this.map);\n  }\n\n}\n\nconst $attributes = Symbol('attributes');\nconst $immutableKeys = Symbol('immutableKeys');\n/**\n * Represents a node in a {@link Graph}.\n */\n\nclass GraphNode extends EventDispatcher {\n  /**\n   * Internal graph used to search and maintain references.\n   * @hidden\n   */\n\n  /**\n   * Attributes (literal values and GraphNode references) associated with this instance. For each\n   * GraphNode reference, the attributes stores a {@link GraphEdge}. List and Map references are\n   * stored as arrays and dictionaries of edges.\n   * @internal\n   */\n\n  /**\n   * Attributes included with `getDefaultAttributes` are considered immutable, and cannot be\n   * modifed by `.setRef()`, `.copy()`, or other GraphNode methods. Both the edges and the\n   * properties will be disposed with the parent GraphNode.\n   *\n   * Currently, only single-edge references (getRef/setRef) are supported as immutables.\n   *\n   * @internal\n   */\n  constructor(graph) {\n    super();\n    this._disposed = false;\n    this.graph = void 0;\n    this[$attributes] = void 0;\n    this[$immutableKeys] = void 0;\n    this.graph = graph;\n    this[$immutableKeys] = new Set();\n    this[$attributes] = this._createAttributes();\n  }\n  /**\n   * Returns default attributes for the graph node. Subclasses having any attributes (either\n   * literal values or references to other graph nodes) must override this method. Literal\n   * attributes should be given their default values, if any. References should generally be\n   * initialized as empty (Ref → null, RefList → [], RefMap → {}) and then modified by setters.\n   *\n   * Any single-edge references (setRef) returned by this method will be considered immutable,\n   * to be owned by and disposed with the parent node. Multi-edge references (addRef, removeRef,\n   * setRefMap) cannot be returned as default attributes.\n   */\n\n\n  getDefaults() {\n    return {};\n  }\n  /**\n   * Constructs and returns an object used to store a graph nodes attributes. Compared to the\n   * default Attributes interface, this has two distinctions:\n   *\n   * 1. Slots for GraphNode<T> objects are replaced with slots for GraphEdge<this, GraphNode<T>>\n   * 2. GraphNode<T> objects provided as defaults are considered immutable\n   *\n   * @internal\n   */\n\n\n  _createAttributes() {\n    const defaultAttributes = this.getDefaults();\n    const attributes = {};\n\n    for (const key in defaultAttributes) {\n      const value = defaultAttributes[key]; // TODO(design): With Ref, RefList, and RefMap types, should users\n      // be able to pass them all here? Listeners must be added.\n\n      if (value instanceof GraphNode) {\n        const ref = this.graph._createEdge(key, this, value);\n\n        this[$immutableKeys].add(key);\n        attributes[key] = ref;\n      } else {\n        attributes[key] = value;\n      }\n    }\n\n    return attributes;\n  }\n  /** @internal Returns true if two nodes are on the same {@link Graph}. */\n\n\n  isOnGraph(other) {\n    return this.graph === other.graph;\n  }\n  /** Returns true if the node has been permanently removed from the graph. */\n\n\n  isDisposed() {\n    return this._disposed;\n  }\n  /**\n   * Removes both inbound references to and outbound references from this object. At the end\n   * of the process the object holds no references, and nothing holds references to it. A\n   * disposed object is not reusable.\n   */\n\n\n  dispose() {\n    if (this._disposed) return;\n    this.graph.listChildEdges(this).forEach(edge => edge.dispose());\n    this.graph.disconnectParents(this);\n    this._disposed = true;\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n  /**\n   * Removes all inbound references to this object. At the end of the process the object is\n   * considered 'detached': it may hold references to child resources, but nothing holds\n   * references to it. A detached object may be re-attached.\n   */\n\n\n  detach() {\n    this.graph.disconnectParents(this);\n    return this;\n  }\n  /**\n   * Transfers this object's references from the old node to the new one. The old node is fully\n   * detached from this parent at the end of the process.\n   *\n   * @hidden\n   */\n\n\n  swap(prevValue, nextValue) {\n    for (const attribute in this[$attributes]) {\n      const value = this[$attributes][attribute];\n\n      if (value instanceof GraphEdge) {\n        const ref = value;\n\n        if (ref.getChild() === prevValue) {\n          this.setRef(attribute, nextValue, ref.getAttributes());\n        }\n      } else if (value instanceof RefList) {\n        for (const ref of value.listRefsByChild(prevValue)) {\n          const refAttributes = ref.getAttributes();\n          this.removeRef(attribute, prevValue);\n          this.addRef(attribute, nextValue, refAttributes);\n        }\n      } else if (value instanceof RefSet) {\n        const ref = value.getRefByChild(prevValue);\n\n        if (ref) {\n          const refAttributes = ref.getAttributes();\n          this.removeRef(attribute, prevValue);\n          this.addRef(attribute, nextValue, refAttributes);\n        }\n      } else if (value instanceof RefMap) {\n        for (const key of value.keys()) {\n          const ref = value.get(key);\n\n          if (ref.getChild() === prevValue) {\n            this.setRefMap(attribute, key, nextValue, ref.getAttributes());\n          }\n        }\n      }\n    }\n\n    return this;\n  }\n  /**********************************************************************************************\n   * Literal attributes.\n   */\n\n  /** @hidden */\n\n\n  get(attribute) {\n    return this[$attributes][attribute];\n  }\n  /** @hidden */\n\n\n  set(attribute, value) {\n    this[$attributes][attribute] = value;\n    return this.dispatchEvent({\n      type: 'change',\n      attribute\n    });\n  }\n  /**********************************************************************************************\n   * Ref: 1:1 graph node references.\n   */\n\n  /** @hidden */\n\n\n  getRef(attribute) {\n    const ref = this[$attributes][attribute];\n    return ref ? ref.getChild() : null;\n  }\n  /** @hidden */\n\n\n  setRef(attribute, value, attributes) {\n    if (this[$immutableKeys].has(attribute)) {\n      throw new Error(`Cannot overwrite immutable attribute, \"${attribute}\".`);\n    }\n\n    const prevRef = this[$attributes][attribute];\n    if (prevRef) prevRef.dispose(); // TODO(cleanup): Possible duplicate event.\n\n    if (!value) return this;\n\n    const ref = this.graph._createEdge(attribute, this, value, attributes);\n\n    this[$attributes][attribute] = ref;\n    return this.dispatchEvent({\n      type: 'change',\n      attribute\n    });\n  }\n  /**********************************************************************************************\n   * RefList: 1:many graph node references.\n   */\n\n  /** @hidden */\n\n\n  listRefs(attribute) {\n    const refs = this.assertRefList(attribute);\n    return refs.values().map(ref => ref.getChild());\n  }\n  /** @hidden */\n\n\n  addRef(attribute, value, attributes) {\n    const ref = this.graph._createEdge(attribute, this, value, attributes);\n\n    const refs = this.assertRefList(attribute);\n    refs.add(ref);\n    return this.dispatchEvent({\n      type: 'change',\n      attribute\n    });\n  }\n  /** @hidden */\n\n\n  removeRef(attribute, value) {\n    const refs = this.assertRefList(attribute);\n\n    if (refs instanceof RefList) {\n      for (const ref of refs.listRefsByChild(value)) {\n        ref.dispose();\n      }\n    } else {\n      const ref = refs.getRefByChild(value);\n      if (ref) ref.dispose();\n    }\n\n    return this;\n  }\n  /** @hidden */\n\n\n  assertRefList(attribute) {\n    const refs = this[$attributes][attribute];\n\n    if (refs instanceof RefList || refs instanceof RefSet) {\n      return refs;\n    } // TODO(v3) Remove warning.\n\n\n    throw new Error(`Expected RefList or RefSet for attribute \"${attribute}\"`);\n  }\n  /**********************************************************************************************\n   * RefMap: Named 1:many (map) graph node references.\n   */\n\n  /** @hidden */\n\n\n  listRefMapKeys(attribute) {\n    return this.assertRefMap(attribute).keys();\n  }\n  /** @hidden */\n\n\n  listRefMapValues(attribute) {\n    return this.assertRefMap(attribute).values().map(ref => ref.getChild());\n  }\n  /** @hidden */\n\n\n  getRefMap(attribute, key) {\n    const refMap = this.assertRefMap(attribute);\n    const ref = refMap.get(key);\n    return ref ? ref.getChild() : null;\n  }\n  /** @hidden */\n\n\n  setRefMap(attribute, key, value, metadata) {\n    const refMap = this.assertRefMap(attribute);\n    const prevRef = refMap.get(key);\n    if (prevRef) prevRef.dispose(); // TODO(cleanup): Possible duplicate event.\n\n    if (!value) return this;\n    metadata = Object.assign(metadata || {}, {\n      key: key\n    });\n\n    const ref = this.graph._createEdge(attribute, this, value, _extends({}, metadata, {\n      key\n    }));\n\n    refMap.set(key, ref);\n    return this.dispatchEvent({\n      type: 'change',\n      attribute,\n      key\n    });\n  }\n  /** @hidden */\n\n\n  assertRefMap(attribute) {\n    const map = this[$attributes][attribute];\n\n    if (map instanceof RefMap) {\n      return map;\n    } // TODO(v3) Remove warning.\n\n\n    throw new Error(`Expected RefMap for attribute \"${attribute}\"`);\n  }\n  /**********************************************************************************************\n   * Events.\n   */\n\n  /**\n   * Dispatches an event on the GraphNode, and on the associated\n   * Graph. Event types on the graph are prefixed, `\"node:[type]\"`.\n   */\n\n\n  dispatchEvent(event) {\n    super.dispatchEvent(_extends({}, event, {\n      target: this\n    }));\n    this.graph.dispatchEvent(_extends({}, event, {\n      target: this,\n      type: `node:${event.type}`\n    }));\n    return this;\n  }\n  /**********************************************************************************************\n   * Internal.\n   */\n\n  /** @hidden */\n\n\n  _destroyRef(ref) {\n    const attribute = ref.getName();\n\n    if (this[$attributes][attribute] === ref) {\n      this[$attributes][attribute] = null; // TODO(design): See _createAttributes().\n\n      if (this[$immutableKeys].has(attribute)) ref.getChild().dispose();\n    } else if (this[$attributes][attribute] instanceof RefList) {\n      this[$attributes][attribute].remove(ref);\n    } else if (this[$attributes][attribute] instanceof RefSet) {\n      this[$attributes][attribute].remove(ref);\n    } else if (this[$attributes][attribute] instanceof RefMap) {\n      const refMap = this[$attributes][attribute];\n\n      for (const key of refMap.keys()) {\n        if (refMap.get(key) === ref) {\n          refMap.delete(key);\n        }\n      }\n    } else {\n      return;\n    }\n\n    this.graph._destroyEdge(ref);\n\n    this.dispatchEvent({\n      type: 'change',\n      attribute\n    });\n  }\n\n}\n\nexport { $attributes, $immutableKeys, EventDispatcher, Graph, GraphEdge, GraphNode, RefList, RefMap, RefSet };\n//# sourceMappingURL=property-graph.modern.js.map\n","import { GraphNode, $attributes, GraphEdge, $immutableKeys, RefList, RefSet, RefMap, Graph } from 'property-graph';\nexport { Graph, GraphEdge, RefList, RefMap, RefSet } from 'property-graph';\n\n/**\n * Current version of the package.\n * @hidden\n */\nconst VERSION = `v${\"4.2.1\"}`;\n/** @hidden */\nconst GLB_BUFFER = '@glb.bin';\n/** String IDs for core {@link Property} types. */\nvar PropertyType;\n(function (PropertyType) {\n  PropertyType[\"ACCESSOR\"] = \"Accessor\";\n  PropertyType[\"ANIMATION\"] = \"Animation\";\n  PropertyType[\"ANIMATION_CHANNEL\"] = \"AnimationChannel\";\n  PropertyType[\"ANIMATION_SAMPLER\"] = \"AnimationSampler\";\n  PropertyType[\"BUFFER\"] = \"Buffer\";\n  PropertyType[\"CAMERA\"] = \"Camera\";\n  PropertyType[\"MATERIAL\"] = \"Material\";\n  PropertyType[\"MESH\"] = \"Mesh\";\n  PropertyType[\"PRIMITIVE\"] = \"Primitive\";\n  PropertyType[\"PRIMITIVE_TARGET\"] = \"PrimitiveTarget\";\n  PropertyType[\"NODE\"] = \"Node\";\n  PropertyType[\"ROOT\"] = \"Root\";\n  PropertyType[\"SCENE\"] = \"Scene\";\n  PropertyType[\"SKIN\"] = \"Skin\";\n  PropertyType[\"TEXTURE\"] = \"Texture\";\n  PropertyType[\"TEXTURE_INFO\"] = \"TextureInfo\";\n})(PropertyType || (PropertyType = {}));\n/** Vertex layout method. */\nvar VertexLayout;\n(function (VertexLayout) {\n  /**\n   * Stores vertex attributes in a single buffer view per mesh primitive. Interleaving vertex\n   * data may improve performance by reducing page-thrashing in GPU memory.\n   */\n  VertexLayout[\"INTERLEAVED\"] = \"interleaved\";\n  /**\n   * Stores each vertex attribute in a separate buffer view. May decrease performance by causing\n   * page-thrashing in GPU memory. Some 3D engines may prefer this layout, e.g. for simplicity.\n   */\n  VertexLayout[\"SEPARATE\"] = \"separate\";\n})(VertexLayout || (VertexLayout = {}));\n/** Accessor usage. */\nvar BufferViewUsage$1;\n(function (BufferViewUsage) {\n  BufferViewUsage[\"ARRAY_BUFFER\"] = \"ARRAY_BUFFER\";\n  BufferViewUsage[\"ELEMENT_ARRAY_BUFFER\"] = \"ELEMENT_ARRAY_BUFFER\";\n  BufferViewUsage[\"INVERSE_BIND_MATRICES\"] = \"INVERSE_BIND_MATRICES\";\n  BufferViewUsage[\"OTHER\"] = \"OTHER\";\n  BufferViewUsage[\"SPARSE\"] = \"SPARSE\";\n})(BufferViewUsage$1 || (BufferViewUsage$1 = {}));\n/** Texture channels. */\nvar TextureChannel;\n(function (TextureChannel) {\n  TextureChannel[TextureChannel[\"R\"] = 4096] = \"R\";\n  TextureChannel[TextureChannel[\"G\"] = 256] = \"G\";\n  TextureChannel[TextureChannel[\"B\"] = 16] = \"B\";\n  TextureChannel[TextureChannel[\"A\"] = 1] = \"A\";\n})(TextureChannel || (TextureChannel = {}));\nvar Format;\n(function (Format) {\n  Format[\"GLTF\"] = \"GLTF\";\n  Format[\"GLB\"] = \"GLB\";\n})(Format || (Format = {}));\nconst ComponentTypeToTypedArray = {\n  '5120': Int8Array,\n  '5121': Uint8Array,\n  '5122': Int16Array,\n  '5123': Uint16Array,\n  '5125': Uint32Array,\n  '5126': Float32Array\n};\n\n/**\n * *Common utilities for working with Uint8Array and Buffer objects.*\n *\n * @category Utilities\n */\nclass BufferUtils {\n  /** Creates a byte array from a Data URI. */\n  static createBufferFromDataURI(dataURI) {\n    if (typeof Buffer === 'undefined') {\n      // Browser.\n      const byteString = atob(dataURI.split(',')[1]);\n      const ia = new Uint8Array(byteString.length);\n      for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n      }\n      return ia;\n    } else {\n      // Node.js.\n      const data = dataURI.split(',')[1];\n      const isBase64 = dataURI.indexOf('base64') >= 0;\n      return Buffer.from(data, isBase64 ? 'base64' : 'utf8');\n    }\n  }\n  /** Encodes text to a byte array. */\n  static encodeText(text) {\n    return new TextEncoder().encode(text);\n  }\n  /** Decodes a byte array to text. */\n  static decodeText(array) {\n    return new TextDecoder().decode(array);\n  }\n  /**\n   * Concatenates N byte arrays.\n   */\n  static concat(arrays) {\n    let totalByteLength = 0;\n    for (const array of arrays) {\n      totalByteLength += array.byteLength;\n    }\n    const result = new Uint8Array(totalByteLength);\n    let byteOffset = 0;\n    for (const array of arrays) {\n      result.set(array, byteOffset);\n      byteOffset += array.byteLength;\n    }\n    return result;\n  }\n  /**\n   * Pads a Uint8Array to the next 4-byte boundary.\n   *\n   * Reference: [glTF → Data Alignment](https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment)\n   */\n  static pad(srcArray, paddingByte = 0) {\n    const paddedLength = this.padNumber(srcArray.byteLength);\n    if (paddedLength === srcArray.byteLength) return srcArray;\n    const dstArray = new Uint8Array(paddedLength);\n    dstArray.set(srcArray);\n    if (paddingByte !== 0) {\n      for (let i = srcArray.byteLength; i < paddedLength; i++) {\n        dstArray[i] = paddingByte;\n      }\n    }\n    return dstArray;\n  }\n  /** Pads a number to 4-byte boundaries. */\n  static padNumber(v) {\n    return Math.ceil(v / 4) * 4;\n  }\n  /** Returns true if given byte array instances are equal. */\n  static equals(a, b) {\n    if (a === b) return true;\n    if (a.byteLength !== b.byteLength) return false;\n    let i = a.byteLength;\n    while (i--) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  /**\n   * Returns a Uint8Array view of a typed array, with the same underlying ArrayBuffer.\n   *\n   * A shorthand for:\n   *\n   * ```js\n   * const buffer = new Uint8Array(\n   * \tarray.buffer,\n   * \tarray.byteOffset + byteOffset,\n   * \tMath.min(array.byteLength, byteLength)\n   * );\n   * ```\n   *\n   */\n  static toView(a, byteOffset = 0, byteLength = Infinity) {\n    return new Uint8Array(a.buffer, a.byteOffset + byteOffset, Math.min(a.byteLength, byteLength));\n  }\n  static assertView(view) {\n    if (view && !ArrayBuffer.isView(view)) {\n      throw new Error(`Method requires Uint8Array parameter; received \"${typeof view}\".`);\n    }\n    return view;\n  }\n}\n\n/**\n * *Common utilities for working with colors in vec3, vec4, or hexadecimal form.*\n *\n * Provides methods to convert linear components (vec3, vec4) to sRGB hex values. All colors in\n * the glTF specification, excluding color textures, are linear. Hexadecimal values, in sRGB\n * colorspace, are accessible through helper functions in the API as a convenience.\n *\n * ```typescript\n * // Hex (sRGB) to factor (linear).\n * const factor = ColorUtils.hexToFactor(0xFFCCCC, []);\n *\n * // Factor (linear) to hex (sRGB).\n * const hex = ColorUtils.factorToHex([1, .25, .25])\n * ```\n *\n * @category Utilities\n */\nclass ColorUtils {\n  /**\n   * Converts sRGB hexadecimal to linear components.\n   * @typeParam T vec3 or vec4 linear components.\n   */\n  static hexToFactor(hex, target) {\n    hex = Math.floor(hex);\n    const _target = target;\n    _target[0] = (hex >> 16 & 255) / 255;\n    _target[1] = (hex >> 8 & 255) / 255;\n    _target[2] = (hex & 255) / 255;\n    return this.convertSRGBToLinear(target, target);\n  }\n  /**\n   * Converts linear components to sRGB hexadecimal.\n   * @typeParam T vec3 or vec4 linear components.\n   */\n  static factorToHex(factor) {\n    const target = [...factor];\n    const [r, g, b] = this.convertLinearToSRGB(factor, target);\n    return r * 255 << 16 ^ g * 255 << 8 ^ b * 255 << 0;\n  }\n  /**\n   * Converts sRGB components to linear components.\n   * @typeParam T vec3 or vec4 linear components.\n   */\n  static convertSRGBToLinear(source, target) {\n    const _source = source;\n    const _target = target;\n    for (let i = 0; i < 3; i++) {\n      _target[i] = _source[i] < 0.04045 ? _source[i] * 0.0773993808 : Math.pow(_source[i] * 0.9478672986 + 0.0521327014, 2.4);\n    }\n    return target;\n  }\n  /**\n   * Converts linear components to sRGB components.\n   * @typeParam T vec3 or vec4 linear components.\n   */\n  static convertLinearToSRGB(source, target) {\n    const _source = source;\n    const _target = target;\n    for (let i = 0; i < 3; i++) {\n      _target[i] = _source[i] < 0.0031308 ? _source[i] * 12.92 : 1.055 * Math.pow(_source[i], 0.41666) - 0.055;\n    }\n    return target;\n  }\n}\n\n/** JPEG image support. */\nclass JPEGImageUtils {\n  match(array) {\n    return array.length >= 3 && array[0] === 255 && array[1] === 216 && array[2] === 255;\n  }\n  getSize(array) {\n    // Skip 4 chars, they are for signature\n    let view = new DataView(array.buffer, array.byteOffset + 4);\n    let i, next;\n    while (view.byteLength) {\n      // read length of the next block\n      i = view.getUint16(0, false);\n      // i = buffer.readUInt16BE(0);\n      // ensure correct format\n      validateJPEGBuffer(view, i);\n      // 0xFFC0 is baseline standard(SOF)\n      // 0xFFC1 is baseline optimized(SOF)\n      // 0xFFC2 is progressive(SOF2)\n      next = view.getUint8(i + 1);\n      if (next === 0xc0 || next === 0xc1 || next === 0xc2) {\n        return [view.getUint16(i + 7, false), view.getUint16(i + 5, false)];\n      }\n      // move to the next block\n      view = new DataView(array.buffer, view.byteOffset + i + 2);\n    }\n    throw new TypeError('Invalid JPG, no size found');\n  }\n  getChannels(_buffer) {\n    return 3;\n  }\n}\n/**\n * PNG image support.\n *\n * PNG signature: 'PNG\\r\\n\\x1a\\n'\n * PNG image header chunk name: 'IHDR'\n */\nclass PNGImageUtils {\n  match(array) {\n    return array.length >= 8 && array[0] === 0x89 && array[1] === 0x50 && array[2] === 0x4e && array[3] === 0x47 && array[4] === 0x0d && array[5] === 0x0a && array[6] === 0x1a && array[7] === 0x0a;\n  }\n  getSize(array) {\n    const view = new DataView(array.buffer, array.byteOffset);\n    const magic = BufferUtils.decodeText(array.slice(12, 16));\n    if (magic === PNGImageUtils.PNG_FRIED_CHUNK_NAME) {\n      return [view.getUint32(32, false), view.getUint32(36, false)];\n    }\n    return [view.getUint32(16, false), view.getUint32(20, false)];\n  }\n  getChannels(_buffer) {\n    return 4;\n  }\n}\n/**\n * *Common utilities for working with image data.*\n *\n * @category Utilities\n */\n// Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\nPNGImageUtils.PNG_FRIED_CHUNK_NAME = 'CgBI';\nclass ImageUtils {\n  /** Registers support for a new image format; useful for certain extensions. */\n  static registerFormat(mimeType, impl) {\n    this.impls[mimeType] = impl;\n  }\n  /**\n   * Returns detected MIME type of the given image buffer. Note that for image\n   * formats with support provided by extensions, the extension must be\n   * registered with an I/O class before it can be detected by ImageUtils.\n   */\n  static getMimeType(buffer) {\n    for (const mimeType in this.impls) {\n      if (this.impls[mimeType].match(buffer)) {\n        return mimeType;\n      }\n    }\n    return null;\n  }\n  /** Returns the dimensions of the image. */\n  static getSize(buffer, mimeType) {\n    if (!this.impls[mimeType]) return null;\n    return this.impls[mimeType].getSize(buffer);\n  }\n  /**\n   * Returns a conservative estimate of the number of channels in the image. For some image\n   * formats, the method may return 4 indicating the possibility of an alpha channel, without\n   * the ability to guarantee that an alpha channel is present.\n   */\n  static getChannels(buffer, mimeType) {\n    if (!this.impls[mimeType]) return null;\n    return this.impls[mimeType].getChannels(buffer);\n  }\n  /** Returns a conservative estimate of the GPU memory required by this image. */\n  static getVRAMByteLength(buffer, mimeType) {\n    if (!this.impls[mimeType]) return null;\n    if (this.impls[mimeType].getVRAMByteLength) {\n      return this.impls[mimeType].getVRAMByteLength(buffer);\n    }\n    let uncompressedBytes = 0;\n    const channels = 4; // See https://github.com/donmccurdy/glTF-Transform/issues/151.\n    const resolution = this.getSize(buffer, mimeType);\n    if (!resolution) return null;\n    while (resolution[0] > 1 || resolution[1] > 1) {\n      uncompressedBytes += resolution[0] * resolution[1] * channels;\n      resolution[0] = Math.max(Math.floor(resolution[0] / 2), 1);\n      resolution[1] = Math.max(Math.floor(resolution[1] / 2), 1);\n    }\n    uncompressedBytes += 1 * 1 * channels;\n    return uncompressedBytes;\n  }\n  /** Returns the preferred file extension for the given MIME type. */\n  static mimeTypeToExtension(mimeType) {\n    if (mimeType === 'image/jpeg') return 'jpg';\n    return mimeType.split('/').pop();\n  }\n  /** Returns the MIME type for the given file extension. */\n  static extensionToMimeType(extension) {\n    if (extension === 'jpg') return 'image/jpeg';\n    if (!extension) return '';\n    return `image/${extension}`;\n  }\n}\nImageUtils.impls = {\n  'image/jpeg': new JPEGImageUtils(),\n  'image/png': new PNGImageUtils()\n};\nfunction validateJPEGBuffer(view, i) {\n  // index should be within buffer limits\n  if (i > view.byteLength) {\n    throw new TypeError('Corrupt JPG, exceeded buffer limits');\n  }\n  // Every JPEG block must begin with a 0xFF\n  if (view.getUint8(i) !== 0xff) {\n    throw new TypeError('Invalid JPG, marker table corrupted');\n  }\n  return view;\n}\n\n/**\n * *Utility class for working with file systems and URI paths.*\n *\n * @category Utilities\n */\nclass FileUtils {\n  /**\n   * Extracts the basename from a file path, e.g. \"folder/model.glb\" -> \"model\".\n   * See: {@link HTTPUtils.basename}\n   */\n  static basename(uri) {\n    const fileName = uri.split(/[\\\\/]/).pop();\n    return fileName.substring(0, fileName.lastIndexOf('.'));\n  }\n  /**\n   * Extracts the extension from a file path, e.g. \"folder/model.glb\" -> \"glb\".\n   * See: {@link HTTPUtils.extension}\n   */\n  static extension(uri) {\n    if (uri.startsWith('data:image/')) {\n      const mimeType = uri.match(/data:(image\\/\\w+)/)[1];\n      return ImageUtils.mimeTypeToExtension(mimeType);\n    } else if (uri.startsWith('data:model/gltf+json')) {\n      return 'gltf';\n    } else if (uri.startsWith('data:model/gltf-binary')) {\n      return 'glb';\n    } else if (uri.startsWith('data:application/')) {\n      return 'bin';\n    }\n    return uri.split(/[\\\\/]/).pop().split(/[.]/).pop();\n  }\n}\n\n/**\n * Common utilities\n * @module glMatrix\n */\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(3);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\n(function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n})();\n\n/** @hidden Implemented in /core for use by /extensions, publicly exported from /functions. */\nfunction getBounds(node) {\n  const resultBounds = createBounds();\n  const parents = node.propertyType === PropertyType.NODE ? [node] : node.listChildren();\n  for (const parent of parents) {\n    parent.traverse(node => {\n      const mesh = node.getMesh();\n      if (!mesh) return;\n      // Compute mesh bounds and update result.\n      const meshBounds = getMeshBounds(mesh, node.getWorldMatrix());\n      if (meshBounds.min.every(isFinite) && meshBounds.max.every(isFinite)) {\n        expandBounds(meshBounds.min, resultBounds);\n        expandBounds(meshBounds.max, resultBounds);\n      }\n    });\n  }\n  return resultBounds;\n}\n/** Computes mesh bounds in world space. */\nfunction getMeshBounds(mesh, worldMatrix) {\n  const meshBounds = createBounds();\n  // We can't transform a local AABB into world space and still have a tight AABB in world space,\n  // so we need to compute the world AABB vertex by vertex here.\n  for (const prim of mesh.listPrimitives()) {\n    const position = prim.getAttribute('POSITION');\n    const indices = prim.getIndices();\n    if (!position) continue;\n    let localPos = [0, 0, 0];\n    let worldPos = [0, 0, 0];\n    for (let i = 0, il = indices ? indices.getCount() : position.getCount(); i < il; i++) {\n      const index = indices ? indices.getScalar(i) : i;\n      localPos = position.getElement(index, localPos);\n      worldPos = transformMat4(worldPos, localPos, worldMatrix);\n      expandBounds(worldPos, meshBounds);\n    }\n  }\n  return meshBounds;\n}\n/** Expands bounds of target by given source. */\nfunction expandBounds(point, target) {\n  for (let i = 0; i < 3; i++) {\n    target.min[i] = Math.min(point[i], target.min[i]);\n    target.max[i] = Math.max(point[i], target.max[i]);\n  }\n}\n/** Creates new bounds with min=Infinity, max=-Infinity. */\nfunction createBounds() {\n  return {\n    min: [Infinity, Infinity, Infinity],\n    max: [-Infinity, -Infinity, -Infinity]\n  };\n}\n\n// Need a placeholder domain to construct a URL from a relative path. We only\n// access `url.pathname`, so the domain doesn't matter.\nconst NULL_DOMAIN = 'https://null.example';\n/**\n * *Utility class for working with URLs.*\n *\n * @category Utilities\n */\nclass HTTPUtils {\n  static dirname(path) {\n    const index = path.lastIndexOf('/');\n    if (index === -1) return './';\n    return path.substring(0, index + 1);\n  }\n  /**\n   * Extracts the basename from a URL, e.g. \"folder/model.glb\" -> \"model\".\n   * See: {@link FileUtils.basename}\n   */\n  static basename(uri) {\n    return FileUtils.basename(new URL(uri, NULL_DOMAIN).pathname);\n  }\n  /**\n   * Extracts the extension from a URL, e.g. \"folder/model.glb\" -> \"glb\".\n   * See: {@link FileUtils.extension}\n   */\n  static extension(uri) {\n    return FileUtils.extension(new URL(uri, NULL_DOMAIN).pathname);\n  }\n  static resolve(base, path) {\n    if (!this.isRelativePath(path)) return path;\n    const stack = base.split('/');\n    const parts = path.split('/');\n    stack.pop();\n    for (let i = 0; i < parts.length; i++) {\n      if (parts[i] === '.') continue;\n      if (parts[i] === '..') {\n        stack.pop();\n      } else {\n        stack.push(parts[i]);\n      }\n    }\n    return stack.join('/');\n  }\n  /**\n   * Returns true for URLs containing a protocol, and false for both\n   * absolute and relative paths.\n   */\n  static isAbsoluteURL(path) {\n    return this.PROTOCOL_REGEXP.test(path);\n  }\n  /**\n   * Returns true for paths that are declared relative to some unknown base\n   * path. For example, \"foo/bar/\" is relative both \"/foo/bar/\" is not.\n   */\n  static isRelativePath(path) {\n    return !/^(?:[a-zA-Z]+:)?\\//.test(path);\n  }\n}\nHTTPUtils.DEFAULT_INIT = {};\nHTTPUtils.PROTOCOL_REGEXP = /^[a-zA-Z]+:\\/\\//;\n\n// Reference: https://github.com/jonschlinkert/is-plain-object\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\nfunction isPlainObject(o) {\n  if (isObject(o) === false) return false;\n  // If has modified constructor\n  const ctor = o.constructor;\n  if (ctor === undefined) return true;\n  // If has modified prototype\n  const prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n  // If constructor does not have an Object-specific method\n  if (Object.hasOwn(prot, 'isPrototypeOf') === false) {\n    return false;\n  }\n  // Most likely a plain Object\n  return true;\n}\n\nvar _Logger;\n/** Logger verbosity thresholds. */\nvar Verbosity;\n(function (Verbosity) {\n  /** No events are logged. */\n  Verbosity[Verbosity[\"SILENT\"] = 4] = \"SILENT\";\n  /** Only error events are logged. */\n  Verbosity[Verbosity[\"ERROR\"] = 3] = \"ERROR\";\n  /** Only error and warn events are logged. */\n  Verbosity[Verbosity[\"WARN\"] = 2] = \"WARN\";\n  /** Only error, warn, and info events are logged. (DEFAULT) */\n  Verbosity[Verbosity[\"INFO\"] = 1] = \"INFO\";\n  /** All events are logged. */\n  Verbosity[Verbosity[\"DEBUG\"] = 0] = \"DEBUG\";\n})(Verbosity || (Verbosity = {}));\n/**\n * *Logger utility class.*\n *\n * @category Utilities\n */\nclass Logger {\n  /** Constructs a new Logger instance. */\n  constructor(verbosity) {\n    this.verbosity = void 0;\n    this.verbosity = verbosity;\n  }\n  /** Logs an event at level {@link Logger.Verbosity.DEBUG}. */\n  debug(text) {\n    if (this.verbosity <= Logger.Verbosity.DEBUG) {\n      console.debug(text);\n    }\n  }\n  /** Logs an event at level {@link Logger.Verbosity.INFO}. */\n  info(text) {\n    if (this.verbosity <= Logger.Verbosity.INFO) {\n      console.info(text);\n    }\n  }\n  /** Logs an event at level {@link Logger.Verbosity.WARN}. */\n  warn(text) {\n    if (this.verbosity <= Logger.Verbosity.WARN) {\n      console.warn(text);\n    }\n  }\n  /** Logs an event at level {@link Logger.Verbosity.ERROR}. */\n  error(text) {\n    if (this.verbosity <= Logger.Verbosity.ERROR) {\n      console.error(text);\n    }\n  }\n}\n_Logger = Logger;\n/** Logger verbosity thresholds. */\nLogger.Verbosity = Verbosity;\n/** Default logger instance. */\nLogger.DEFAULT_INSTANCE = new _Logger(_Logger.Verbosity.INFO);\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/** @hidden */\nclass MathUtils {\n  static identity(v) {\n    return v;\n  }\n  static eq(a, b, tolerance = 10e-6) {\n    if (a.length !== b.length) return false;\n    for (let i = 0; i < a.length; i++) {\n      if (Math.abs(a[i] - b[i]) > tolerance) return false;\n    }\n    return true;\n  }\n  static clamp(value, min, max) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n  }\n  // TODO(perf): Compare performance if we replace the switch with individual functions.\n  static decodeNormalizedInt(i, componentType) {\n    // Hardcode enums from accessor.ts to avoid a circular dependency.\n    switch (componentType) {\n      case 5126:\n        // FLOAT\n        return i;\n      case 5123:\n        // UNSIGNED_SHORT\n        return i / 65535.0;\n      case 5121:\n        // UNSIGNED_BYTE\n        return i / 255.0;\n      case 5122:\n        // SHORT\n        return Math.max(i / 32767.0, -1.0);\n      case 5120:\n        // BYTE\n        return Math.max(i / 127.0, -1.0);\n      default:\n        throw new Error('Invalid component type.');\n    }\n  }\n  // TODO(perf): Compare performance if we replace the switch with individual functions.\n  static encodeNormalizedInt(f, componentType) {\n    // Hardcode enums from accessor.ts to avoid a circular dependency.\n    switch (componentType) {\n      case 5126:\n        // FLOAT\n        return f;\n      case 5123:\n        // UNSIGNED_SHORT\n        return Math.round(MathUtils.clamp(f, 0, 1) * 65535.0);\n      case 5121:\n        // UNSIGNED_BYTE\n        return Math.round(MathUtils.clamp(f, 0, 1) * 255.0);\n      case 5122:\n        // SHORT\n        return Math.round(MathUtils.clamp(f, -1, 1) * 32767.0);\n      case 5120:\n        // BYTE\n        return Math.round(MathUtils.clamp(f, -1, 1) * 127.0);\n      default:\n        throw new Error('Invalid component type.');\n    }\n  }\n  /**\n   * Decompose a mat4 to TRS properties.\n   *\n   * Equivalent to the Matrix4 decompose() method in three.js, and intentionally not using the\n   * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n   *\n   * @param srcMat Matrix element, to be decomposed to TRS properties.\n   * @param dstTranslation Translation element, to be overwritten.\n   * @param dstRotation Rotation element, to be overwritten.\n   * @param dstScale Scale element, to be overwritten.\n   */\n  static decompose(srcMat, dstTranslation, dstRotation, dstScale) {\n    let sx = length([srcMat[0], srcMat[1], srcMat[2]]);\n    const sy = length([srcMat[4], srcMat[5], srcMat[6]]);\n    const sz = length([srcMat[8], srcMat[9], srcMat[10]]);\n    // if determine is negative, we need to invert one scale\n    const det = determinant(srcMat);\n    if (det < 0) sx = -sx;\n    dstTranslation[0] = srcMat[12];\n    dstTranslation[1] = srcMat[13];\n    dstTranslation[2] = srcMat[14];\n    // scale the rotation part\n    const _m1 = srcMat.slice();\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n    _m1[0] *= invSX;\n    _m1[1] *= invSX;\n    _m1[2] *= invSX;\n    _m1[4] *= invSY;\n    _m1[5] *= invSY;\n    _m1[6] *= invSY;\n    _m1[8] *= invSZ;\n    _m1[9] *= invSZ;\n    _m1[10] *= invSZ;\n    getRotation(dstRotation, _m1);\n    dstScale[0] = sx;\n    dstScale[1] = sy;\n    dstScale[2] = sz;\n  }\n  /**\n   * Compose TRS properties to a mat4.\n   *\n   * Equivalent to the Matrix4 compose() method in three.js, and intentionally not using the\n   * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n   *\n   * @param srcTranslation Translation element of matrix.\n   * @param srcRotation Rotation element of matrix.\n   * @param srcScale Scale element of matrix.\n   * @param dstMat Matrix element, to be modified and returned.\n   * @returns dstMat, overwritten to mat4 equivalent of given TRS properties.\n   */\n  static compose(srcTranslation, srcRotation, srcScale, dstMat) {\n    const te = dstMat;\n    const x = srcRotation[0],\n      y = srcRotation[1],\n      z = srcRotation[2],\n      w = srcRotation[3];\n    const x2 = x + x,\n      y2 = y + y,\n      z2 = z + z;\n    const xx = x * x2,\n      xy = x * y2,\n      xz = x * z2;\n    const yy = y * y2,\n      yz = y * z2,\n      zz = z * z2;\n    const wx = w * x2,\n      wy = w * y2,\n      wz = w * z2;\n    const sx = srcScale[0],\n      sy = srcScale[1],\n      sz = srcScale[2];\n    te[0] = (1 - (yy + zz)) * sx;\n    te[1] = (xy + wz) * sx;\n    te[2] = (xz - wy) * sx;\n    te[3] = 0;\n    te[4] = (xy - wz) * sy;\n    te[5] = (1 - (xx + zz)) * sy;\n    te[6] = (yz + wx) * sy;\n    te[7] = 0;\n    te[8] = (xz + wy) * sz;\n    te[9] = (yz - wx) * sz;\n    te[10] = (1 - (xx + yy)) * sz;\n    te[11] = 0;\n    te[12] = srcTranslation[0];\n    te[13] = srcTranslation[1];\n    te[14] = srcTranslation[2];\n    te[15] = 1;\n    return te;\n  }\n}\n\nfunction equalsRef(refA, refB) {\n  if (!!refA !== !!refB) return false;\n  const a = refA.getChild();\n  const b = refB.getChild();\n  return a === b || a.equals(b);\n}\nfunction equalsRefSet(refSetA, refSetB) {\n  if (!!refSetA !== !!refSetB) return false;\n  const refValuesA = refSetA.values();\n  const refValuesB = refSetB.values();\n  if (refValuesA.length !== refValuesB.length) return false;\n  for (let i = 0; i < refValuesA.length; i++) {\n    const a = refValuesA[i];\n    const b = refValuesB[i];\n    if (a.getChild() === b.getChild()) continue;\n    if (!a.getChild().equals(b.getChild())) return false;\n  }\n  return true;\n}\nfunction equalsRefMap(refMapA, refMapB) {\n  if (!!refMapA !== !!refMapB) return false;\n  const keysA = refMapA.keys();\n  const keysB = refMapB.keys();\n  if (keysA.length !== keysB.length) return false;\n  for (const key of keysA) {\n    const refA = refMapA.get(key);\n    const refB = refMapB.get(key);\n    if (!!refA !== !!refB) return false;\n    const a = refA.getChild();\n    const b = refB.getChild();\n    if (a === b) continue;\n    if (!a.equals(b)) return false;\n  }\n  return true;\n}\nfunction equalsArray(a, b) {\n  if (a === b) return true;\n  if (!!a !== !!b || !a || !b) return false;\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\nfunction equalsObject(_a, _b) {\n  if (_a === _b) return true;\n  if (!!_a !== !!_b) return false;\n  if (!isPlainObject(_a) || !isPlainObject(_b)) {\n    return _a === _b;\n  }\n  const a = _a;\n  const b = _b;\n  let numKeysA = 0;\n  let numKeysB = 0;\n  let key;\n  for (key in a) numKeysA++;\n  for (key in b) numKeysB++;\n  if (numKeysA !== numKeysB) return false;\n  for (key in a) {\n    const valueA = a[key];\n    const valueB = b[key];\n    if (isArray(valueA) && isArray(valueB)) {\n      if (!equalsArray(valueA, valueB)) return false;\n    } else if (isPlainObject(valueA) && isPlainObject(valueB)) {\n      if (!equalsObject(valueA, valueB)) return false;\n    } else {\n      if (valueA !== valueB) return false;\n    }\n  }\n  return true;\n}\nfunction isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\n\nconst ALPHABET = '23456789abdegjkmnpqrvwxyzABDEGJKMNPQRVWXYZ';\nconst UNIQUE_RETRIES = 999;\nconst ID_LENGTH = 6;\nconst previousIDs = new Set();\nconst generateOne = function generateOne() {\n  let rtn = '';\n  for (let i = 0; i < ID_LENGTH; i++) {\n    rtn += ALPHABET.charAt(Math.floor(Math.random() * ALPHABET.length));\n  }\n  return rtn;\n};\n/**\n * Short ID generator.\n *\n * Generated IDs are short, easy to type, and unique for the duration of the program's execution.\n * Uniqueness across multiple program executions, or on other devices, is not guaranteed. Based on\n * [Short ID Generation in JavaScript](https://tomspencer.dev/blog/2014/11/16/short-id-generation-in-javascript/),\n * with alterations.\n *\n * @category Utilities\n * @hidden\n */\nconst uuid = function uuid() {\n  for (let retries = 0; retries < UNIQUE_RETRIES; retries++) {\n    const id = generateOne();\n    if (!previousIDs.has(id)) {\n      previousIDs.add(id);\n      return id;\n    }\n  }\n  return '';\n};\n\nconst COPY_IDENTITY = t => t;\nconst EMPTY_SET = new Set();\n/**\n * *Properties represent distinct resources in a glTF asset, referenced by other properties.*\n *\n * For example, each material and texture is a property, with material properties holding\n * references to the textures. All properties are created with factory methods on the\n * {@link Document} in which they should be constructed. Properties are destroyed by calling\n * {@link Property.dispose}().\n *\n * Usage:\n *\n * ```ts\n * const texture = doc.createTexture('myTexture');\n * doc.listTextures(); // → [texture x 1]\n *\n * // Attach a texture to a material.\n * material.setBaseColorTexture(texture);\n * material.getBaseColortexture(); // → texture\n *\n * // Detaching a texture removes any references to it, except from the doc.\n * texture.detach();\n * material.getBaseColorTexture(); // → null\n * doc.listTextures(); // → [texture x 1]\n *\n * // Disposing a texture removes all references to it, and its own references.\n * texture.dispose();\n * doc.listTextures(); // → []\n * ```\n *\n * Reference:\n * - [glTF → Concepts](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#concepts)\n *\n * @category Properties\n */\nclass Property extends GraphNode {\n  /** @hidden */\n  constructor(graph, name = '') {\n    super(graph);\n    this[$attributes]['name'] = name;\n    this.init();\n    this.dispatchEvent({\n      type: 'create'\n    });\n  }\n  /**\n   * Returns the Graph associated with this Property. For internal use.\n   * @hidden\n   * @experimental\n   */\n  getGraph() {\n    return this.graph;\n  }\n  /**\n   * Returns default attributes for the property. Empty lists and maps should be initialized\n   * to empty arrays and objects. Always invoke `super.getDefaults()` and extend the result.\n   */\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      name: '',\n      extras: {}\n    });\n  }\n  /** @hidden */\n  set(attribute, value) {\n    if (Array.isArray(value)) value = value.slice(); // copy vector, quat, color …\n    return super.set(attribute, value);\n  }\n  /**********************************************************************************************\n   * Name.\n   */\n  /**\n   * Returns the name of this property. While names are not required to be unique, this is\n   * encouraged, and non-unique names will be overwritten in some tools. For custom data about\n   * a property, prefer to use Extras.\n   */\n  getName() {\n    return this.get('name');\n  }\n  /**\n   * Sets the name of this property. While names are not required to be unique, this is\n   * encouraged, and non-unique names will be overwritten in some tools. For custom data about\n   * a property, prefer to use Extras.\n   */\n  setName(name) {\n    return this.set('name', name);\n  }\n  /**********************************************************************************************\n   * Extras.\n   */\n  /**\n   * Returns a reference to the Extras object, containing application-specific data for this\n   * Property. Extras should be an Object, not a primitive value, for best portability.\n   */\n  getExtras() {\n    return this.get('extras');\n  }\n  /**\n   * Updates the Extras object, containing application-specific data for this Property. Extras\n   * should be an Object, not a primitive value, for best portability.\n   */\n  setExtras(extras) {\n    return this.set('extras', extras);\n  }\n  /**********************************************************************************************\n   * Graph state.\n   */\n  /**\n   * Makes a copy of this property, with the same resources (by reference) as the original.\n   */\n  clone() {\n    const PropertyClass = this.constructor;\n    return new PropertyClass(this.graph).copy(this, COPY_IDENTITY);\n  }\n  /**\n   * Copies all data from another property to this one. Child properties are copied by reference,\n   * unless a 'resolve' function is given to override that.\n   * @param other Property to copy references from.\n   * @param resolve Function to resolve each Property being transferred. Default is identity.\n   */\n  copy(other, resolve = COPY_IDENTITY) {\n    // Remove previous references.\n    for (const key in this[$attributes]) {\n      const value = this[$attributes][key];\n      if (value instanceof GraphEdge) {\n        if (!this[$immutableKeys].has(key)) {\n          value.dispose();\n        }\n      } else if (value instanceof RefList || value instanceof RefSet) {\n        for (const ref of value.values()) {\n          ref.dispose();\n        }\n      } else if (value instanceof RefMap) {\n        for (const ref of value.values()) {\n          ref.dispose();\n        }\n      }\n    }\n    // Add new references.\n    for (const key in other[$attributes]) {\n      const thisValue = this[$attributes][key];\n      const otherValue = other[$attributes][key];\n      if (otherValue instanceof GraphEdge) {\n        if (this[$immutableKeys].has(key)) {\n          const ref = thisValue;\n          ref.getChild().copy(resolve(otherValue.getChild()), resolve);\n        } else {\n          // biome-ignore lint/suspicious/noExplicitAny: TODO\n          this.setRef(key, resolve(otherValue.getChild()), otherValue.getAttributes());\n        }\n      } else if (otherValue instanceof RefSet || otherValue instanceof RefList) {\n        for (const ref of otherValue.values()) {\n          // biome-ignore lint/suspicious/noExplicitAny: TODO\n          this.addRef(key, resolve(ref.getChild()), ref.getAttributes());\n        }\n      } else if (otherValue instanceof RefMap) {\n        for (const subkey of otherValue.keys()) {\n          const ref = otherValue.get(subkey);\n          // biome-ignore lint/suspicious/noExplicitAny: TODO\n          this.setRefMap(key, subkey, resolve(ref.getChild()), ref.getAttributes());\n        }\n      } else if (isPlainObject(otherValue)) {\n        this[$attributes][key] = JSON.parse(JSON.stringify(otherValue));\n      } else if (Array.isArray(otherValue) || otherValue instanceof ArrayBuffer || ArrayBuffer.isView(otherValue)) {\n        // biome-ignore lint/suspicious/noExplicitAny: TODO\n        this[$attributes][key] = otherValue.slice();\n      } else {\n        this[$attributes][key] = otherValue;\n      }\n    }\n    return this;\n  }\n  /**\n   * Returns true if two properties are deeply equivalent, recursively comparing the attributes\n   * of the properties. Optionally, a 'skip' set may be included, specifying attributes whose\n   * values should not be considered in the comparison.\n   *\n   * Example: Two {@link Primitive Primitives} are equivalent if they have accessors and\n   * materials with equivalent content — but not necessarily the same specific accessors\n   * and materials.\n   */\n  equals(other, skip = EMPTY_SET) {\n    if (this === other) return true;\n    if (this.propertyType !== other.propertyType) return false;\n    for (const key in this[$attributes]) {\n      if (skip.has(key)) continue;\n      const a = this[$attributes][key];\n      const b = other[$attributes][key];\n      if (a instanceof GraphEdge || b instanceof GraphEdge) {\n        if (!equalsRef(a, b)) {\n          return false;\n        }\n      } else if (a instanceof RefSet || b instanceof RefSet || a instanceof RefList || b instanceof RefList) {\n        if (!equalsRefSet(a, b)) {\n          return false;\n        }\n      } else if (a instanceof RefMap || b instanceof RefMap) {\n        if (!equalsRefMap(a, b)) {\n          return false;\n        }\n      } else if (isPlainObject(a) || isPlainObject(b)) {\n        if (!equalsObject(a, b)) return false;\n      } else if (isArray(a) || isArray(b)) {\n        if (!equalsArray(a, b)) return false;\n      } else {\n        // Literal.\n        if (a !== b) return false;\n      }\n    }\n    return true;\n  }\n  detach() {\n    // Detaching should keep properties in the same Document, and attached to its root.\n    this.graph.disconnectParents(this, n => n.propertyType !== 'Root');\n    return this;\n  }\n  /**\n   * Returns a list of all properties that hold a reference to this property. For example, a\n   * material may hold references to various textures, but a texture does not hold references\n   * to the materials that use it.\n   *\n   * It is often necessary to filter the results for a particular type: some resources, like\n   * {@link Accessor}s, may be referenced by different types of properties. Most properties\n   * include the {@link Root} as a parent, which is usually not of interest.\n   *\n   * Usage:\n   *\n   * ```ts\n   * const materials = texture\n   * \t.listParents()\n   * \t.filter((p) => p instanceof Material)\n   * ```\n   */\n  listParents() {\n    return this.graph.listParents(this);\n  }\n}\n\n/**\n * *A {@link Property} that can have {@link ExtensionProperty} instances attached.*\n *\n * Most properties are extensible. See the {@link Extension} documentation for information about\n * how to use extensions.\n *\n * @category Properties\n */\nclass ExtensibleProperty extends Property {\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      extensions: new RefMap()\n    });\n  }\n  /** Returns an {@link ExtensionProperty} attached to this Property, if any. */\n  getExtension(name) {\n    return this.getRefMap('extensions', name);\n  }\n  /**\n   * Attaches the given {@link ExtensionProperty} to this Property. For a given extension, only\n   * one ExtensionProperty may be attached to any one Property at a time.\n   */\n  setExtension(name, extensionProperty) {\n    if (extensionProperty) extensionProperty._validateParent(this);\n    return this.setRefMap('extensions', name, extensionProperty);\n  }\n  /** Lists all {@link ExtensionProperty} instances attached to this Property. */\n  listExtensions() {\n    return this.listRefMapValues('extensions');\n  }\n}\n\n/**\n * *Accessors store lists of numeric, vector, or matrix elements in a typed array.*\n *\n * All large data for {@link Mesh}, {@link Skin}, and {@link Animation} properties is stored in\n * {@link Accessor}s, organized into one or more {@link Buffer}s. Each accessor provides data in\n * typed arrays, with two abstractions:\n *\n * *Elements* are the logical divisions of the data into useful types: `\"SCALAR\"`, `\"VEC2\"`,\n * `\"VEC3\"`, `\"VEC4\"`, `\"MAT3\"`, or `\"MAT4\"`. The element type can be determined with the\n * {@link Accessor.getType getType}() method, and the number of elements in the accessor determine its\n * {@link Accessor.getCount getCount}(). The number of components in an element — e.g. 9 for `\"MAT3\"` — are its\n * {@link Accessor.getElementSize getElementSize}(). See {@link Accessor.Type}.\n *\n * *Components* are the numeric values within an element — e.g. `.x` and `.y` for `\"VEC2\"`. Various\n * component types are available: `BYTE`, `UNSIGNED_BYTE`, `SHORT`, `UNSIGNED_SHORT`,\n * `UNSIGNED_INT`, and `FLOAT`. The component type can be determined with the\n * {@link Accessor.getComponentType getComponentType} method, and the number of bytes in each component determine its\n * {@link Accessor.getComponentSize getComponentSize}. See {@link Accessor.ComponentType}.\n *\n * Usage:\n *\n * ```typescript\n * const accessor = doc.createAccessor('myData')\n * \t.setArray(new Float32Array([1,2,3,4,5,6,7,8,9,10,11,12]))\n * \t.setType(Accessor.Type.VEC3)\n * \t.setBuffer(doc.getRoot().listBuffers()[0]);\n *\n * accessor.getCount();        // → 4\n * accessor.getElementSize();  // → 3\n * accessor.getByteLength();   // → 48\n * accessor.getElement(1, []); // → [4, 5, 6]\n *\n * accessor.setElement(0, [10, 20, 30]);\n * ```\n *\n * Data access through the {@link Accessor.getElement getElement} and {@link Accessor.setElement setElement}\n * methods reads or overwrites the content of the underlying typed array. These methods use\n * element arrays intended to be compatible with the [gl-matrix](https://github.com/toji/gl-matrix)\n * library, or with the `toArray`/`fromArray` methods of libraries like three.js and babylon.js.\n *\n * Each Accessor must be assigned to a {@link Buffer}, which determines where the accessor's data\n * is stored in the final file. Assigning Accessors to different Buffers allows the data to be\n * written to different `.bin` files.\n *\n * glTF Transform does not expose many details of sparse, normalized, or interleaved accessors\n * through its API. It reads files using those techniques, presents a simplified view of the data\n * for editing, and attempts to write data back out with optimizations. For example, vertex\n * attributes will typically be interleaved by default, regardless of the input file.\n *\n * References:\n * - [glTF → Accessors](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#accessors)\n *\n * @category Properties\n */\nclass Accessor extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.ACCESSOR;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      array: null,\n      type: Accessor.Type.SCALAR,\n      componentType: Accessor.ComponentType.FLOAT,\n      normalized: false,\n      sparse: false,\n      buffer: null\n    });\n  }\n  /**********************************************************************************************\n   * Static.\n   */\n  /** Returns size of a given element type, in components. */\n  static getElementSize(type) {\n    switch (type) {\n      case Accessor.Type.SCALAR:\n        return 1;\n      case Accessor.Type.VEC2:\n        return 2;\n      case Accessor.Type.VEC3:\n        return 3;\n      case Accessor.Type.VEC4:\n        return 4;\n      case Accessor.Type.MAT2:\n        return 4;\n      case Accessor.Type.MAT3:\n        return 9;\n      case Accessor.Type.MAT4:\n        return 16;\n      default:\n        throw new Error('Unexpected type: ' + type);\n    }\n  }\n  /** Returns size of a given component type, in bytes. */\n  static getComponentSize(componentType) {\n    switch (componentType) {\n      case Accessor.ComponentType.BYTE:\n        return 1;\n      case Accessor.ComponentType.UNSIGNED_BYTE:\n        return 1;\n      case Accessor.ComponentType.SHORT:\n        return 2;\n      case Accessor.ComponentType.UNSIGNED_SHORT:\n        return 2;\n      case Accessor.ComponentType.UNSIGNED_INT:\n        return 4;\n      case Accessor.ComponentType.FLOAT:\n        return 4;\n      default:\n        throw new Error('Unexpected component type: ' + componentType);\n    }\n  }\n  /**********************************************************************************************\n   * Min/max bounds.\n   */\n  /**\n   * Minimum value of each component in this attribute. Unlike in a final glTF file, values\n   * returned by this method will reflect the minimum accounting for {@link .normalized}\n   * state.\n   */\n  getMinNormalized(target) {\n    const normalized = this.getNormalized();\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    this.getMin(target);\n    if (normalized) {\n      for (let j = 0; j < elementSize; j++) {\n        target[j] = MathUtils.decodeNormalizedInt(target[j], componentType);\n      }\n    }\n    return target;\n  }\n  /**\n   * Minimum value of each component in this attribute. Values returned by this method do not\n   * reflect normalization: use {@link .getMinNormalized} in that case.\n   */\n  getMin(target) {\n    const array = this.getArray();\n    const count = this.getCount();\n    const elementSize = this.getElementSize();\n    for (let j = 0; j < elementSize; j++) target[j] = Infinity;\n    for (let i = 0; i < count * elementSize; i += elementSize) {\n      for (let j = 0; j < elementSize; j++) {\n        const value = array[i + j];\n        if (Number.isFinite(value)) {\n          target[j] = Math.min(target[j], value);\n        }\n      }\n    }\n    return target;\n  }\n  /**\n   * Maximum value of each component in this attribute. Unlike in a final glTF file, values\n   * returned by this method will reflect the minimum accounting for {@link .normalized}\n   * state.\n   */\n  getMaxNormalized(target) {\n    const normalized = this.getNormalized();\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    this.getMax(target);\n    if (normalized) {\n      for (let j = 0; j < elementSize; j++) {\n        target[j] = MathUtils.decodeNormalizedInt(target[j], componentType);\n      }\n    }\n    return target;\n  }\n  /**\n   * Maximum value of each component in this attribute. Values returned by this method do not\n   * reflect normalization: use {@link .getMinNormalized} in that case.\n   */\n  getMax(target) {\n    const array = this.get('array');\n    const count = this.getCount();\n    const elementSize = this.getElementSize();\n    for (let j = 0; j < elementSize; j++) target[j] = -Infinity;\n    for (let i = 0; i < count * elementSize; i += elementSize) {\n      for (let j = 0; j < elementSize; j++) {\n        const value = array[i + j];\n        if (Number.isFinite(value)) {\n          target[j] = Math.max(target[j], value);\n        }\n      }\n    }\n    return target;\n  }\n  /**********************************************************************************************\n   * Layout.\n   */\n  /**\n   * Number of elements in the accessor. An array of length 30, containing 10 `VEC3` elements,\n   * will have a count of 10.\n   */\n  getCount() {\n    const array = this.get('array');\n    return array ? array.length / this.getElementSize() : 0;\n  }\n  /** Type of element stored in the accessor. `VEC2`, `VEC3`, etc. */\n  getType() {\n    return this.get('type');\n  }\n  /**\n   * Sets type of element stored in the accessor. `VEC2`, `VEC3`, etc. Array length must be a\n   * multiple of the component size (`VEC2` = 2, `VEC3` = 3, ...) for the selected type.\n   */\n  setType(type) {\n    return this.set('type', type);\n  }\n  /**\n   * Number of components in each element of the accessor. For example, the element size of a\n   * `VEC2` accessor is 2. This value is determined automatically based on array length and\n   * accessor type, specified with {@link Accessor.setType setType()}.\n   */\n  // biome-ignore lint/suspicious/useAdjacentOverloadSignatures: Static vs. non-static.\n  getElementSize() {\n    return Accessor.getElementSize(this.get('type'));\n  }\n  /**\n   * Size of each component (a value in the raw array), in bytes. For example, the\n   * `componentSize` of data backed by a `float32` array is 4 bytes.\n   */\n  getComponentSize() {\n    return this.get('array').BYTES_PER_ELEMENT;\n  }\n  /**\n   * Component type (float32, uint16, etc.). This value is determined automatically, and can only\n   * be modified by replacing the underlying array.\n   */\n  getComponentType() {\n    return this.get('componentType');\n  }\n  /**********************************************************************************************\n   * Normalization.\n   */\n  /**\n   * Specifies whether integer data values should be normalized (true) to [0, 1] (for unsigned\n   * types) or [-1, 1] (for signed types), or converted directly (false) when they are accessed.\n   * This property is defined only for accessors that contain vertex attributes or animation\n   * output data.\n   */\n  getNormalized() {\n    return this.get('normalized');\n  }\n  /**\n   * Specifies whether integer data values should be normalized (true) to [0, 1] (for unsigned\n   * types) or [-1, 1] (for signed types), or converted directly (false) when they are accessed.\n   * This property is defined only for accessors that contain vertex attributes or animation\n   * output data.\n   */\n  setNormalized(normalized) {\n    return this.set('normalized', normalized);\n  }\n  /**********************************************************************************************\n   * Data access.\n   */\n  /**\n   * Returns the scalar element value at the given index. For\n   * {@link Accessor.getNormalized normalized} integer accessors, values are\n   * decoded and returned in floating-point form.\n   */\n  getScalar(index) {\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    const array = this.getArray();\n    if (this.getNormalized()) {\n      return MathUtils.decodeNormalizedInt(array[index * elementSize], componentType);\n    }\n    return array[index * elementSize];\n  }\n  /**\n   * Assigns the scalar element value at the given index. For\n   * {@link Accessor.getNormalized normalized} integer accessors, \"value\" should be\n   * given in floating-point form — it will be integer-encoded before writing\n   * to the underlying array.\n   */\n  setScalar(index, x) {\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    const array = this.getArray();\n    if (this.getNormalized()) {\n      array[index * elementSize] = MathUtils.encodeNormalizedInt(x, componentType);\n    } else {\n      array[index * elementSize] = x;\n    }\n    return this;\n  }\n  /**\n   * Returns the vector or matrix element value at the given index. For\n   * {@link Accessor.getNormalized normalized} integer accessors, values are\n   * decoded and returned in floating-point form.\n   *\n   * Example:\n   *\n   * ```javascript\n   * import { add } from 'gl-matrix/add';\n   *\n   * const element = [];\n   * const offset = [1, 1, 1];\n   *\n   * for (let i = 0; i < accessor.getCount(); i++) {\n   * \taccessor.getElement(i, element);\n   * \tadd(element, element, offset);\n   * \taccessor.setElement(i, element);\n   * }\n   * ```\n   */\n  getElement(index, target) {\n    const normalized = this.getNormalized();\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    const array = this.getArray();\n    for (let i = 0; i < elementSize; i++) {\n      if (normalized) {\n        target[i] = MathUtils.decodeNormalizedInt(array[index * elementSize + i], componentType);\n      } else {\n        target[i] = array[index * elementSize + i];\n      }\n    }\n    return target;\n  }\n  /**\n   * Assigns the vector or matrix element value at the given index. For\n   * {@link Accessor.getNormalized normalized} integer accessors, \"value\" should be\n   * given in floating-point form — it will be integer-encoded before writing\n   * to the underlying array.\n   *\n   * Example:\n   *\n   * ```javascript\n   * import { add } from 'gl-matrix/add';\n   *\n   * const element = [];\n   * const offset = [1, 1, 1];\n   *\n   * for (let i = 0; i < accessor.getCount(); i++) {\n   * \taccessor.getElement(i, element);\n   * \tadd(element, element, offset);\n   * \taccessor.setElement(i, element);\n   * }\n   * ```\n   */\n  setElement(index, value) {\n    const normalized = this.getNormalized();\n    const elementSize = this.getElementSize();\n    const componentType = this.getComponentType();\n    const array = this.getArray();\n    for (let i = 0; i < elementSize; i++) {\n      if (normalized) {\n        array[index * elementSize + i] = MathUtils.encodeNormalizedInt(value[i], componentType);\n      } else {\n        array[index * elementSize + i] = value[i];\n      }\n    }\n    return this;\n  }\n  /**********************************************************************************************\n   * Raw data storage.\n   */\n  /**\n   * Specifies whether the accessor should be stored sparsely. When written to a glTF file, sparse\n   * accessors store only values that differ from base values. When loaded in glTF Transform (or most\n   * runtimes) a sparse accessor can be treated like any other accessor. Currently, glTF Transform always\n   * uses zeroes for the base values when writing files.\n   * @experimental\n   */\n  getSparse() {\n    return this.get('sparse');\n  }\n  /**\n   * Specifies whether the accessor should be stored sparsely. When written to a glTF file, sparse\n   * accessors store only values that differ from base values. When loaded in glTF Transform (or most\n   * runtimes) a sparse accessor can be treated like any other accessor. Currently, glTF Transform always\n   * uses zeroes for the base values when writing files.\n   * @experimental\n   */\n  setSparse(sparse) {\n    return this.set('sparse', sparse);\n  }\n  /** Returns the {@link Buffer} into which this accessor will be organized. */\n  getBuffer() {\n    return this.getRef('buffer');\n  }\n  /** Assigns the {@link Buffer} into which this accessor will be organized. */\n  setBuffer(buffer) {\n    return this.setRef('buffer', buffer);\n  }\n  /** Returns the raw typed array underlying this accessor. */\n  getArray() {\n    return this.get('array');\n  }\n  /** Assigns the raw typed array underlying this accessor. */\n  setArray(array) {\n    this.set('componentType', array ? arrayToComponentType(array) : Accessor.ComponentType.FLOAT);\n    this.set('array', array);\n    return this;\n  }\n  /** Returns the total bytelength of this accessor, exclusive of padding. */\n  getByteLength() {\n    const array = this.get('array');\n    return array ? array.byteLength : 0;\n  }\n}\n/**************************************************************************************************\n * Accessor utilities.\n */\n/** @internal */\n/**********************************************************************************************\n * Constants.\n */\n/** Element type contained by the accessor (SCALAR, VEC2, ...). */\nAccessor.Type = {\n  /** Scalar, having 1 value per element. */\n  SCALAR: 'SCALAR',\n  /** 2-component vector, having 2 components per element. */\n  VEC2: 'VEC2',\n  /** 3-component vector, having 3 components per element. */\n  VEC3: 'VEC3',\n  /** 4-component vector, having 4 components per element. */\n  VEC4: 'VEC4',\n  /** 2x2 matrix, having 4 components per element. */\n  MAT2: 'MAT2',\n  /** 3x3 matrix, having 9 components per element. */\n  MAT3: 'MAT3',\n  /** 4x3 matrix, having 16 components per element. */\n  MAT4: 'MAT4'\n};\n/** Data type of the values composing each element in the accessor. */\nAccessor.ComponentType = {\n  /**\n   * 1-byte signed integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array Int8Array}.\n   */\n  BYTE: 5120,\n  /**\n   * 1-byte unsigned integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array Uint8Array}.\n   */\n  UNSIGNED_BYTE: 5121,\n  /**\n   * 2-byte signed integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array Int16Array}.\n   */\n  SHORT: 5122,\n  /**\n   * 2-byte unsigned integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array Uint16Array}.\n   */\n  UNSIGNED_SHORT: 5123,\n  /**\n   * 4-byte unsigned integer, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array Uint32Array}.\n   */\n  UNSIGNED_INT: 5125,\n  /**\n   * 4-byte floating point number, stored as\n   * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array Float32Array}.\n   */\n  FLOAT: 5126\n};\nfunction arrayToComponentType(array) {\n  switch (array.constructor) {\n    case Float32Array:\n      return Accessor.ComponentType.FLOAT;\n    case Uint32Array:\n      return Accessor.ComponentType.UNSIGNED_INT;\n    case Uint16Array:\n      return Accessor.ComponentType.UNSIGNED_SHORT;\n    case Uint8Array:\n      return Accessor.ComponentType.UNSIGNED_BYTE;\n    case Int16Array:\n      return Accessor.ComponentType.SHORT;\n    case Int8Array:\n      return Accessor.ComponentType.BYTE;\n    default:\n      throw new Error('Unknown accessor componentType.');\n  }\n}\n\n/**\n * *Reusable collections of {@link AnimationChannel}s, together representing a discrete animation\n * clip.*\n *\n * One Animation represents one playable unit in an animation system. Each may contain channels\n * affecting multiple paths (`translation`, `rotation`, `scale`, or `weights`) on multiple\n * {@link Node}s. An Animation's channels must be played together, and do not have any meaning in\n * isolation.\n *\n * Multiple Animations _may_ be played together: for example, one character's _Walk_ animation\n * might play while another character's _Run_ animation plays. Or a single character might have\n * both an _Idle_ and a _Talk_ animation playing at the same time. However, glTF does not define\n * any particular relationship between top-level Animations, or any particular playback behavior\n * like looping or sequences of Animations. General-purpose viewers typically autoplay the first\n * animation and provide UI controls for choosing another. Game engines may have significantly\n * more advanced methods of playing and blending animations.\n *\n * For example, a very simple skinned {@link Mesh} might have two Animations, _Idle_ and _Walk_.\n * Each of those Animations might affect the rotations of two bones, _LegL_ and _LegR_, where the\n * keyframes for each target-path pair are stored in {@link AnimationChannel} instances. In  total,\n * this model would contain two Animations and Four {@link AnimationChannel}s.\n *\n * Usage:\n *\n * ```ts\n * const animation = doc.createAnimation('machineRun')\n * \t.addChannel(rotateCog1)\n * \t.addChannel(rotateCog2)\n * \t.addChannel(rotateCog3);\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#animations)\n *\n * @category Properties\n */\nclass Animation extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.ANIMATION;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      channels: new RefSet(),\n      samplers: new RefSet()\n    });\n  }\n  /** Adds an {@link AnimationChannel} to this Animation. */\n  addChannel(channel) {\n    return this.addRef('channels', channel);\n  }\n  /** Removes an {@link AnimationChannel} from this Animation. */\n  removeChannel(channel) {\n    return this.removeRef('channels', channel);\n  }\n  /** Lists {@link AnimationChannel}s in this Animation. */\n  listChannels() {\n    return this.listRefs('channels');\n  }\n  /** Adds an {@link AnimationSampler} to this Animation. */\n  addSampler(sampler) {\n    return this.addRef('samplers', sampler);\n  }\n  /** Removes an {@link AnimationSampler} from this Animation. */\n  removeSampler(sampler) {\n    return this.removeRef('samplers', sampler);\n  }\n  /** Lists {@link AnimationSampler}s in this Animation. */\n  listSamplers() {\n    return this.listRefs('samplers');\n  }\n}\n\n/**\n * *A target-path pair within a larger {@link Animation}, which refers to an\n * {@link AnimationSampler} storing the keyframe data for that pair.*\n *\n * A _target_ is always a {@link Node}, in the core glTF spec. A _path_ is any property of that\n * Node that can be affected by animation: `translation`, `rotation`, `scale`, or `weights`. An\n * {@link Animation} affecting the positions and rotations of several {@link Node}s would contain\n * one channel for each Node-position or Node-rotation pair. The keyframe data for an\n * AnimationChannel is stored in an {@link AnimationSampler}, which must be attached to the same\n * {@link Animation}.\n *\n * Usage:\n *\n * ```ts\n * const node = doc.getRoot()\n * \t.listNodes()\n * \t.find((node) => node.getName() === 'Cog');\n *\n * const channel = doc.createAnimationChannel('cogRotation')\n * \t.setTargetPath('rotation')\n * \t.setTargetNode(node)\n * \t.setSampler(rotateSampler);\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#animations)\n *\n * @category Properties\n */\nclass AnimationChannel extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.ANIMATION_CHANNEL;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      targetPath: null,\n      targetNode: null,\n      sampler: null\n    });\n  }\n  /**********************************************************************************************\n   * Properties.\n   */\n  /**\n   * Path (property) animated on the target {@link Node}. Supported values include:\n   * `translation`, `rotation`, `scale`, or `weights`.\n   */\n  getTargetPath() {\n    return this.get('targetPath');\n  }\n  /**\n   * Path (property) animated on the target {@link Node}. Supported values include:\n   * `translation`, `rotation`, `scale`, or `weights`.\n   */\n  setTargetPath(targetPath) {\n    return this.set('targetPath', targetPath);\n  }\n  /** Target {@link Node} animated by the channel. */\n  getTargetNode() {\n    return this.getRef('targetNode');\n  }\n  /** Target {@link Node} animated by the channel. */\n  setTargetNode(targetNode) {\n    return this.setRef('targetNode', targetNode);\n  }\n  /**\n   * Keyframe data input/output values for the channel. Must be attached to the same\n   * {@link Animation}.\n   */\n  getSampler() {\n    return this.getRef('sampler');\n  }\n  /**\n   * Keyframe data input/output values for the channel. Must be attached to the same\n   * {@link Animation}.\n   */\n  setSampler(sampler) {\n    return this.setRef('sampler', sampler);\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\n/** Name of the property to be modified by an animation channel. */\nAnimationChannel.TargetPath = {\n  /** Channel targets {@link Node.setTranslation}. */\n  TRANSLATION: 'translation',\n  /** Channel targets {@link Node.setRotation}. */\n  ROTATION: 'rotation',\n  /** Channel targets {@link Node.setScale}. */\n  SCALE: 'scale',\n  /** Channel targets {@link Node.setWeights}, affecting {@link PrimitiveTarget} weights. */\n  WEIGHTS: 'weights'\n};\n\n/**\n * *Reusable collection of keyframes affecting particular property of an object.*\n *\n * Each AnimationSampler refers to an input and an output {@link Accessor}. Input contains times\n * (in seconds) for each keyframe. Output contains values (of any {@link Accessor.Type}) for the\n * animated property at each keyframe. Samplers using `CUBICSPLINE` interpolation will also contain\n * in/out tangents in the output, with the layout:\n *\n * in<sub>1</sub>, value<sub>1</sub>, out<sub>1</sub>,\n * in<sub>2</sub>, value<sub>2</sub>, out<sub>2</sub>,\n * in<sub>3</sub>, value<sub>3</sub>, out<sub>3</sub>, ...\n *\n * Usage:\n *\n * ```ts\n * // Create accessor containing input times, in seconds.\n * const input = doc.createAccessor('bounceTimes')\n * \t.setArray(new Float32Array([0, 1, 2]))\n * \t.setType(Accessor.Type.SCALAR);\n *\n * // Create accessor containing output values, in local units.\n * const output = doc.createAccessor('bounceValues')\n * \t.setArray(new Float32Array([\n * \t\t0, 0, 0, // y = 0\n * \t\t0, 1, 0, // y = 1\n * \t\t0, 0, 0, // y = 0\n * \t]))\n * \t.setType(Accessor.Type.VEC3);\n *\n * // Create sampler.\n * const sampler = doc.createAnimationSampler('bounce')\n * \t.setInput(input)\n * \t.setOutput(output)\n * \t.setInterpolation('LINEAR');\n * ```\n *\n * Reference\n * - [glTF → Animations](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#animations)\n *\n * @category Properties\n */\nclass AnimationSampler extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.ANIMATION_SAMPLER;\n  }\n  getDefaultAttributes() {\n    return Object.assign(super.getDefaults(), {\n      interpolation: AnimationSampler.Interpolation.LINEAR,\n      input: null,\n      output: null\n    });\n  }\n  /**********************************************************************************************\n   * Static.\n   */\n  /** Interpolation mode: `STEP`, `LINEAR`, or `CUBICSPLINE`. */\n  getInterpolation() {\n    return this.get('interpolation');\n  }\n  /** Interpolation mode: `STEP`, `LINEAR`, or `CUBICSPLINE`. */\n  setInterpolation(interpolation) {\n    return this.set('interpolation', interpolation);\n  }\n  /** Times for each keyframe, in seconds. */\n  getInput() {\n    return this.getRef('input');\n  }\n  /** Times for each keyframe, in seconds. */\n  setInput(input) {\n    return this.setRef('input', input, {\n      usage: BufferViewUsage$1.OTHER\n    });\n  }\n  /**\n   * Values for each keyframe. For `CUBICSPLINE` interpolation, output also contains in/out\n   * tangents.\n   */\n  getOutput() {\n    return this.getRef('output');\n  }\n  /**\n   * Values for each keyframe. For `CUBICSPLINE` interpolation, output also contains in/out\n   * tangents.\n   */\n  setOutput(output) {\n    return this.setRef('output', output, {\n      usage: BufferViewUsage$1.OTHER\n    });\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\n/** Interpolation method. */\nAnimationSampler.Interpolation = {\n  /** Animated values are linearly interpolated between keyframes. */\n  LINEAR: 'LINEAR',\n  /** Animated values remain constant from one keyframe until the next keyframe. */\n  STEP: 'STEP',\n  /** Animated values are interpolated according to given cubic spline tangents. */\n  CUBICSPLINE: 'CUBICSPLINE'\n};\n\n/**\n * *Buffers are low-level storage units for binary data.*\n *\n * glTF 2.0 has three concepts relevant to binary storage: accessors, buffer views, and buffers.\n * In glTF Transform, an {@link Accessor} is referenced by any property that requires numeric typed\n * array data. Meshes, Primitives, and Animations all reference Accessors. Buffers define how that\n * data is organized into transmitted file(s). A `.glb` file has only a single Buffer, and when\n * exporting to `.glb` your resources should be grouped accordingly. A `.gltf` file may reference\n * one or more `.bin` files — each `.bin` is a Buffer — and grouping Accessors under different\n * Buffers allow you to specify that structure.\n *\n * For engines that can dynamically load portions of a glTF file, splitting data into separate\n * buffers can allow you to avoid loading data until it is needed. For example, you might put\n * binary data for specific meshes into a different `.bin` buffer, or put each animation's binary\n * payload into its own `.bin`.\n *\n * Buffer Views define how Accessors are organized within a given Buffer. glTF Transform creates an\n * efficient Buffer View layout automatically at export: there is no Buffer View property exposed\n * by the glTF Transform API, simplifying data management.\n *\n * Usage:\n *\n * ```ts\n * // Create two buffers with custom filenames.\n * const buffer1 = doc.createBuffer('buffer1')\n * \t.setURI('part1.bin');\n * const buffer2 = doc.createBuffer('buffer2')\n * \t.setURI('part2.bin');\n *\n * // Assign the attributes of two meshes to different buffers. If the meshes\n * // had indices or morph target attributes, you would also want to relocate\n * // those accessors.\n * mesh1\n * \t.listPrimitives()\n * \t.forEach((primitive) => primitive.listAttributes()\n * \t\t.forEach((attribute) => attribute.setBuffer(buffer1)));\n * mesh2\n * \t.listPrimitives()\n * \t.forEach((primitive) => primitive.listAttributes()\n * \t\t.forEach((attribute) => attribute.setBuffer(buffer2)));\n *\n * // Write to disk. Each mesh's binary data will be in a separate binary file;\n * // any remaining accessors will be in a third (default) buffer.\n * await new NodeIO().write('scene.gltf', doc);\n * // → scene.gltf, part1.bin, part2.bin\n * ```\n *\n * References:\n * - [glTF → Buffers and Buffer Views](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#buffers-and-buffer-views)\n * - [glTF → Accessors](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#accessors)\n *\n * @category Properties\n */\nclass Buffer$1 extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.BUFFER;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      uri: ''\n    });\n  }\n  /**\n   * Returns the URI (or filename) of this buffer (e.g. 'myBuffer.bin'). URIs are strongly\n   * encouraged to be relative paths, rather than absolute. Use of a protocol (like `file://`)\n   * is possible for custom applications, but will limit the compatibility of the asset with most\n   * tools.\n   *\n   * Buffers commonly use the extension `.bin`, though this is not required.\n   */\n  getURI() {\n    return this.get('uri');\n  }\n  /**\n   * Sets the URI (or filename) of this buffer (e.g. 'myBuffer.bin'). URIs are strongly\n   * encouraged to be relative paths, rather than absolute. Use of a protocol (like `file://`)\n   * is possible for custom applications, but will limit the compatibility of the asset with most\n   * tools.\n   *\n   * Buffers commonly use the extension `.bin`, though this is not required.\n   */\n  setURI(uri) {\n    return this.set('uri', uri);\n  }\n}\n\n/**\n * *Cameras are perspectives through which the {@link Scene} may be viewed.*\n *\n * Projection can be perspective or orthographic. Cameras are contained in nodes and thus can be\n * transformed. The camera is defined such that the local +X axis is to the right, the lens looks\n * towards the local -Z axis, and the top of the camera is aligned with the local +Y axis. If no\n * transformation is specified, the location of the camera is at the origin.\n *\n * Usage:\n *\n * ```typescript\n * const camera = doc.createCamera('myCamera')\n * \t.setType(GLTF.CameraType.PERSPECTIVE)\n * \t.setZNear(0.1)\n * \t.setZFar(100)\n * \t.setYFov(Math.PI / 4)\n * \t.setAspectRatio(1.5);\n *\n * node.setCamera(camera);\n * ```\n *\n * References:\n * - [glTF → Cameras](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#cameras)\n *\n * @category Properties\n */\nclass Camera extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.CAMERA;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      // Common.\n      type: Camera.Type.PERSPECTIVE,\n      znear: 0.1,\n      zfar: 100,\n      // Perspective.\n      aspectRatio: null,\n      yfov: Math.PI * 2 * 50 / 360,\n      // 50º\n      // Orthographic.\n      xmag: 1,\n      ymag: 1\n    });\n  }\n  /**********************************************************************************************\n   * Common.\n   */\n  /** Specifies if the camera uses a perspective or orthographic projection. */\n  getType() {\n    return this.get('type');\n  }\n  /** Specifies if the camera uses a perspective or orthographic projection. */\n  setType(type) {\n    return this.set('type', type);\n  }\n  /** Floating-point distance to the near clipping plane. */\n  getZNear() {\n    return this.get('znear');\n  }\n  /** Floating-point distance to the near clipping plane. */\n  setZNear(znear) {\n    return this.set('znear', znear);\n  }\n  /**\n   * Floating-point distance to the far clipping plane. When defined, zfar must be greater than\n   * znear. If zfar is undefined, runtime must use infinite projection matrix.\n   */\n  getZFar() {\n    return this.get('zfar');\n  }\n  /**\n   * Floating-point distance to the far clipping plane. When defined, zfar must be greater than\n   * znear. If zfar is undefined, runtime must use infinite projection matrix.\n   */\n  setZFar(zfar) {\n    return this.set('zfar', zfar);\n  }\n  /**********************************************************************************************\n   * Perspective.\n   */\n  /**\n   * Floating-point aspect ratio of the field of view. When undefined, the aspect ratio of the\n   * canvas is used.\n   */\n  getAspectRatio() {\n    return this.get('aspectRatio');\n  }\n  /**\n   * Floating-point aspect ratio of the field of view. When undefined, the aspect ratio of the\n   * canvas is used.\n   */\n  setAspectRatio(aspectRatio) {\n    return this.set('aspectRatio', aspectRatio);\n  }\n  /** Floating-point vertical field of view in radians. */\n  getYFov() {\n    return this.get('yfov');\n  }\n  /** Floating-point vertical field of view in radians. */\n  setYFov(yfov) {\n    return this.set('yfov', yfov);\n  }\n  /**********************************************************************************************\n   * Orthographic.\n   */\n  /**\n   * Floating-point horizontal magnification of the view, and half the view's width\n   * in world units.\n   */\n  getXMag() {\n    return this.get('xmag');\n  }\n  /**\n   * Floating-point horizontal magnification of the view, and half the view's width\n   * in world units.\n   */\n  setXMag(xmag) {\n    return this.set('xmag', xmag);\n  }\n  /**\n   * Floating-point vertical magnification of the view, and half the view's height\n   * in world units.\n   */\n  getYMag() {\n    return this.get('ymag');\n  }\n  /**\n   * Floating-point vertical magnification of the view, and half the view's height\n   * in world units.\n   */\n  setYMag(ymag) {\n    return this.set('ymag', ymag);\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\nCamera.Type = {\n  /** A perspective camera representing a perspective projection matrix. */\n  PERSPECTIVE: 'perspective',\n  /** An orthographic camera representing an orthographic projection matrix. */\n  ORTHOGRAPHIC: 'orthographic'\n};\n\n/**\n * *Base class for all {@link Property} types that can be attached by an {@link Extension}.*\n *\n * After an {@link Extension} is attached to a glTF {@link Document}, the Extension may be used to\n * construct ExtensionProperty instances, to be referenced throughout the document as prescribed by\n * the Extension. For example, the `KHR_materials_clearcoat` Extension defines a `Clearcoat`\n * ExtensionProperty, which is referenced by {@link Material} Properties in the Document, and may\n * contain references to {@link Texture} properties of its own.\n *\n * For more information on available extensions and their usage, see [Extensions](/extensions).\n *\n * Reference:\n * - [glTF → Extensions](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#specifying-extensions)\n *\n * @category Properties\n */\nclass ExtensionProperty extends Property {\n  /** @hidden */\n  _validateParent(parent) {\n    if (!this.parentTypes.includes(parent.propertyType)) {\n      throw new Error(`Parent \"${parent.propertyType}\" invalid for child \"${this.propertyType}\".`);\n    }\n  }\n}\nExtensionProperty.EXTENSION_NAME = void 0;\n\n/**\n * *Settings associated with a particular use of a {@link Texture}.*\n *\n * Different materials may reuse the same texture but with different texture coordinates,\n * minFilter/magFilter, or wrapS/wrapT settings. The TextureInfo class contains settings\n * derived from both the \"TextureInfo\" and \"Sampler\" properties in the glTF specification,\n * consolidated here for simplicity.\n *\n * TextureInfo properties cannot be directly created. For any material texture slot, such as\n * baseColorTexture, there will be a corresponding method to obtain the TextureInfo for that slot.\n * For example, see {@link Material.getBaseColorTextureInfo}.\n *\n * References:\n * - [glTF → Texture Info](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#reference-textureinfo)\n *\n * @category Properties\n */\nclass TextureInfo extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.TEXTURE_INFO;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      texCoord: 0,\n      magFilter: null,\n      minFilter: null,\n      wrapS: TextureInfo.WrapMode.REPEAT,\n      wrapT: TextureInfo.WrapMode.REPEAT\n    });\n  }\n  /**********************************************************************************************\n   * Texture coordinates.\n   */\n  /** Returns the texture coordinate (UV set) index for the texture. */\n  getTexCoord() {\n    return this.get('texCoord');\n  }\n  /** Sets the texture coordinate (UV set) index for the texture. */\n  setTexCoord(texCoord) {\n    return this.set('texCoord', texCoord);\n  }\n  /**********************************************************************************************\n   * Min/mag filter.\n   */\n  /** Returns the magnification filter applied to the texture. */\n  getMagFilter() {\n    return this.get('magFilter');\n  }\n  /** Sets the magnification filter applied to the texture. */\n  setMagFilter(magFilter) {\n    return this.set('magFilter', magFilter);\n  }\n  /** Sets the minification filter applied to the texture. */\n  getMinFilter() {\n    return this.get('minFilter');\n  }\n  /** Returns the minification filter applied to the texture. */\n  setMinFilter(minFilter) {\n    return this.set('minFilter', minFilter);\n  }\n  /**********************************************************************************************\n   * UV wrapping.\n   */\n  /** Returns the S (U) wrapping mode for UVs used by the texture. */\n  getWrapS() {\n    return this.get('wrapS');\n  }\n  /** Sets the S (U) wrapping mode for UVs used by the texture. */\n  setWrapS(wrapS) {\n    return this.set('wrapS', wrapS);\n  }\n  /** Returns the T (V) wrapping mode for UVs used by the texture. */\n  getWrapT() {\n    return this.get('wrapT');\n  }\n  /** Sets the T (V) wrapping mode for UVs used by the texture. */\n  setWrapT(wrapT) {\n    return this.set('wrapT', wrapT);\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\n/** UV wrapping mode. Values correspond to WebGL enums. */\nTextureInfo.WrapMode = {\n  /** */\n  CLAMP_TO_EDGE: 33071,\n  /** */\n  MIRRORED_REPEAT: 33648,\n  /** */\n  REPEAT: 10497\n};\n/** Magnification filter. Values correspond to WebGL enums. */\nTextureInfo.MagFilter = {\n  /** */\n  NEAREST: 9728,\n  /** */\n  LINEAR: 9729\n};\n/** Minification filter. Values correspond to WebGL enums. */\nTextureInfo.MinFilter = {\n  /** */\n  NEAREST: 9728,\n  /** */\n  LINEAR: 9729,\n  /** */\n  NEAREST_MIPMAP_NEAREST: 9984,\n  /** */\n  LINEAR_MIPMAP_NEAREST: 9985,\n  /** */\n  NEAREST_MIPMAP_LINEAR: 9986,\n  /** */\n  LINEAR_MIPMAP_LINEAR: 9987\n};\n\nconst {\n  R,\n  G,\n  B,\n  A\n} = TextureChannel;\n/**\n * *Materials describe a surface's appearance and response to light.*\n *\n * Each {@link Primitive} within a {@link Mesh} may be assigned a single Material. The number of\n * GPU draw calls typically increases with both the numbers of Primitives and of Materials in an\n * asset; Materials should be reused wherever possible. Techniques like texture atlasing and vertex\n * colors allow objects to have varied appearances while technically sharing a single Material.\n *\n * Material properties are modified by both scalars (like `baseColorFactor`) and textures (like\n * `baseColorTexture`). When both are available, factors are considered linear multipliers against\n * textures of the same name. In the case of base color, vertex colors (`COLOR_0` attributes) are\n * also multiplied.\n *\n * Textures containing color data (`baseColorTexture`, `emissiveTexture`) are sRGB. All other\n * textures are linear. Like other resources, textures should be reused when possible.\n *\n * Usage:\n *\n * ```typescript\n * const material = doc.createMaterial('myMaterial')\n * \t.setBaseColorFactor([1, 0.5, 0.5, 1]) // RGBA\n * \t.setOcclusionTexture(aoTexture)\n * \t.setOcclusionStrength(0.5);\n *\n * mesh.listPrimitives()\n * \t.forEach((prim) => prim.setMaterial(material));\n * ```\n *\n * @category Properties\n */\nclass Material extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.MATERIAL;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      alphaMode: Material.AlphaMode.OPAQUE,\n      alphaCutoff: 0.5,\n      doubleSided: false,\n      baseColorFactor: [1, 1, 1, 1],\n      baseColorTexture: null,\n      baseColorTextureInfo: new TextureInfo(this.graph, 'baseColorTextureInfo'),\n      emissiveFactor: [0, 0, 0],\n      emissiveTexture: null,\n      emissiveTextureInfo: new TextureInfo(this.graph, 'emissiveTextureInfo'),\n      normalScale: 1,\n      normalTexture: null,\n      normalTextureInfo: new TextureInfo(this.graph, 'normalTextureInfo'),\n      occlusionStrength: 1,\n      occlusionTexture: null,\n      occlusionTextureInfo: new TextureInfo(this.graph, 'occlusionTextureInfo'),\n      roughnessFactor: 1,\n      metallicFactor: 1,\n      metallicRoughnessTexture: null,\n      metallicRoughnessTextureInfo: new TextureInfo(this.graph, 'metallicRoughnessTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Double-sided / culling.\n   */\n  /** Returns true when both sides of triangles should be rendered. May impact performance. */\n  getDoubleSided() {\n    return this.get('doubleSided');\n  }\n  /** Sets whether to render both sides of triangles. May impact performance. */\n  setDoubleSided(doubleSided) {\n    return this.set('doubleSided', doubleSided);\n  }\n  /**********************************************************************************************\n   * Alpha.\n   */\n  /** Returns material alpha, equivalent to baseColorFactor[3]. */\n  getAlpha() {\n    return this.get('baseColorFactor')[3];\n  }\n  /** Sets material alpha, equivalent to baseColorFactor[3]. */\n  setAlpha(alpha) {\n    const baseColorFactor = this.get('baseColorFactor').slice();\n    baseColorFactor[3] = alpha;\n    return this.set('baseColorFactor', baseColorFactor);\n  }\n  /**\n   * Returns the mode of the material's alpha channels, which are provided by `baseColorFactor`\n   * and `baseColorTexture`.\n   *\n   * - `OPAQUE`: Alpha value is ignored and the rendered output is fully opaque.\n   * - `BLEND`: Alpha value is used to determine the transparency each pixel on a surface, and\n   * \tthe fraction of surface vs. background color in the final result. Alpha blending creates\n   *\tsignificant edge cases in realtime renderers, and some care when structuring the model is\n   * \tnecessary for good results. In particular, transparent geometry should be kept in separate\n   * \tmeshes or primitives from opaque geometry. The `depthWrite` or `zWrite` settings in engines\n   * \tshould usually be disabled on transparent materials.\n   * - `MASK`: Alpha value is compared against `alphaCutoff` threshold for each pixel on a\n   * \tsurface, and the pixel is either fully visible or fully discarded based on that cutoff.\n   * \tThis technique is useful for things like leafs/foliage, grass, fabric meshes, and other\n   * \tsurfaces where no semitransparency is needed. With a good choice of `alphaCutoff`, surfaces\n   * \tthat don't require semitransparency can avoid the performance penalties and visual issues\n   * \tinvolved with `BLEND` transparency.\n   *\n   * Reference:\n   * - [glTF → material.alphaMode](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialalphamode)\n   */\n  getAlphaMode() {\n    return this.get('alphaMode');\n  }\n  /** Sets the mode of the material's alpha channels. See {@link Material.getAlphaMode getAlphaMode} for details. */\n  setAlphaMode(alphaMode) {\n    return this.set('alphaMode', alphaMode);\n  }\n  /** Returns the visibility threshold; applied only when `.alphaMode='MASK'`. */\n  getAlphaCutoff() {\n    return this.get('alphaCutoff');\n  }\n  /** Sets the visibility threshold; applied only when `.alphaMode='MASK'`. */\n  setAlphaCutoff(alphaCutoff) {\n    return this.set('alphaCutoff', alphaCutoff);\n  }\n  /**********************************************************************************************\n   * Base color.\n   */\n  /**\n   * Base color / albedo factor; Linear-sRGB components.\n   * See {@link Material.getBaseColorTexture getBaseColorTexture}.\n   */\n  getBaseColorFactor() {\n    return this.get('baseColorFactor');\n  }\n  /**\n   * Base color / albedo factor; Linear-sRGB components.\n   * See {@link Material.getBaseColorTexture getBaseColorTexture}.\n   */\n  setBaseColorFactor(baseColorFactor) {\n    return this.set('baseColorFactor', baseColorFactor);\n  }\n  /**\n   * Base color / albedo. The visible color of a non-metallic surface under constant ambient\n   * light would be a linear combination (multiplication) of its vertex colors, base color\n   * factor, and base color texture. Lighting, and reflections in metallic or smooth surfaces,\n   * also effect the final color. The alpha (`.a`) channel of base color factors and textures\n   * will have varying effects, based on the setting of {@link Material.getAlphaMode getAlphaMode}.\n   *\n   * Reference:\n   * - [glTF → material.pbrMetallicRoughness.baseColorFactor](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#pbrmetallicroughnessbasecolorfactor)\n   */\n  getBaseColorTexture() {\n    return this.getRef('baseColorTexture');\n  }\n  /**\n   * Settings affecting the material's use of its base color texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getBaseColorTextureInfo() {\n    return this.getRef('baseColorTexture') ? this.getRef('baseColorTextureInfo') : null;\n  }\n  /** Sets base color / albedo texture. See {@link Material.getBaseColorTexture getBaseColorTexture}. */\n  setBaseColorTexture(texture) {\n    return this.setRef('baseColorTexture', texture, {\n      channels: R | G | B | A,\n      isColor: true\n    });\n  }\n  /**********************************************************************************************\n   * Emissive.\n   */\n  /** Emissive color; Linear-sRGB components. See {@link Material.getEmissiveTexture getEmissiveTexture}. */\n  getEmissiveFactor() {\n    return this.get('emissiveFactor');\n  }\n  /** Emissive color; Linear-sRGB components. See {@link Material.getEmissiveTexture getEmissiveTexture}. */\n  setEmissiveFactor(emissiveFactor) {\n    return this.set('emissiveFactor', emissiveFactor);\n  }\n  /**\n   * Emissive texture. Emissive color is added to any base color of the material, after any\n   * lighting/shadowing are applied. An emissive color does not inherently \"glow\", or affect\n   * objects around it at all. To create that effect, most viewers must also enable a\n   * post-processing effect called \"bloom\".\n   *\n   * Reference:\n   * - [glTF → material.emissiveTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialemissivetexture)\n   */\n  getEmissiveTexture() {\n    return this.getRef('emissiveTexture');\n  }\n  /**\n   * Settings affecting the material's use of its emissive texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getEmissiveTextureInfo() {\n    return this.getRef('emissiveTexture') ? this.getRef('emissiveTextureInfo') : null;\n  }\n  /** Sets emissive texture. See {@link Material.getEmissiveTexture getEmissiveTexture}. */\n  setEmissiveTexture(texture) {\n    return this.setRef('emissiveTexture', texture, {\n      channels: R | G | B,\n      isColor: true\n    });\n  }\n  /**********************************************************************************************\n   * Normal.\n   */\n  /** Normal (surface detail) factor; linear multiplier. Affects `.normalTexture`. */\n  getNormalScale() {\n    return this.get('normalScale');\n  }\n  /** Normal (surface detail) factor; linear multiplier. Affects `.normalTexture`. */\n  setNormalScale(scale) {\n    return this.set('normalScale', scale);\n  }\n  /**\n   * Normal (surface detail) texture.\n   *\n   * A tangent space normal map. The texture contains RGB components. Each texel represents the\n   * XYZ components of a normal vector in tangent space. Red [0 to 255] maps to X [-1 to 1].\n   * Green [0 to 255] maps to Y [-1 to 1]. Blue [128 to 255] maps to Z [1/255 to 1]. The normal\n   * vectors use OpenGL conventions where +X is right and +Y is up. +Z points toward the viewer.\n   *\n   * Reference:\n   * - [glTF → material.normalTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialnormaltexture)\n   */\n  getNormalTexture() {\n    return this.getRef('normalTexture');\n  }\n  /**\n   * Settings affecting the material's use of its normal texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getNormalTextureInfo() {\n    return this.getRef('normalTexture') ? this.getRef('normalTextureInfo') : null;\n  }\n  /** Sets normal (surface detail) texture. See {@link Material.getNormalTexture getNormalTexture}. */\n  setNormalTexture(texture) {\n    return this.setRef('normalTexture', texture, {\n      channels: R | G | B\n    });\n  }\n  /**********************************************************************************************\n   * Occlusion.\n   */\n  /** (Ambient) Occlusion factor; linear multiplier. Affects `.occlusionTexture`. */\n  getOcclusionStrength() {\n    return this.get('occlusionStrength');\n  }\n  /** Sets (ambient) occlusion factor; linear multiplier. Affects `.occlusionTexture`. */\n  setOcclusionStrength(strength) {\n    return this.set('occlusionStrength', strength);\n  }\n  /**\n   * (Ambient) Occlusion texture, generally used for subtle 'baked' shadowing effects that are\n   * independent of an object's position, such as shading in inset areas and corners. Direct\n   * lighting is not affected by occlusion, so at least one indirect light source must be present\n   * in the scene for occlusion effects to be visible.\n   *\n   * The occlusion values are sampled from the R channel. Higher values indicate areas that\n   * should receive full indirect lighting and lower values indicate no indirect lighting.\n   *\n   * Reference:\n   * - [glTF → material.occlusionTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#materialocclusiontexture)\n   */\n  getOcclusionTexture() {\n    return this.getRef('occlusionTexture');\n  }\n  /**\n   * Settings affecting the material's use of its occlusion texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getOcclusionTextureInfo() {\n    return this.getRef('occlusionTexture') ? this.getRef('occlusionTextureInfo') : null;\n  }\n  /** Sets (ambient) occlusion texture. See {@link Material.getOcclusionTexture getOcclusionTexture}. */\n  setOcclusionTexture(texture) {\n    return this.setRef('occlusionTexture', texture, {\n      channels: R\n    });\n  }\n  /**********************************************************************************************\n   * Metallic / roughness.\n   */\n  /**\n   * Roughness factor; linear multiplier. Affects roughness channel of\n   * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  getRoughnessFactor() {\n    return this.get('roughnessFactor');\n  }\n  /**\n   * Sets roughness factor; linear multiplier. Affects roughness channel of\n   * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  setRoughnessFactor(factor) {\n    return this.set('roughnessFactor', factor);\n  }\n  /**\n   * Metallic factor; linear multiplier. Affects roughness channel of\n   * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  getMetallicFactor() {\n    return this.get('metallicFactor');\n  }\n  /**\n   * Sets metallic factor; linear multiplier. Affects roughness channel of\n   * `metallicRoughnessTexture`. See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  setMetallicFactor(factor) {\n    return this.set('metallicFactor', factor);\n  }\n  /**\n   * Metallic roughness texture. The metalness values are sampled from the B channel. The\n   * roughness values are sampled from the G channel. When a material is fully metallic,\n   * or nearly so, it may require image-based lighting (i.e. an environment map) or global\n   * illumination to appear well-lit.\n   *\n   * Reference:\n   * - [glTF → material.pbrMetallicRoughness.metallicRoughnessTexture](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#pbrmetallicroughnessmetallicroughnesstexture)\n   */\n  getMetallicRoughnessTexture() {\n    return this.getRef('metallicRoughnessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its metallic/roughness texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getMetallicRoughnessTextureInfo() {\n    return this.getRef('metallicRoughnessTexture') ? this.getRef('metallicRoughnessTextureInfo') : null;\n  }\n  /**\n   * Sets metallic/roughness texture.\n   * See {@link Material.getMetallicRoughnessTexture getMetallicRoughnessTexture}.\n   */\n  setMetallicRoughnessTexture(texture) {\n    return this.setRef('metallicRoughnessTexture', texture, {\n      channels: G | B\n    });\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\nMaterial.AlphaMode = {\n  /**\n   * The alpha value is ignored and the rendered output is fully opaque\n   */\n  OPAQUE: 'OPAQUE',\n  /**\n   * The rendered output is either fully opaque or fully transparent depending on the alpha\n   * value and the specified alpha cutoff value\n   */\n  MASK: 'MASK',\n  /**\n   * The alpha value is used to composite the source and destination areas. The rendered\n   * output is combined with the background using the normal painting operation (i.e. the\n   * Porter and Duff over operator)\n   */\n  BLEND: 'BLEND'\n};\n\n/**\n * *Meshes define reusable geometry (triangles, lines, or points) and are instantiated by\n * {@link Node}s.*\n *\n * Each draw call required to render a mesh is represented as a {@link Primitive}. Meshes typically\n * have only a single {@link Primitive}, but may have more for various reasons. A mesh manages only\n * a list of primitives — materials, morph targets, and other properties are managed on a per-\n * primitive basis.\n *\n * When the same geometry and material should be rendered at multiple places in the scene, reuse\n * the same Mesh instance and attach it to multiple nodes for better efficiency. Where the geometry\n * is shared but the material is not, reusing {@link Accessor}s under different meshes and\n * primitives can similarly improve transmission efficiency, although some rendering efficiency is\n * lost as the number of materials in a scene increases.\n *\n * Usage:\n *\n * ```ts\n * const primitive = doc.createPrimitive()\n * \t.setAttribute('POSITION', positionAccessor)\n * \t.setAttribute('TEXCOORD_0', uvAccessor);\n * const mesh = doc.createMesh('myMesh')\n * \t.addPrimitive(primitive);\n * node.setMesh(mesh);\n * ```\n *\n * References:\n * - [glTF → Geometry](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#geometry)\n *\n * @category Properties\n */\nclass Mesh extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.MESH;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      weights: [],\n      primitives: new RefSet()\n    });\n  }\n  /** Adds a {@link Primitive} to the mesh's draw call list. */\n  addPrimitive(primitive) {\n    return this.addRef('primitives', primitive);\n  }\n  /** Removes a {@link Primitive} from the mesh's draw call list. */\n  removePrimitive(primitive) {\n    return this.removeRef('primitives', primitive);\n  }\n  /** Lists {@link Primitive} draw calls of the mesh. */\n  listPrimitives() {\n    return this.listRefs('primitives');\n  }\n  /**\n   * Initial weights of each {@link PrimitiveTarget} on this mesh. Each {@link Primitive} must\n   * have the same number of targets. Most engines only support 4-8 active morph targets at a\n   * time.\n   */\n  getWeights() {\n    return this.get('weights');\n  }\n  /**\n   * Initial weights of each {@link PrimitiveTarget} on this mesh. Each {@link Primitive} must\n   * have the same number of targets. Most engines only support 4-8 active morph targets at a\n   * time.\n   */\n  setWeights(weights) {\n    return this.set('weights', weights);\n  }\n}\n\n/**\n * *Nodes are the objects that comprise a {@link Scene}.*\n *\n * Each Node may have one or more children, and a transform (position, rotation, and scale) that\n * applies to all of its descendants. A Node may also reference (or \"instantiate\") other resources\n * at its location, including {@link Mesh}, Camera, Light, and Skin properties. A Node cannot be\n * part of more than one {@link Scene}.\n *\n * A Node's local transform is represented with array-like objects, intended to be compatible with\n * [gl-matrix](https://github.com/toji/gl-matrix), or with the `toArray`/`fromArray` methods of\n * libraries like three.js and babylon.js.\n *\n * Usage:\n *\n * ```ts\n * const node = doc.createNode('myNode')\n * \t.setMesh(mesh)\n * \t.setTranslation([0, 0, 0])\n * \t.addChild(otherNode);\n * ```\n *\n * References:\n * - [glTF → Nodes and Hierarchy](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#nodes-and-hierarchy)\n *\n * @category Properties\n */\nclass Node extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.NODE;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      translation: [0, 0, 0],\n      rotation: [0, 0, 0, 1],\n      scale: [1, 1, 1],\n      weights: [],\n      camera: null,\n      mesh: null,\n      skin: null,\n      children: new RefSet()\n    });\n  }\n  copy(other, resolve = COPY_IDENTITY) {\n    // Node cannot be copied, only cloned. Copying is shallow, but Nodes cannot have more than\n    // one parent. Rather than leaving one of the two Nodes without children, throw an error here.\n    if (resolve === COPY_IDENTITY) throw new Error('Node cannot be copied.');\n    return super.copy(other, resolve);\n  }\n  /**********************************************************************************************\n   * Local transform.\n   */\n  /** Returns the translation (position) of this Node in local space. */\n  getTranslation() {\n    return this.get('translation');\n  }\n  /** Returns the rotation (quaternion) of this Node in local space. */\n  getRotation() {\n    return this.get('rotation');\n  }\n  /** Returns the scale of this Node in local space. */\n  getScale() {\n    return this.get('scale');\n  }\n  /** Sets the translation (position) of this Node in local space. */\n  setTranslation(translation) {\n    return this.set('translation', translation);\n  }\n  /** Sets the rotation (quaternion) of this Node in local space. */\n  setRotation(rotation) {\n    return this.set('rotation', rotation);\n  }\n  /** Sets the scale of this Node in local space. */\n  setScale(scale) {\n    return this.set('scale', scale);\n  }\n  /** Returns the local matrix of this Node. */\n  getMatrix() {\n    return MathUtils.compose(this.get('translation'), this.get('rotation'), this.get('scale'), []);\n  }\n  /** Sets the local matrix of this Node. Matrix will be decomposed to TRS properties. */\n  setMatrix(matrix) {\n    const translation = this.get('translation').slice();\n    const rotation = this.get('rotation').slice();\n    const scale = this.get('scale').slice();\n    MathUtils.decompose(matrix, translation, rotation, scale);\n    return this.set('translation', translation).set('rotation', rotation).set('scale', scale);\n  }\n  /**********************************************************************************************\n   * World transform.\n   */\n  /** Returns the translation (position) of this Node in world space. */\n  getWorldTranslation() {\n    const t = [0, 0, 0];\n    MathUtils.decompose(this.getWorldMatrix(), t, [0, 0, 0, 1], [1, 1, 1]);\n    return t;\n  }\n  /** Returns the rotation (quaternion) of this Node in world space. */\n  getWorldRotation() {\n    const r = [0, 0, 0, 1];\n    MathUtils.decompose(this.getWorldMatrix(), [0, 0, 0], r, [1, 1, 1]);\n    return r;\n  }\n  /** Returns the scale of this Node in world space. */\n  getWorldScale() {\n    const s = [1, 1, 1];\n    MathUtils.decompose(this.getWorldMatrix(), [0, 0, 0], [0, 0, 0, 1], s);\n    return s;\n  }\n  /** Returns the world matrix of this Node. */\n  getWorldMatrix() {\n    // Build ancestor chain.\n    const ancestors = [];\n    for (let node = this; node != null; node = node.getParentNode()) {\n      ancestors.push(node);\n    }\n    // Compute world matrix.\n    let ancestor;\n    const worldMatrix = ancestors.pop().getMatrix();\n    while (ancestor = ancestors.pop()) {\n      multiply(worldMatrix, worldMatrix, ancestor.getMatrix());\n    }\n    return worldMatrix;\n  }\n  /**********************************************************************************************\n   * Scene hierarchy.\n   */\n  /**\n   * Adds the given Node as a child of this Node.\n   *\n   * Requirements:\n   *\n   * 1. Nodes MAY be root children of multiple {@link Scene Scenes}\n   * 2. Nodes MUST NOT be children of >1 Node\n   * 3. Nodes MUST NOT be children of both Nodes and {@link Scene Scenes}\n   *\n   * The `addChild` method enforces these restrictions automatically, and will\n   * remove the new child from previous parents where needed. This behavior\n   * may change in future major releases of the library.\n   */\n  addChild(child) {\n    // Remove existing parents.\n    const parentNode = child.getParentNode();\n    if (parentNode) parentNode.removeChild(child);\n    for (const parent of child.listParents()) {\n      if (parent.propertyType === PropertyType.SCENE) {\n        parent.removeChild(child);\n      }\n    }\n    return this.addRef('children', child);\n  }\n  /** Removes a Node from this Node's child Node list. */\n  removeChild(child) {\n    return this.removeRef('children', child);\n  }\n  /** Lists all child Nodes of this Node. */\n  listChildren() {\n    return this.listRefs('children');\n  }\n  /**\n   * Returns the Node's unique parent Node within the scene graph. If the\n   * Node has no parents, or is a direct child of the {@link Scene}\n   * (\"root node\"), this method returns null.\n   *\n   * Unrelated to {@link Property.listParents}, which lists all resource\n   * references from properties of any type ({@link Skin}, {@link Root}, ...).\n   */\n  getParentNode() {\n    for (const parent of this.listParents()) {\n      if (parent.propertyType === PropertyType.NODE) {\n        return parent;\n      }\n    }\n    return null;\n  }\n  /**********************************************************************************************\n   * Attachments.\n   */\n  /** Returns the {@link Mesh}, if any, instantiated at this Node. */\n  getMesh() {\n    return this.getRef('mesh');\n  }\n  /**\n   * Sets a {@link Mesh} to be instantiated at this Node. A single mesh may be instantiated by\n   * multiple Nodes; reuse of this sort is strongly encouraged.\n   */\n  setMesh(mesh) {\n    return this.setRef('mesh', mesh);\n  }\n  /** Returns the {@link Camera}, if any, instantiated at this Node. */\n  getCamera() {\n    return this.getRef('camera');\n  }\n  /** Sets a {@link Camera} to be instantiated at this Node. */\n  setCamera(camera) {\n    return this.setRef('camera', camera);\n  }\n  /** Returns the {@link Skin}, if any, instantiated at this Node. */\n  getSkin() {\n    return this.getRef('skin');\n  }\n  /** Sets a {@link Skin} to be instantiated at this Node. */\n  setSkin(skin) {\n    return this.setRef('skin', skin);\n  }\n  /**\n   * Initial weights of each {@link PrimitiveTarget} for the mesh instance at this Node.\n   * Most engines only support 4-8 active morph targets at a time.\n   */\n  getWeights() {\n    return this.get('weights');\n  }\n  /**\n   * Initial weights of each {@link PrimitiveTarget} for the mesh instance at this Node.\n   * Most engines only support 4-8 active morph targets at a time.\n   */\n  setWeights(weights) {\n    return this.set('weights', weights);\n  }\n  /**********************************************************************************************\n   * Helpers.\n   */\n  /** Visits this {@link Node} and its descendants, top-down. */\n  traverse(fn) {\n    fn(this);\n    for (const child of this.listChildren()) child.traverse(fn);\n    return this;\n  }\n}\n\n/**\n * *Primitives are individual GPU draw calls comprising a {@link Mesh}.*\n *\n * Meshes typically have only a single Primitive, although various cases may require more. Each\n * primitive may be assigned vertex attributes, morph target attributes, and a material. Any of\n * these properties should be reused among multiple primitives where feasible.\n *\n * Primitives cannot be moved independently of other primitives within the same mesh, except\n * through the use of morph targets and skinning. If independent movement or other runtime\n * behavior is necessary (like raycasting or collisions) prefer to assign each primitive to a\n * different mesh. The number of GPU draw calls is typically not affected by grouping or\n * ungrouping primitives to a mesh.\n *\n * Each primitive may optionally be deformed by one or more morph targets, stored in a\n * {@link PrimitiveTarget}.\n *\n * Usage:\n *\n * ```ts\n * const primitive = doc.createPrimitive()\n * \t.setAttribute('POSITION', positionAccessor)\n * \t.setAttribute('TEXCOORD_0', uvAccessor)\n * \t.setMaterial(material);\n * mesh.addPrimitive(primitive);\n * node.setMesh(mesh);\n * ```\n *\n * References:\n * - [glTF → Geometry](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#geometry)\n *\n * @category Properties\n */\nclass Primitive extends ExtensibleProperty {\n  /**********************************************************************************************\n   * Instance.\n   */\n  init() {\n    this.propertyType = PropertyType.PRIMITIVE;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      mode: Primitive.Mode.TRIANGLES,\n      material: null,\n      indices: null,\n      attributes: new RefMap(),\n      targets: new RefSet()\n    });\n  }\n  /**********************************************************************************************\n   * Primitive data.\n   */\n  /** Returns an {@link Accessor} with indices of vertices to be drawn. */\n  getIndices() {\n    return this.getRef('indices');\n  }\n  /**\n   * Sets an {@link Accessor} with indices of vertices to be drawn. In `TRIANGLES` draw mode,\n   * each set of three indices define a triangle. The front face has a counter-clockwise (CCW)\n   * winding order.\n   */\n  setIndices(indices) {\n    return this.setRef('indices', indices, {\n      usage: BufferViewUsage$1.ELEMENT_ARRAY_BUFFER\n    });\n  }\n  /** Returns a vertex attribute as an {@link Accessor}. */\n  getAttribute(semantic) {\n    return this.getRefMap('attributes', semantic);\n  }\n  /**\n   * Sets a vertex attribute to an {@link Accessor}. All attributes must have the same vertex\n   * count.\n   */\n  setAttribute(semantic, accessor) {\n    return this.setRefMap('attributes', semantic, accessor, {\n      usage: BufferViewUsage$1.ARRAY_BUFFER\n    });\n  }\n  /**\n   * Lists all vertex attribute {@link Accessor}s associated with the primitive, excluding any\n   * attributes used for morph targets. For example, `[positionAccessor, normalAccessor,\n   * uvAccessor]`. Order will be consistent with the order returned by {@link .listSemantics}().\n   */\n  listAttributes() {\n    return this.listRefMapValues('attributes');\n  }\n  /**\n   * Lists all vertex attribute semantics associated with the primitive, excluding any semantics\n   * used for morph targets. For example, `['POSITION', 'NORMAL', 'TEXCOORD_0']`. Order will be\n   * consistent with the order returned by {@link .listAttributes}().\n   */\n  listSemantics() {\n    return this.listRefMapKeys('attributes');\n  }\n  /** Returns the material used to render the primitive. */\n  getMaterial() {\n    return this.getRef('material');\n  }\n  /** Sets the material used to render the primitive. */\n  setMaterial(material) {\n    return this.setRef('material', material);\n  }\n  /**********************************************************************************************\n   * Mode.\n   */\n  /**\n   * Returns the GPU draw mode (`TRIANGLES`, `LINES`, `POINTS`...) as a WebGL enum value.\n   *\n   * Reference:\n   * - [glTF → `primitive.mode`](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#primitivemode)\n   */\n  getMode() {\n    return this.get('mode');\n  }\n  /**\n   * Sets the GPU draw mode (`TRIANGLES`, `LINES`, `POINTS`...) as a WebGL enum value.\n   *\n   * Reference:\n   * - [glTF → `primitive.mode`](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#primitivemode)\n   */\n  setMode(mode) {\n    return this.set('mode', mode);\n  }\n  /**********************************************************************************************\n   * Morph targets.\n   */\n  /** Lists all morph targets associated with the primitive. */\n  listTargets() {\n    return this.listRefs('targets');\n  }\n  /**\n   * Adds a morph target to the primitive. All primitives in the same mesh must have the same\n   * number of targets.\n   */\n  addTarget(target) {\n    return this.addRef('targets', target);\n  }\n  /**\n   * Removes a morph target from the primitive. All primitives in the same mesh must have the same\n   * number of targets.\n   */\n  removeTarget(target) {\n    return this.removeRef('targets', target);\n  }\n}\n/**********************************************************************************************\n * Constants.\n */\n/** Type of primitives to render. All valid values correspond to WebGL enums. */\nPrimitive.Mode = {\n  /** Draw single points. */\n  POINTS: 0,\n  /** Draw lines. Each vertex connects to the one after it. */\n  LINES: 1,\n  /**\n   * Draw lines. Each set of two vertices is treated as a separate line segment.\n   * @deprecated See {@link https://github.com/KhronosGroup/glTF/issues/1883 KhronosGroup/glTF#1883}.\n   */\n  LINE_LOOP: 2,\n  /** Draw a connected group of line segments from the first vertex to the last,  */\n  LINE_STRIP: 3,\n  /** Draw triangles. Each set of three vertices creates a separate triangle. */\n  TRIANGLES: 4,\n  /** Draw a connected strip of triangles. */\n  TRIANGLE_STRIP: 5,\n  /**\n   * Draw a connected group of triangles. Each vertex connects to the previous and the first\n   * vertex in the fan.\n   * @deprecated See {@link https://github.com/KhronosGroup/glTF/issues/1883 KhronosGroup/glTF#1883}.\n   */\n  TRIANGLE_FAN: 6\n};\n\n/**\n * *Morph target or shape key used to deform one {@link Primitive} in a {@link Mesh}.*\n *\n * A PrimitiveTarget contains a `POSITION` attribute (and optionally `NORMAL` and `TANGENT`) that\n * can additively deform the base attributes on a {@link Mesh} {@link Primitive}. Vertex values\n * of `0, 0, 0` in the target will have no effect, whereas a value of `0, 1, 0` would offset that\n * vertex in the base geometry by y+=1. Morph targets can be fully or partially applied: their\n * default state is controlled by {@link Mesh.getWeights}, which can also be overridden for a\n * particular instantiation of a {@link Mesh}, using {@link Node.getWeights}.\n *\n * Reference:\n * - [glTF → Morph Targets](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#morph-targets)\n *\n * @category Properties\n */\nclass PrimitiveTarget extends Property {\n  init() {\n    this.propertyType = PropertyType.PRIMITIVE_TARGET;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      attributes: new RefMap()\n    });\n  }\n  /** Returns a morph target vertex attribute as an {@link Accessor}. */\n  getAttribute(semantic) {\n    return this.getRefMap('attributes', semantic);\n  }\n  /**\n   * Sets a morph target vertex attribute to an {@link Accessor}.\n   */\n  setAttribute(semantic, accessor) {\n    return this.setRefMap('attributes', semantic, accessor, {\n      usage: BufferViewUsage$1.ARRAY_BUFFER\n    });\n  }\n  /**\n   * Lists all morph target vertex attribute {@link Accessor}s associated. Order will be\n   * consistent with the order returned by {@link .listSemantics}().\n   */\n  listAttributes() {\n    return this.listRefMapValues('attributes');\n  }\n  /**\n   * Lists all morph target vertex attribute semantics associated. Order will be\n   * consistent with the order returned by {@link .listAttributes}().\n   */\n  listSemantics() {\n    return this.listRefMapKeys('attributes');\n  }\n}\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\n/**\n * *Scenes represent a set of visual objects to render.*\n *\n * Typically a glTF file contains only a single Scene, although more are allowed and useful in some\n * cases. No particular meaning is associated with additional Scenes, except as defined by the\n * application. Scenes reference {@link Node}s, and a single Node cannot be a member of more than\n * one Scene.\n *\n * References:\n * - [glTF → Scenes](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#scenes)\n * - [glTF → Coordinate System and Units](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#coordinate-system-and-units)\n *\n * @category Properties\n */\nclass Scene extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.SCENE;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      children: new RefSet()\n    });\n  }\n  copy(other, resolve = COPY_IDENTITY) {\n    // Scene cannot be copied, only cloned. Copying is shallow, but nodes cannot have more than\n    // one parent. Rather than leaving one of the two Scenes without children, throw an error here.\n    if (resolve === COPY_IDENTITY) throw new Error('Scene cannot be copied.');\n    return super.copy(other, resolve);\n  }\n  /**\n   * Adds a {@link Node} to the Scene.\n   *\n   * Requirements:\n   *\n   * 1. Nodes MAY be root children of multiple {@link Scene Scenes}\n   * 2. Nodes MUST NOT be children of >1 Node\n   * 3. Nodes MUST NOT be children of both Nodes and {@link Scene Scenes}\n   *\n   * The `addChild` method enforces these restrictions automatically, and will\n   * remove the new child from previous parents where needed. This behavior\n   * may change in future major releases of the library.\n   */\n  addChild(node) {\n    // Remove existing parent.\n    const parentNode = node.getParentNode();\n    if (parentNode) parentNode.removeChild(node);\n    return this.addRef('children', node);\n  }\n  /** Removes a {@link Node} from the Scene. */\n  removeChild(node) {\n    return this.removeRef('children', node);\n  }\n  /**\n   * Lists all direct child {@link Node Nodes} in the Scene. Indirect\n   * descendants (children of children) are not returned, but may be\n   * reached recursively or with {@link Scene.traverse} instead.\n   */\n  listChildren() {\n    return this.listRefs('children');\n  }\n  /** Visits each {@link Node} in the Scene, including descendants, top-down. */\n  traverse(fn) {\n    for (const node of this.listChildren()) node.traverse(fn);\n    return this;\n  }\n}\n\n/**\n * *Collection of {@link Node} joints and inverse bind matrices used with skinned {@link Mesh}\n * instances.*\n *\n * Reference\n * - [glTF → Skins](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#skins)\n *\n * @category Properties\n */\nclass Skin extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.SKIN;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      skeleton: null,\n      inverseBindMatrices: null,\n      joints: new RefSet()\n    });\n  }\n  /**\n   * {@link Node} used as a skeleton root. The node must be the closest common root of the joints\n   * hierarchy or a direct or indirect parent node of the closest common root.\n   */\n  getSkeleton() {\n    return this.getRef('skeleton');\n  }\n  /**\n   * {@link Node} used as a skeleton root. The node must be the closest common root of the joints\n   * hierarchy or a direct or indirect parent node of the closest common root.\n   */\n  setSkeleton(skeleton) {\n    return this.setRef('skeleton', skeleton);\n  }\n  /**\n   * {@link Accessor} containing the floating-point 4x4 inverse-bind matrices. The default is\n   * that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were\n   * pre-applied.\n   */\n  getInverseBindMatrices() {\n    return this.getRef('inverseBindMatrices');\n  }\n  /**\n   * {@link Accessor} containing the floating-point 4x4 inverse-bind matrices. The default is\n   * that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were\n   * pre-applied.\n   */\n  setInverseBindMatrices(inverseBindMatrices) {\n    return this.setRef('inverseBindMatrices', inverseBindMatrices, {\n      usage: BufferViewUsage$1.INVERSE_BIND_MATRICES\n    });\n  }\n  /** Adds a joint {@link Node} to this {@link Skin}. */\n  addJoint(joint) {\n    return this.addRef('joints', joint);\n  }\n  /** Removes a joint {@link Node} from this {@link Skin}. */\n  removeJoint(joint) {\n    return this.removeRef('joints', joint);\n  }\n  /** Lists joints ({@link Node}s used as joints or bones) in this {@link Skin}. */\n  listJoints() {\n    return this.listRefs('joints');\n  }\n}\n\n/**\n * *Texture, or images, referenced by {@link Material} properties.*\n *\n * Textures in glTF Transform are a combination of glTF's `texture` and `image` properties, and\n * should be unique within a document, such that no other texture contains the same\n * {@link Texture.getImage getImage()} data. Where duplicates may already exist, the `dedup({textures: true})`\n * transform can remove them. A {@link Document} with N texture properties will be exported to a\n * glTF file with N `image` properties, and the minimum number of `texture` properties necessary\n * for the materials that use it.\n *\n * For properties associated with a particular _use_ of a texture, see {@link TextureInfo}.\n *\n * Reference:\n * - [glTF → Textures](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#textures)\n * - [glTF → Images](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#images)\n *\n * @category Properties\n */\nclass Texture extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.TEXTURE;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      image: null,\n      mimeType: '',\n      uri: ''\n    });\n  }\n  /**********************************************************************************************\n   * MIME type / format.\n   */\n  /** Returns the MIME type for this texture ('image/jpeg' or 'image/png'). */\n  getMimeType() {\n    return this.get('mimeType') || ImageUtils.extensionToMimeType(FileUtils.extension(this.get('uri')));\n  }\n  /**\n   * Sets the MIME type for this texture ('image/jpeg' or 'image/png'). If the texture does not\n   * have a URI, a MIME type is required for correct export.\n   */\n  setMimeType(mimeType) {\n    return this.set('mimeType', mimeType);\n  }\n  /**********************************************************************************************\n   * URI / filename.\n   */\n  /** Returns the URI (e.g. 'path/to/file.png') for this texture. */\n  getURI() {\n    return this.get('uri');\n  }\n  /**\n   * Sets the URI (e.g. 'path/to/file.png') for this texture. If the texture does not have a MIME\n   * type, a URI is required for correct export.\n   */\n  setURI(uri) {\n    this.set('uri', uri);\n    const mimeType = ImageUtils.extensionToMimeType(FileUtils.extension(uri));\n    if (mimeType) this.set('mimeType', mimeType);\n    return this;\n  }\n  /**********************************************************************************************\n   * Image data.\n   */\n  /** Returns the raw image data for this texture. */\n  getImage() {\n    return this.get('image');\n  }\n  /** Sets the raw image data for this texture. */\n  setImage(image) {\n    return this.set('image', BufferUtils.assertView(image));\n  }\n  /** Returns the size, in pixels, of this texture. */\n  getSize() {\n    const image = this.get('image');\n    if (!image) return null;\n    return ImageUtils.getSize(image, this.getMimeType());\n  }\n}\n\n/**\n * *Root property of a glTF asset.*\n *\n * Any properties to be exported with a particular asset must be referenced (directly or\n * indirectly) by the root. Metadata about the asset's license, generator, and glTF specification\n * version are stored in the asset, accessible with {@link Root.getAsset}.\n *\n * Properties are added to the root with factory methods on its {@link Document}, and removed by\n * calling {@link Property.dispose}() on the resource. Any properties that have been created but\n * not disposed will be included when calling the various `root.list*()` methods.\n *\n * A document's root cannot be removed, and no other root may be created. Unlike other\n * {@link Property} types, the `.dispose()`, `.detach()` methods have no useful function on a\n * Root property.\n *\n * Usage:\n *\n * ```ts\n * const root = document.getRoot();\n * const scene = document.createScene('myScene');\n * const node = document.createNode('myNode');\n * scene.addChild(node);\n *\n * console.log(root.listScenes()); // → [scene x 1]\n * ```\n *\n * Reference: [glTF → Concepts](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#concepts)\n *\n * @category Properties\n */\nclass Root extends ExtensibleProperty {\n  init() {\n    this.propertyType = PropertyType.ROOT;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      asset: {\n        generator: `glTF-Transform ${VERSION}`,\n        version: '2.0'\n      },\n      defaultScene: null,\n      accessors: new RefSet(),\n      animations: new RefSet(),\n      buffers: new RefSet(),\n      cameras: new RefSet(),\n      materials: new RefSet(),\n      meshes: new RefSet(),\n      nodes: new RefSet(),\n      scenes: new RefSet(),\n      skins: new RefSet(),\n      textures: new RefSet()\n    });\n  }\n  /** @internal */\n  constructor(graph) {\n    super(graph);\n    this._extensions = new Set();\n    graph.addEventListener('node:create', event => {\n      this._addChildOfRoot(event.target);\n    });\n  }\n  clone() {\n    throw new Error('Root cannot be cloned.');\n  }\n  copy(other, resolve = COPY_IDENTITY) {\n    // Root cannot be cloned in isolation: only with its Document. Extensions are managed by\n    // the Document during cloning. The Root, and only the Root, should keep existing\n    // references while copying to avoid overwriting during a merge.\n    if (resolve === COPY_IDENTITY) throw new Error('Root cannot be copied.');\n    // IMPORTANT: Root cannot call super.copy(), which removes existing references.\n    this.set('asset', _extends({}, other.get('asset')));\n    this.setName(other.getName());\n    this.setExtras(_extends({}, other.getExtras()));\n    this.setDefaultScene(other.getDefaultScene() ? resolve(other.getDefaultScene()) : null);\n    for (const extensionName of other.listRefMapKeys('extensions')) {\n      const otherExtension = other.getExtension(extensionName);\n      this.setExtension(extensionName, resolve(otherExtension));\n    }\n    return this;\n  }\n  _addChildOfRoot(child) {\n    if (child instanceof Scene) {\n      this.addRef('scenes', child);\n    } else if (child instanceof Node) {\n      this.addRef('nodes', child);\n    } else if (child instanceof Camera) {\n      this.addRef('cameras', child);\n    } else if (child instanceof Skin) {\n      this.addRef('skins', child);\n    } else if (child instanceof Mesh) {\n      this.addRef('meshes', child);\n    } else if (child instanceof Material) {\n      this.addRef('materials', child);\n    } else if (child instanceof Texture) {\n      this.addRef('textures', child);\n    } else if (child instanceof Animation) {\n      this.addRef('animations', child);\n    } else if (child instanceof Accessor) {\n      this.addRef('accessors', child);\n    } else if (child instanceof Buffer$1) {\n      this.addRef('buffers', child);\n    }\n    // No error for untracked property types.\n    return this;\n  }\n  /**\n   * Returns the `asset` object, which specifies the target glTF version of the asset. Additional\n   * metadata can be stored in optional properties such as `generator` or `copyright`.\n   *\n   * Reference: [glTF → Asset](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#asset)\n   */\n  getAsset() {\n    return this.get('asset');\n  }\n  /**********************************************************************************************\n   * Extensions.\n   */\n  /** Lists all {@link Extension Extensions} enabled for this root. */\n  listExtensionsUsed() {\n    return Array.from(this._extensions);\n  }\n  /** Lists all {@link Extension Extensions} enabled and required for this root. */\n  listExtensionsRequired() {\n    return this.listExtensionsUsed().filter(extension => extension.isRequired());\n  }\n  /** @internal */\n  _enableExtension(extension) {\n    this._extensions.add(extension);\n    return this;\n  }\n  /** @internal */\n  _disableExtension(extension) {\n    this._extensions.delete(extension);\n    return this;\n  }\n  /**********************************************************************************************\n   * Properties.\n   */\n  /** Lists all {@link Scene} properties associated with this root. */\n  listScenes() {\n    return this.listRefs('scenes');\n  }\n  /** Default {@link Scene} associated with this root. */\n  setDefaultScene(defaultScene) {\n    return this.setRef('defaultScene', defaultScene);\n  }\n  /** Default {@link Scene} associated with this root. */\n  getDefaultScene() {\n    return this.getRef('defaultScene');\n  }\n  /** Lists all {@link Node} properties associated with this root. */\n  listNodes() {\n    return this.listRefs('nodes');\n  }\n  /** Lists all {@link Camera} properties associated with this root. */\n  listCameras() {\n    return this.listRefs('cameras');\n  }\n  /** Lists all {@link Skin} properties associated with this root. */\n  listSkins() {\n    return this.listRefs('skins');\n  }\n  /** Lists all {@link Mesh} properties associated with this root. */\n  listMeshes() {\n    return this.listRefs('meshes');\n  }\n  /** Lists all {@link Material} properties associated with this root. */\n  listMaterials() {\n    return this.listRefs('materials');\n  }\n  /** Lists all {@link Texture} properties associated with this root. */\n  listTextures() {\n    return this.listRefs('textures');\n  }\n  /** Lists all {@link Animation} properties associated with this root. */\n  listAnimations() {\n    return this.listRefs('animations');\n  }\n  /** Lists all {@link Accessor} properties associated with this root. */\n  listAccessors() {\n    return this.listRefs('accessors');\n  }\n  /** Lists all {@link Buffer} properties associated with this root. */\n  listBuffers() {\n    return this.listRefs('buffers');\n  }\n}\n\n/**\n * *Wraps a glTF asset and its resources for easier modification.*\n *\n * Documents manage glTF assets and the relationships among dependencies. The document wrapper\n * allow tools to read and write changes without dealing with array indices or byte offsets, which\n * would otherwise require careful management over the course of a file modification. An internal\n * graph structure allows any property in the glTF file to maintain references to its dependencies,\n * and makes it easy to determine where a particular property dependency is being used. For\n * example, finding a list of materials that use a particular texture is as simple as calling\n * {@link Texture.listParents}().\n *\n * A new resource {@link Property} (e.g. a {@link Mesh} or {@link Material}) is created by calling\n * 'create' methods on the document. Resources are destroyed by calling {@link Property.dispose}().\n *\n * ```ts\n * import fs from 'fs/promises';\n * import { Document } from '@gltf-transform/core';\n * import { dedup } from '@gltf-transform/functions';\n *\n * const document = new Document();\n *\n * const texture1 = document.createTexture('myTexture')\n * \t.setImage(await fs.readFile('path/to/image.png'))\n * \t.setMimeType('image/png');\n * const texture2 = document.createTexture('myTexture2')\n * \t.setImage(await fs.readFile('path/to/image2.png'))\n * \t.setMimeType('image/png');\n *\n * // Document containing duplicate copies of the same texture.\n * document.getRoot().listTextures(); // → [texture x 2]\n *\n * await document.transform(\n * \tdedup({textures: true}),\n * \t// ...\n * );\n *\n * // Document with duplicate textures removed.\n * document.getRoot().listTextures(); // → [texture x 1]\n * ```\n *\n * Reference:\n * - [glTF → Basics](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#gltf-basics)\n * - [glTF → Concepts](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#concepts)\n *\n * @category Documents\n */\nclass Document {\n  /**\n   * Returns the Document associated with a given Graph, if any.\n   * @hidden\n   * @experimental\n   */\n  static fromGraph(graph) {\n    return Document._GRAPH_DOCUMENTS.get(graph) || null;\n  }\n  /** Creates a new Document, representing an empty glTF asset. */\n  constructor() {\n    this._graph = new Graph();\n    this._root = new Root(this._graph);\n    this._logger = Logger.DEFAULT_INSTANCE;\n    Document._GRAPH_DOCUMENTS.set(this._graph, this);\n  }\n  /** Returns the glTF {@link Root} property. */\n  getRoot() {\n    return this._root;\n  }\n  /**\n   * Returns the {@link Graph} representing connectivity of resources within this document.\n   * @hidden\n   */\n  getGraph() {\n    return this._graph;\n  }\n  /** Returns the {@link Logger} instance used for any operations performed on this document. */\n  getLogger() {\n    return this._logger;\n  }\n  /**\n   * Overrides the {@link Logger} instance used for any operations performed on this document.\n   *\n   * Usage:\n   *\n   * ```ts\n   * doc\n   * \t.setLogger(new Logger(Logger.Verbosity.SILENT))\n   * \t.transform(dedup(), weld());\n   * ```\n   */\n  setLogger(logger) {\n    this._logger = logger;\n    return this;\n  }\n  /**\n   * Clones this Document, copying all resources within it.\n   * @deprecated Use 'cloneDocument(document)' from '@gltf-transform/functions'.\n   * @hidden\n   * @internal\n   */\n  clone() {\n    throw new Error(`Use 'cloneDocument(source)' from '@gltf-transform/functions'.`);\n  }\n  /**\n   * Merges the content of another Document into this one, without affecting the original.\n   * @deprecated Use 'mergeDocuments(target, source)' from '@gltf-transform/functions'.\n   * @hidden\n   * @internal\n   */\n  merge(_other) {\n    throw new Error(`Use 'mergeDocuments(target, source)' from '@gltf-transform/functions'.`);\n  }\n  /**\n   * Applies a series of modifications to this document. Each transformation is asynchronous,\n   * takes the {@link Document} as input, and returns nothing. Transforms are applied in the\n   * order given, which may affect the final result.\n   *\n   * Usage:\n   *\n   * ```ts\n   * await doc.transform(\n   * \tdedup(),\n   * \tprune()\n   * );\n   * ```\n   *\n   * @param transforms List of synchronous transformation functions to apply.\n   */\n  async transform(...transforms) {\n    const stack = transforms.map(fn => fn.name);\n    for (const transform of transforms) {\n      await transform(this, {\n        stack\n      });\n    }\n    return this;\n  }\n  /**********************************************************************************************\n   * Extension factory method.\n   */\n  /**\n   * Creates a new {@link Extension}, for the extension type of the given constructor. If the\n   * extension is already enabled for this Document, the previous Extension reference is reused.\n   */\n  createExtension(ctor) {\n    const extensionName = ctor.EXTENSION_NAME;\n    const prevExtension = this.getRoot().listExtensionsUsed().find(ext => ext.extensionName === extensionName);\n    return prevExtension || new ctor(this);\n  }\n  /**********************************************************************************************\n   * Property factory methods.\n   */\n  /** Creates a new {@link Scene} attached to this document's {@link Root}. */\n  createScene(name = '') {\n    return new Scene(this._graph, name);\n  }\n  /** Creates a new {@link Node} attached to this document's {@link Root}. */\n  createNode(name = '') {\n    return new Node(this._graph, name);\n  }\n  /** Creates a new {@link Camera} attached to this document's {@link Root}. */\n  createCamera(name = '') {\n    return new Camera(this._graph, name);\n  }\n  /** Creates a new {@link Skin} attached to this document's {@link Root}. */\n  createSkin(name = '') {\n    return new Skin(this._graph, name);\n  }\n  /** Creates a new {@link Mesh} attached to this document's {@link Root}. */\n  createMesh(name = '') {\n    return new Mesh(this._graph, name);\n  }\n  /**\n   * Creates a new {@link Primitive}. Primitives must be attached to a {@link Mesh}\n   * for use and export; they are not otherwise associated with a {@link Root}.\n   */\n  createPrimitive() {\n    return new Primitive(this._graph);\n  }\n  /**\n   * Creates a new {@link PrimitiveTarget}, or morph target. Targets must be attached to a\n   * {@link Primitive} for use and export; they are not otherwise associated with a {@link Root}.\n   */\n  createPrimitiveTarget(name = '') {\n    return new PrimitiveTarget(this._graph, name);\n  }\n  /** Creates a new {@link Material} attached to this document's {@link Root}. */\n  createMaterial(name = '') {\n    return new Material(this._graph, name);\n  }\n  /** Creates a new {@link Texture} attached to this document's {@link Root}. */\n  createTexture(name = '') {\n    return new Texture(this._graph, name);\n  }\n  /** Creates a new {@link Animation} attached to this document's {@link Root}. */\n  createAnimation(name = '') {\n    return new Animation(this._graph, name);\n  }\n  /**\n   * Creates a new {@link AnimationChannel}. Channels must be attached to an {@link Animation}\n   * for use and export; they are not otherwise associated with a {@link Root}.\n   */\n  createAnimationChannel(name = '') {\n    return new AnimationChannel(this._graph, name);\n  }\n  /**\n   * Creates a new {@link AnimationSampler}. Samplers must be attached to an {@link Animation}\n   * for use and export; they are not otherwise associated with a {@link Root}.\n   */\n  createAnimationSampler(name = '') {\n    return new AnimationSampler(this._graph, name);\n  }\n  /** Creates a new {@link Accessor} attached to this document's {@link Root}. */\n  createAccessor(name = '', buffer = null) {\n    if (!buffer) {\n      buffer = this.getRoot().listBuffers()[0];\n    }\n    return new Accessor(this._graph, name).setBuffer(buffer);\n  }\n  /** Creates a new {@link Buffer} attached to this document's {@link Root}. */\n  createBuffer(name = '') {\n    return new Buffer$1(this._graph, name);\n  }\n}\n/**\n * Enables lookup of a Document from its Graph. For internal use, only.\n * @internal\n * @experimental\n */\nDocument._GRAPH_DOCUMENTS = new WeakMap();\n\n/**\n * *Base class for all Extensions.*\n *\n * Extensions enhance a glTF {@link Document} with additional features and schema, beyond the core\n * glTF specification. Common extensions may be imported from the `@gltf-transform/extensions`\n * package, or custom extensions may be created by extending this base class.\n *\n * An extension is added to a Document by calling {@link Document.createExtension} with the\n * extension constructor. The extension object may then be used to construct\n * {@link ExtensionProperty} instances, which are attached to properties throughout the Document\n * as prescribed by the extension itself.\n *\n * For more information on available extensions and their usage, see [Extensions](/extensions).\n *\n * Reference:\n * - [glTF → Extensions](https://github.com/KhronosGroup/gltf/blob/main/specification/2.0/README.md#specifying-extensions)\n * - [glTF Extension Registry](https://github.com/KhronosGroup/gltf/blob/main/extensions)\n *\n * @category Extensions\n */\nclass Extension {\n  /** @hidden */\n  constructor(document) {\n    /** Official name of the extension. */\n    this.extensionName = '';\n    /**\n     * Before reading, extension should be called for these {@link Property} types. *Most\n     * extensions don't need to implement this.*\n     * @hidden\n     */\n    this.prereadTypes = [];\n    /**\n     * Before writing, extension should be called for these {@link Property} types. *Most\n     * extensions don't need to implement this.*\n     * @hidden\n     */\n    this.prewriteTypes = [];\n    /** @hidden Dependency IDs needed to read this extension, to be installed before I/O. */\n    this.readDependencies = [];\n    /** @hidden Dependency IDs needed to write this extension, to be installed before I/O. */\n    this.writeDependencies = [];\n    /** @hidden */\n    this.document = void 0;\n    /** @hidden */\n    this.required = false;\n    /** @hidden */\n    this.properties = new Set();\n    /** @hidden */\n    this._listener = void 0;\n    this.document = document;\n    document.getRoot()._enableExtension(this);\n    this._listener = _event => {\n      const event = _event;\n      const target = event.target;\n      if (target instanceof ExtensionProperty && target.extensionName === this.extensionName) {\n        if (event.type === 'node:create') this._addExtensionProperty(target);\n        if (event.type === 'node:dispose') this._removeExtensionProperty(target);\n      }\n    };\n    const graph = document.getGraph();\n    graph.addEventListener('node:create', this._listener);\n    graph.addEventListener('node:dispose', this._listener);\n  }\n  /** Disables and removes the extension from the Document. */\n  dispose() {\n    this.document.getRoot()._disableExtension(this);\n    const graph = this.document.getGraph();\n    graph.removeEventListener('node:create', this._listener);\n    graph.removeEventListener('node:dispose', this._listener);\n    for (const property of this.properties) {\n      property.dispose();\n    }\n  }\n  /** @hidden Performs first-time setup for the extension. Must be idempotent. */\n  static register() {}\n  /**\n   * Indicates to the client whether it is OK to load the asset when this extension is not\n   * recognized. Optional extensions are generally preferred, if there is not a good reason\n   * to require a client to completely fail when an extension isn't known.\n   */\n  isRequired() {\n    return this.required;\n  }\n  /**\n   * Indicates to the client whether it is OK to load the asset when this extension is not\n   * recognized. Optional extensions are generally preferred, if there is not a good reason\n   * to require a client to completely fail when an extension isn't known.\n   */\n  setRequired(required) {\n    this.required = required;\n    return this;\n  }\n  /**\n   * Lists all {@link ExtensionProperty} instances associated with, or created by, this\n   * extension. Includes only instances that are attached to the Document's graph; detached\n   * instances will be excluded.\n   */\n  listProperties() {\n    return Array.from(this.properties);\n  }\n  /**********************************************************************************************\n   * ExtensionProperty management.\n   */\n  /** @internal */\n  _addExtensionProperty(property) {\n    this.properties.add(property);\n    return this;\n  }\n  /** @internal */\n  _removeExtensionProperty(property) {\n    this.properties.delete(property);\n    return this;\n  }\n  /**********************************************************************************************\n   * I/O implementation.\n   */\n  /** @hidden Installs dependencies required by the extension. */\n  install(_key, _dependency) {\n    return this;\n  }\n  /**\n   * Used by the {@link PlatformIO} utilities when reading a glTF asset. This method may\n   * optionally be implemented by an extension, and should then support any property type\n   * declared by the Extension's {@link Extension.prereadTypes} list. The Extension will\n   * be given a ReaderContext instance, and is expected to update either the context or its\n   * {@link JSONDocument} with resources known to the Extension. *Most extensions don't need to\n   * implement this.*\n   * @hidden\n   */\n  preread(_readerContext, _propertyType) {\n    return this;\n  }\n  /**\n   * Used by the {@link PlatformIO} utilities when writing a glTF asset. This method may\n   * optionally be implemented by an extension, and should then support any property type\n   * declared by the Extension's {@link Extension.prewriteTypes} list. The Extension will\n   * be given a WriterContext instance, and is expected to update either the context or its\n   * {@link JSONDocument} with resources known to the Extension. *Most extensions don't need to\n   * implement this.*\n   * @hidden\n   */\n  prewrite(_writerContext, _propertyType) {\n    return this;\n  }\n}\n/** Official name of the extension. */\nExtension.EXTENSION_NAME = void 0;\n\n/**\n * Model class providing glTF Transform objects representing each definition in the glTF file, used\n * by a {@link GLTFReader} and its {@link Extension} implementations. Indices of all properties will be\n * consistent with the glTF file.\n *\n * @hidden\n */\nclass ReaderContext {\n  constructor(jsonDoc) {\n    this.jsonDoc = void 0;\n    this.buffers = [];\n    this.bufferViews = [];\n    this.bufferViewBuffers = [];\n    this.accessors = [];\n    this.textures = [];\n    this.textureInfos = new Map();\n    this.materials = [];\n    this.meshes = [];\n    this.cameras = [];\n    this.nodes = [];\n    this.skins = [];\n    this.animations = [];\n    this.scenes = [];\n    this.jsonDoc = jsonDoc;\n  }\n  setTextureInfo(textureInfo, textureInfoDef) {\n    this.textureInfos.set(textureInfo, textureInfoDef);\n    if (textureInfoDef.texCoord !== undefined) {\n      textureInfo.setTexCoord(textureInfoDef.texCoord);\n    }\n    if (textureInfoDef.extras !== undefined) {\n      textureInfo.setExtras(textureInfoDef.extras);\n    }\n    const textureDef = this.jsonDoc.json.textures[textureInfoDef.index];\n    if (textureDef.sampler === undefined) return;\n    const samplerDef = this.jsonDoc.json.samplers[textureDef.sampler];\n    if (samplerDef.magFilter !== undefined) {\n      textureInfo.setMagFilter(samplerDef.magFilter);\n    }\n    if (samplerDef.minFilter !== undefined) {\n      textureInfo.setMinFilter(samplerDef.minFilter);\n    }\n    if (samplerDef.wrapS !== undefined) {\n      textureInfo.setWrapS(samplerDef.wrapS);\n    }\n    if (samplerDef.wrapT !== undefined) {\n      textureInfo.setWrapT(samplerDef.wrapT);\n    }\n  }\n}\n\nconst DEFAULT_OPTIONS = {\n  logger: Logger.DEFAULT_INSTANCE,\n  extensions: [],\n  dependencies: {}\n};\nconst SUPPORTED_PREREAD_TYPES = new Set([PropertyType.BUFFER, PropertyType.TEXTURE, PropertyType.MATERIAL, PropertyType.MESH, PropertyType.PRIMITIVE, PropertyType.NODE, PropertyType.SCENE]);\n/** @internal */\nclass GLTFReader {\n  static read(jsonDoc, _options = DEFAULT_OPTIONS) {\n    const options = _extends({}, DEFAULT_OPTIONS, _options);\n    const {\n      json\n    } = jsonDoc;\n    const document = new Document().setLogger(options.logger);\n    this.validate(jsonDoc, options);\n    /* Reader context. */\n    const context = new ReaderContext(jsonDoc);\n    /** Asset. */\n    const assetDef = json.asset;\n    const asset = document.getRoot().getAsset();\n    if (assetDef.copyright) asset.copyright = assetDef.copyright;\n    if (assetDef.extras) asset.extras = assetDef.extras;\n    if (json.extras !== undefined) {\n      document.getRoot().setExtras(_extends({}, json.extras));\n    }\n    /** Extensions (1/2). */\n    const extensionsUsed = json.extensionsUsed || [];\n    const extensionsRequired = json.extensionsRequired || [];\n    options.extensions.sort((a, b) => a.EXTENSION_NAME > b.EXTENSION_NAME ? 1 : -1);\n    for (const Extension of options.extensions) {\n      if (extensionsUsed.includes(Extension.EXTENSION_NAME)) {\n        // Create extension.\n        const extension = document.createExtension(Extension).setRequired(extensionsRequired.includes(Extension.EXTENSION_NAME));\n        // Warn on unsupported preread hooks.\n        const unsupportedHooks = extension.prereadTypes.filter(type => !SUPPORTED_PREREAD_TYPES.has(type));\n        if (unsupportedHooks.length) {\n          options.logger.warn(`Preread hooks for some types (${unsupportedHooks.join()}), requested by extension ` + `${extension.extensionName}, are unsupported. Please file an issue or a PR.`);\n        }\n        // Install dependencies.\n        for (const key of extension.readDependencies) {\n          extension.install(key, options.dependencies[key]);\n        }\n      }\n    }\n    /** Buffers. */\n    const bufferDefs = json.buffers || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.BUFFER)).forEach(extension => extension.preread(context, PropertyType.BUFFER));\n    context.buffers = bufferDefs.map(bufferDef => {\n      const buffer = document.createBuffer(bufferDef.name);\n      if (bufferDef.extras) buffer.setExtras(bufferDef.extras);\n      if (bufferDef.uri && bufferDef.uri.indexOf('__') !== 0) {\n        buffer.setURI(bufferDef.uri);\n      }\n      return buffer;\n    });\n    /** Buffer views. */\n    const bufferViewDefs = json.bufferViews || [];\n    context.bufferViewBuffers = bufferViewDefs.map((bufferViewDef, index) => {\n      if (!context.bufferViews[index]) {\n        const bufferDef = jsonDoc.json.buffers[bufferViewDef.buffer];\n        const resource = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n        const byteOffset = bufferViewDef.byteOffset || 0;\n        context.bufferViews[index] = BufferUtils.toView(resource, byteOffset, bufferViewDef.byteLength);\n      }\n      return context.buffers[bufferViewDef.buffer];\n    });\n    /** Accessors. */\n    // Accessor .count and .componentType properties are inferred dynamically.\n    const accessorDefs = json.accessors || [];\n    context.accessors = accessorDefs.map(accessorDef => {\n      const buffer = context.bufferViewBuffers[accessorDef.bufferView];\n      const accessor = document.createAccessor(accessorDef.name, buffer).setType(accessorDef.type);\n      if (accessorDef.extras) accessor.setExtras(accessorDef.extras);\n      if (accessorDef.normalized !== undefined) {\n        accessor.setNormalized(accessorDef.normalized);\n      }\n      // Sparse accessors, KHR_draco_mesh_compression, and EXT_meshopt_compression.\n      if (accessorDef.bufferView === undefined) return accessor;\n      // NOTICE: We mark sparse accessors at the end of the I/O reading process. Consider an\n      // accessor to be 'sparse' if it (A) includes sparse value overrides, or (B) does not\n      // define .bufferView _and_ no extension provides that data.\n      accessor.setArray(getAccessorArray(accessorDef, context));\n      return accessor;\n    });\n    /** Textures. */\n    // glTF Transform's \"Texture\" properties correspond 1:1 with glTF \"Image\" properties, and\n    // with image files. The glTF file may contain more one texture per image, where images\n    // are reused with different sampler properties.\n    const imageDefs = json.images || [];\n    const textureDefs = json.textures || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.TEXTURE)).forEach(extension => extension.preread(context, PropertyType.TEXTURE));\n    context.textures = imageDefs.map(imageDef => {\n      const texture = document.createTexture(imageDef.name);\n      // glTF Image corresponds 1:1 with glTF Transform Texture. See `writer.ts`.\n      if (imageDef.extras) texture.setExtras(imageDef.extras);\n      if (imageDef.bufferView !== undefined) {\n        const bufferViewDef = json.bufferViews[imageDef.bufferView];\n        const bufferDef = jsonDoc.json.buffers[bufferViewDef.buffer];\n        const bufferData = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n        const byteOffset = bufferViewDef.byteOffset || 0;\n        const byteLength = bufferViewDef.byteLength;\n        const imageData = bufferData.slice(byteOffset, byteOffset + byteLength);\n        texture.setImage(imageData);\n      } else if (imageDef.uri !== undefined) {\n        texture.setImage(jsonDoc.resources[imageDef.uri]);\n        if (imageDef.uri.indexOf('__') !== 0) {\n          texture.setURI(imageDef.uri);\n        }\n      }\n      if (imageDef.mimeType !== undefined) {\n        texture.setMimeType(imageDef.mimeType);\n      } else if (imageDef.uri) {\n        const extension = FileUtils.extension(imageDef.uri);\n        texture.setMimeType(ImageUtils.extensionToMimeType(extension));\n      }\n      return texture;\n    });\n    /** Materials. */\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.MATERIAL)).forEach(extension => extension.preread(context, PropertyType.MATERIAL));\n    const materialDefs = json.materials || [];\n    context.materials = materialDefs.map(materialDef => {\n      const material = document.createMaterial(materialDef.name);\n      if (materialDef.extras) material.setExtras(materialDef.extras);\n      // Program state & blending.\n      if (materialDef.alphaMode !== undefined) {\n        material.setAlphaMode(materialDef.alphaMode);\n      }\n      if (materialDef.alphaCutoff !== undefined) {\n        material.setAlphaCutoff(materialDef.alphaCutoff);\n      }\n      if (materialDef.doubleSided !== undefined) {\n        material.setDoubleSided(materialDef.doubleSided);\n      }\n      // Factors.\n      const pbrDef = materialDef.pbrMetallicRoughness || {};\n      if (pbrDef.baseColorFactor !== undefined) {\n        material.setBaseColorFactor(pbrDef.baseColorFactor);\n      }\n      if (materialDef.emissiveFactor !== undefined) {\n        material.setEmissiveFactor(materialDef.emissiveFactor);\n      }\n      if (pbrDef.metallicFactor !== undefined) {\n        material.setMetallicFactor(pbrDef.metallicFactor);\n      }\n      if (pbrDef.roughnessFactor !== undefined) {\n        material.setRoughnessFactor(pbrDef.roughnessFactor);\n      }\n      // Textures.\n      if (pbrDef.baseColorTexture !== undefined) {\n        const textureInfoDef = pbrDef.baseColorTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setBaseColorTexture(texture);\n        context.setTextureInfo(material.getBaseColorTextureInfo(), textureInfoDef);\n      }\n      if (materialDef.emissiveTexture !== undefined) {\n        const textureInfoDef = materialDef.emissiveTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setEmissiveTexture(texture);\n        context.setTextureInfo(material.getEmissiveTextureInfo(), textureInfoDef);\n      }\n      if (materialDef.normalTexture !== undefined) {\n        const textureInfoDef = materialDef.normalTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setNormalTexture(texture);\n        context.setTextureInfo(material.getNormalTextureInfo(), textureInfoDef);\n        if (materialDef.normalTexture.scale !== undefined) {\n          material.setNormalScale(materialDef.normalTexture.scale);\n        }\n      }\n      if (materialDef.occlusionTexture !== undefined) {\n        const textureInfoDef = materialDef.occlusionTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setOcclusionTexture(texture);\n        context.setTextureInfo(material.getOcclusionTextureInfo(), textureInfoDef);\n        if (materialDef.occlusionTexture.strength !== undefined) {\n          material.setOcclusionStrength(materialDef.occlusionTexture.strength);\n        }\n      }\n      if (pbrDef.metallicRoughnessTexture !== undefined) {\n        const textureInfoDef = pbrDef.metallicRoughnessTexture;\n        const texture = context.textures[textureDefs[textureInfoDef.index].source];\n        material.setMetallicRoughnessTexture(texture);\n        context.setTextureInfo(material.getMetallicRoughnessTextureInfo(), textureInfoDef);\n      }\n      return material;\n    });\n    /** Meshes. */\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.MESH)).forEach(extension => extension.preread(context, PropertyType.MESH));\n    const meshDefs = json.meshes || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.PRIMITIVE)).forEach(extension => extension.preread(context, PropertyType.PRIMITIVE));\n    context.meshes = meshDefs.map(meshDef => {\n      const mesh = document.createMesh(meshDef.name);\n      if (meshDef.extras) mesh.setExtras(meshDef.extras);\n      if (meshDef.weights !== undefined) {\n        mesh.setWeights(meshDef.weights);\n      }\n      const primitiveDefs = meshDef.primitives || [];\n      primitiveDefs.forEach(primitiveDef => {\n        const primitive = document.createPrimitive();\n        if (primitiveDef.extras) primitive.setExtras(primitiveDef.extras);\n        if (primitiveDef.material !== undefined) {\n          primitive.setMaterial(context.materials[primitiveDef.material]);\n        }\n        if (primitiveDef.mode !== undefined) {\n          primitive.setMode(primitiveDef.mode);\n        }\n        for (const [semantic, index] of Object.entries(primitiveDef.attributes || {})) {\n          primitive.setAttribute(semantic, context.accessors[index]);\n        }\n        if (primitiveDef.indices !== undefined) {\n          primitive.setIndices(context.accessors[primitiveDef.indices]);\n        }\n        const targetNames = meshDef.extras && meshDef.extras.targetNames || [];\n        const targetDefs = primitiveDef.targets || [];\n        targetDefs.forEach((targetDef, targetIndex) => {\n          const targetName = targetNames[targetIndex] || targetIndex.toString();\n          const target = document.createPrimitiveTarget(targetName);\n          for (const [semantic, accessorIndex] of Object.entries(targetDef)) {\n            target.setAttribute(semantic, context.accessors[accessorIndex]);\n          }\n          primitive.addTarget(target);\n        });\n        mesh.addPrimitive(primitive);\n      });\n      return mesh;\n    });\n    /** Cameras. */\n    const cameraDefs = json.cameras || [];\n    context.cameras = cameraDefs.map(cameraDef => {\n      const camera = document.createCamera(cameraDef.name).setType(cameraDef.type);\n      if (cameraDef.extras) camera.setExtras(cameraDef.extras);\n      if (cameraDef.type === Camera.Type.PERSPECTIVE) {\n        const perspectiveDef = cameraDef.perspective;\n        camera.setYFov(perspectiveDef.yfov);\n        camera.setZNear(perspectiveDef.znear);\n        if (perspectiveDef.zfar !== undefined) {\n          camera.setZFar(perspectiveDef.zfar);\n        }\n        if (perspectiveDef.aspectRatio !== undefined) {\n          camera.setAspectRatio(perspectiveDef.aspectRatio);\n        }\n      } else {\n        const orthoDef = cameraDef.orthographic;\n        camera.setZNear(orthoDef.znear).setZFar(orthoDef.zfar).setXMag(orthoDef.xmag).setYMag(orthoDef.ymag);\n      }\n      return camera;\n    });\n    /** Nodes. */\n    const nodeDefs = json.nodes || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.NODE)).forEach(extension => extension.preread(context, PropertyType.NODE));\n    context.nodes = nodeDefs.map(nodeDef => {\n      const node = document.createNode(nodeDef.name);\n      if (nodeDef.extras) node.setExtras(nodeDef.extras);\n      if (nodeDef.translation !== undefined) {\n        node.setTranslation(nodeDef.translation);\n      }\n      if (nodeDef.rotation !== undefined) {\n        node.setRotation(nodeDef.rotation);\n      }\n      if (nodeDef.scale !== undefined) {\n        node.setScale(nodeDef.scale);\n      }\n      if (nodeDef.matrix !== undefined) {\n        const translation = [0, 0, 0];\n        const rotation = [0, 0, 0, 1];\n        const scale = [1, 1, 1];\n        MathUtils.decompose(nodeDef.matrix, translation, rotation, scale);\n        node.setTranslation(translation);\n        node.setRotation(rotation);\n        node.setScale(scale);\n      }\n      if (nodeDef.weights !== undefined) {\n        node.setWeights(nodeDef.weights);\n      }\n      // Attachments (mesh, camera, skin) defined later in reading process.\n      return node;\n    });\n    /** Skins. */\n    const skinDefs = json.skins || [];\n    context.skins = skinDefs.map(skinDef => {\n      const skin = document.createSkin(skinDef.name);\n      if (skinDef.extras) skin.setExtras(skinDef.extras);\n      if (skinDef.inverseBindMatrices !== undefined) {\n        skin.setInverseBindMatrices(context.accessors[skinDef.inverseBindMatrices]);\n      }\n      if (skinDef.skeleton !== undefined) {\n        skin.setSkeleton(context.nodes[skinDef.skeleton]);\n      }\n      for (const nodeIndex of skinDef.joints) {\n        skin.addJoint(context.nodes[nodeIndex]);\n      }\n      return skin;\n    });\n    /** Node attachments. */\n    nodeDefs.map((nodeDef, nodeIndex) => {\n      const node = context.nodes[nodeIndex];\n      const children = nodeDef.children || [];\n      children.forEach(childIndex => node.addChild(context.nodes[childIndex]));\n      if (nodeDef.mesh !== undefined) node.setMesh(context.meshes[nodeDef.mesh]);\n      if (nodeDef.camera !== undefined) node.setCamera(context.cameras[nodeDef.camera]);\n      if (nodeDef.skin !== undefined) node.setSkin(context.skins[nodeDef.skin]);\n    });\n    /** Animations. */\n    const animationDefs = json.animations || [];\n    context.animations = animationDefs.map(animationDef => {\n      const animation = document.createAnimation(animationDef.name);\n      if (animationDef.extras) animation.setExtras(animationDef.extras);\n      const samplerDefs = animationDef.samplers || [];\n      const samplers = samplerDefs.map(samplerDef => {\n        const sampler = document.createAnimationSampler().setInput(context.accessors[samplerDef.input]).setOutput(context.accessors[samplerDef.output]).setInterpolation(samplerDef.interpolation || AnimationSampler.Interpolation.LINEAR);\n        if (samplerDef.extras) sampler.setExtras(samplerDef.extras);\n        animation.addSampler(sampler);\n        return sampler;\n      });\n      const channels = animationDef.channels || [];\n      channels.forEach(channelDef => {\n        const channel = document.createAnimationChannel().setSampler(samplers[channelDef.sampler]).setTargetPath(channelDef.target.path);\n        if (channelDef.target.node !== undefined) channel.setTargetNode(context.nodes[channelDef.target.node]);\n        if (channelDef.extras) channel.setExtras(channelDef.extras);\n        animation.addChannel(channel);\n      });\n      return animation;\n    });\n    /** Scenes. */\n    const sceneDefs = json.scenes || [];\n    document.getRoot().listExtensionsUsed().filter(extension => extension.prereadTypes.includes(PropertyType.SCENE)).forEach(extension => extension.preread(context, PropertyType.SCENE));\n    context.scenes = sceneDefs.map(sceneDef => {\n      const scene = document.createScene(sceneDef.name);\n      if (sceneDef.extras) scene.setExtras(sceneDef.extras);\n      const children = sceneDef.nodes || [];\n      children.map(nodeIndex => context.nodes[nodeIndex]).forEach(node => scene.addChild(node));\n      return scene;\n    });\n    if (json.scene !== undefined) {\n      document.getRoot().setDefaultScene(context.scenes[json.scene]);\n    }\n    /** Extensions (2/2). */\n    document.getRoot().listExtensionsUsed().forEach(extension => extension.read(context));\n    /** Post-processing. */\n    // Consider an accessor to be 'sparse' if it (A) includes sparse value overrides,\n    // or (B) does not define .bufferView _and_ no extension provides that data. Case\n    // (B) represents a zero-filled accessor.\n    accessorDefs.forEach((accessorDef, index) => {\n      const accessor = context.accessors[index];\n      const hasSparseValues = !!accessorDef.sparse;\n      const isZeroFilled = !accessorDef.bufferView && !accessor.getArray();\n      if (hasSparseValues || isZeroFilled) {\n        accessor.setSparse(true).setArray(getSparseArray(accessorDef, context));\n      }\n    });\n    return document;\n  }\n  static validate(jsonDoc, options) {\n    const json = jsonDoc.json;\n    if (json.asset.version !== '2.0') {\n      throw new Error(`Unsupported glTF version, \"${json.asset.version}\".`);\n    }\n    if (json.extensionsRequired) {\n      for (const extensionName of json.extensionsRequired) {\n        if (!options.extensions.find(extension => extension.EXTENSION_NAME === extensionName)) {\n          throw new Error(`Missing required extension, \"${extensionName}\".`);\n        }\n      }\n    }\n    if (json.extensionsUsed) {\n      for (const extensionName of json.extensionsUsed) {\n        if (!options.extensions.find(extension => extension.EXTENSION_NAME === extensionName)) {\n          options.logger.warn(`Missing optional extension, \"${extensionName}\".`);\n        }\n      }\n    }\n  }\n}\n/**\n * Returns the contents of an interleaved accessor, as a typed array.\n * @internal\n */\nfunction getInterleavedArray(accessorDef, context) {\n  const jsonDoc = context.jsonDoc;\n  const bufferView = context.bufferViews[accessorDef.bufferView];\n  const bufferViewDef = jsonDoc.json.bufferViews[accessorDef.bufferView];\n  const TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n  const elementSize = Accessor.getElementSize(accessorDef.type);\n  const componentSize = TypedArray.BYTES_PER_ELEMENT;\n  const accessorByteOffset = accessorDef.byteOffset || 0;\n  const array = new TypedArray(accessorDef.count * elementSize);\n  const view = new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n  const byteStride = bufferViewDef.byteStride;\n  for (let i = 0; i < accessorDef.count; i++) {\n    for (let j = 0; j < elementSize; j++) {\n      const byteOffset = accessorByteOffset + i * byteStride + j * componentSize;\n      let value;\n      switch (accessorDef.componentType) {\n        case Accessor.ComponentType.FLOAT:\n          value = view.getFloat32(byteOffset, true);\n          break;\n        case Accessor.ComponentType.UNSIGNED_INT:\n          value = view.getUint32(byteOffset, true);\n          break;\n        case Accessor.ComponentType.UNSIGNED_SHORT:\n          value = view.getUint16(byteOffset, true);\n          break;\n        case Accessor.ComponentType.UNSIGNED_BYTE:\n          value = view.getUint8(byteOffset);\n          break;\n        case Accessor.ComponentType.SHORT:\n          value = view.getInt16(byteOffset, true);\n          break;\n        case Accessor.ComponentType.BYTE:\n          value = view.getInt8(byteOffset);\n          break;\n        default:\n          throw new Error(`Unexpected componentType \"${accessorDef.componentType}\".`);\n      }\n      array[i * elementSize + j] = value;\n    }\n  }\n  return array;\n}\n/**\n * Returns the contents of an accessor, as a typed array.\n * @internal\n */\nfunction getAccessorArray(accessorDef, context) {\n  const jsonDoc = context.jsonDoc;\n  const bufferView = context.bufferViews[accessorDef.bufferView];\n  const bufferViewDef = jsonDoc.json.bufferViews[accessorDef.bufferView];\n  const TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n  const elementSize = Accessor.getElementSize(accessorDef.type);\n  const componentSize = TypedArray.BYTES_PER_ELEMENT;\n  const elementStride = elementSize * componentSize;\n  // Interleaved buffer view.\n  if (bufferViewDef.byteStride !== undefined && bufferViewDef.byteStride !== elementStride) {\n    return getInterleavedArray(accessorDef, context);\n  }\n  const byteOffset = bufferView.byteOffset + (accessorDef.byteOffset || 0);\n  const byteLength = accessorDef.count * elementSize * componentSize;\n  // Might optimize this to avoid deep copy later, but it's useful for now and not a known\n  // bottleneck. See https://github.com/donmccurdy/glTF-Transform/issues/256.\n  return new TypedArray(bufferView.buffer.slice(byteOffset, byteOffset + byteLength));\n}\n/**\n * Returns the contents of a sparse accessor, as a typed array.\n * @internal\n */\nfunction getSparseArray(accessorDef, context) {\n  const TypedArray = ComponentTypeToTypedArray[accessorDef.componentType];\n  const elementSize = Accessor.getElementSize(accessorDef.type);\n  let array;\n  if (accessorDef.bufferView !== undefined) {\n    array = getAccessorArray(accessorDef, context);\n  } else {\n    array = new TypedArray(accessorDef.count * elementSize);\n  }\n  const sparseDef = accessorDef.sparse;\n  if (!sparseDef) return array; // Zero-filled accessor.\n  const count = sparseDef.count;\n  const indicesDef = _extends({}, accessorDef, sparseDef.indices, {\n    count,\n    type: 'SCALAR'\n  });\n  const valuesDef = _extends({}, accessorDef, sparseDef.values, {\n    count\n  });\n  const indices = getAccessorArray(indicesDef, context);\n  const values = getAccessorArray(valuesDef, context);\n  // Override indices given in the sparse data.\n  for (let i = 0; i < indicesDef.count; i++) {\n    for (let j = 0; j < elementSize; j++) {\n      array[indices[i] * elementSize + j] = values[i * elementSize + j];\n    }\n  }\n  return array;\n}\n\nvar BufferViewTarget;\n(function (BufferViewTarget) {\n  BufferViewTarget[BufferViewTarget[\"ARRAY_BUFFER\"] = 34962] = \"ARRAY_BUFFER\";\n  BufferViewTarget[BufferViewTarget[\"ELEMENT_ARRAY_BUFFER\"] = 34963] = \"ELEMENT_ARRAY_BUFFER\";\n})(BufferViewTarget || (BufferViewTarget = {}));\n/**\n * Model class providing writing state to a {@link GLTFWriter} and its {@link Extension}\n * implementations.\n *\n * @hidden\n */\nclass WriterContext {\n  constructor(_doc, jsonDoc, options) {\n    this._doc = void 0;\n    this.jsonDoc = void 0;\n    this.options = void 0;\n    this.accessorIndexMap = new Map();\n    this.animationIndexMap = new Map();\n    this.bufferIndexMap = new Map();\n    this.cameraIndexMap = new Map();\n    this.skinIndexMap = new Map();\n    this.materialIndexMap = new Map();\n    this.meshIndexMap = new Map();\n    this.nodeIndexMap = new Map();\n    this.imageIndexMap = new Map();\n    this.textureDefIndexMap = new Map();\n    // textureDef JSON -> index\n    this.textureInfoDefMap = new Map();\n    this.samplerDefIndexMap = new Map();\n    // samplerDef JSON -> index\n    this.sceneIndexMap = new Map();\n    this.imageBufferViews = [];\n    this.otherBufferViews = new Map();\n    this.otherBufferViewsIndexMap = new Map();\n    this.extensionData = {};\n    this.bufferURIGenerator = void 0;\n    this.imageURIGenerator = void 0;\n    this.logger = void 0;\n    this._accessorUsageMap = new Map();\n    this.accessorUsageGroupedByParent = new Set(['ARRAY_BUFFER']);\n    this.accessorParents = new Map();\n    this._doc = _doc;\n    this.jsonDoc = jsonDoc;\n    this.options = options;\n    const root = _doc.getRoot();\n    const numBuffers = root.listBuffers().length;\n    const numImages = root.listTextures().length;\n    this.bufferURIGenerator = new UniqueURIGenerator(numBuffers > 1, () => options.basename || 'buffer');\n    this.imageURIGenerator = new UniqueURIGenerator(numImages > 1, texture => getSlot(_doc, texture) || options.basename || 'texture');\n    this.logger = _doc.getLogger();\n  }\n  /**\n   * Creates a TextureInfo definition, and any Texture or Sampler definitions it requires. If\n   * possible, Texture and Sampler definitions are shared.\n   */\n  createTextureInfoDef(texture, textureInfo) {\n    const samplerDef = {\n      magFilter: textureInfo.getMagFilter() || undefined,\n      minFilter: textureInfo.getMinFilter() || undefined,\n      wrapS: textureInfo.getWrapS(),\n      wrapT: textureInfo.getWrapT()\n    };\n    const samplerKey = JSON.stringify(samplerDef);\n    if (!this.samplerDefIndexMap.has(samplerKey)) {\n      this.samplerDefIndexMap.set(samplerKey, this.jsonDoc.json.samplers.length);\n      this.jsonDoc.json.samplers.push(samplerDef);\n    }\n    const textureDef = {\n      source: this.imageIndexMap.get(texture),\n      sampler: this.samplerDefIndexMap.get(samplerKey)\n    };\n    const textureKey = JSON.stringify(textureDef);\n    if (!this.textureDefIndexMap.has(textureKey)) {\n      this.textureDefIndexMap.set(textureKey, this.jsonDoc.json.textures.length);\n      this.jsonDoc.json.textures.push(textureDef);\n    }\n    const textureInfoDef = {\n      index: this.textureDefIndexMap.get(textureKey)\n    };\n    if (textureInfo.getTexCoord() !== 0) {\n      textureInfoDef.texCoord = textureInfo.getTexCoord();\n    }\n    if (Object.keys(textureInfo.getExtras()).length > 0) {\n      textureInfoDef.extras = textureInfo.getExtras();\n    }\n    this.textureInfoDefMap.set(textureInfo, textureInfoDef);\n    return textureInfoDef;\n  }\n  createPropertyDef(property) {\n    const def = {};\n    if (property.getName()) {\n      def.name = property.getName();\n    }\n    if (Object.keys(property.getExtras()).length > 0) {\n      def.extras = property.getExtras();\n    }\n    return def;\n  }\n  createAccessorDef(accessor) {\n    const accessorDef = this.createPropertyDef(accessor);\n    accessorDef.type = accessor.getType();\n    accessorDef.componentType = accessor.getComponentType();\n    accessorDef.count = accessor.getCount();\n    const needsBounds = this._doc.getGraph().listParentEdges(accessor).some(edge => edge.getName() === 'attributes' && edge.getAttributes().key === 'POSITION' || edge.getName() === 'input');\n    if (needsBounds) {\n      accessorDef.max = accessor.getMax([]).map(Math.fround);\n      accessorDef.min = accessor.getMin([]).map(Math.fround);\n    }\n    if (accessor.getNormalized()) {\n      accessorDef.normalized = accessor.getNormalized();\n    }\n    return accessorDef;\n  }\n  createImageData(imageDef, data, texture) {\n    if (this.options.format === Format.GLB) {\n      this.imageBufferViews.push(data);\n      imageDef.bufferView = this.jsonDoc.json.bufferViews.length;\n      this.jsonDoc.json.bufferViews.push({\n        buffer: 0,\n        byteOffset: -1,\n        // determined while iterating buffers, in Writer.ts.\n        byteLength: data.byteLength\n      });\n    } else {\n      const extension = ImageUtils.mimeTypeToExtension(texture.getMimeType());\n      imageDef.uri = this.imageURIGenerator.createURI(texture, extension);\n      this.assignResourceURI(imageDef.uri, data, false);\n    }\n  }\n  assignResourceURI(uri, data, throwOnConflict) {\n    const resources = this.jsonDoc.resources;\n    // https://github.com/KhronosGroup/glTF/issues/2446\n    if (!(uri in resources)) {\n      resources[uri] = data;\n      return;\n    }\n    if (data === resources[uri]) {\n      this.logger.warn(`Duplicate resource URI, \"${uri}\".`);\n      return;\n    }\n    const conflictMessage = `Resource URI \"${uri}\" already assigned to different data.`;\n    if (!throwOnConflict) {\n      this.logger.warn(conflictMessage);\n      return;\n    }\n    throw new Error(conflictMessage);\n  }\n  /**\n   * Returns implicit usage type of the given accessor, related to grouping accessors into\n   * buffer views. Usage is a superset of buffer view target, including ARRAY_BUFFER and\n   * ELEMENT_ARRAY_BUFFER, but also usages that do not match GPU buffer view targets such as\n   * IBMs. Additional usages are defined by extensions, like `EXT_mesh_gpu_instancing`.\n   */\n  getAccessorUsage(accessor) {\n    const cachedUsage = this._accessorUsageMap.get(accessor);\n    if (cachedUsage) return cachedUsage;\n    if (accessor.getSparse()) return BufferViewUsage$1.SPARSE;\n    for (const edge of this._doc.getGraph().listParentEdges(accessor)) {\n      const {\n        usage\n      } = edge.getAttributes();\n      if (usage) return usage;\n      if (edge.getParent().propertyType !== PropertyType.ROOT) {\n        this.logger.warn(`Missing attribute \".usage\" on edge, \"${edge.getName()}\".`);\n      }\n    }\n    // Group accessors with no specified usage into a miscellaneous buffer view.\n    return BufferViewUsage$1.OTHER;\n  }\n  /**\n   * Sets usage for the given accessor. Some accessor types must be grouped into\n   * buffer views with like accessors. This includes the specified buffer view \"targets\", but\n   * also implicit usage like IBMs or instanced mesh attributes. If unspecified, an accessor\n   * will be grouped with other accessors of unspecified usage.\n   */\n  addAccessorToUsageGroup(accessor, usage) {\n    const prevUsage = this._accessorUsageMap.get(accessor);\n    if (prevUsage && prevUsage !== usage) {\n      throw new Error(`Accessor with usage \"${prevUsage}\" cannot be reused as \"${usage}\".`);\n    }\n    this._accessorUsageMap.set(accessor, usage);\n    return this;\n  }\n}\n/** Explicit buffer view targets defined by glTF specification. */\nWriterContext.BufferViewTarget = BufferViewTarget;\n/**\n * Implicit buffer view usage, not required by glTF specification, but nonetheless useful for\n * proper grouping of accessors into buffer views. Additional usages are defined by extensions,\n * like `EXT_mesh_gpu_instancing`.\n */\nWriterContext.BufferViewUsage = BufferViewUsage$1;\n/** Maps usage type to buffer view target. Usages not mapped have undefined targets. */\nWriterContext.USAGE_TO_TARGET = {\n  [BufferViewUsage$1.ARRAY_BUFFER]: BufferViewTarget.ARRAY_BUFFER,\n  [BufferViewUsage$1.ELEMENT_ARRAY_BUFFER]: BufferViewTarget.ELEMENT_ARRAY_BUFFER\n};\nclass UniqueURIGenerator {\n  constructor(multiple, basename) {\n    this.multiple = void 0;\n    this.basename = void 0;\n    this.counter = {};\n    this.multiple = multiple;\n    this.basename = basename;\n  }\n  createURI(object, extension) {\n    if (object.getURI()) {\n      return object.getURI();\n    } else if (!this.multiple) {\n      return `${this.basename(object)}.${extension}`;\n    } else {\n      const basename = this.basename(object);\n      this.counter[basename] = this.counter[basename] || 1;\n      return `${basename}_${this.counter[basename]++}.${extension}`;\n    }\n  }\n}\n/** Returns the first slot (by name) to which the texture is assigned. */\nfunction getSlot(document, texture) {\n  const edge = document.getGraph().listParentEdges(texture).find(edge => edge.getParent() !== document.getRoot());\n  return edge ? edge.getName().replace(/texture$/i, '') : '';\n}\n\nconst {\n  BufferViewUsage\n} = WriterContext;\nconst {\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  UNSIGNED_BYTE\n} = Accessor.ComponentType;\nconst SUPPORTED_PREWRITE_TYPES = new Set([PropertyType.ACCESSOR, PropertyType.BUFFER, PropertyType.MATERIAL, PropertyType.MESH]);\n/**\n * @internal\n * @hidden\n */\nclass GLTFWriter {\n  static write(doc, options) {\n    const graph = doc.getGraph();\n    const root = doc.getRoot();\n    const json = {\n      asset: _extends({\n        generator: `glTF-Transform ${VERSION}`\n      }, root.getAsset()),\n      extras: _extends({}, root.getExtras())\n    };\n    const jsonDoc = {\n      json,\n      resources: {}\n    };\n    const context = new WriterContext(doc, jsonDoc, options);\n    const logger = options.logger || Logger.DEFAULT_INSTANCE;\n    /* Extensions (1/2). */\n    // Extensions present on the Document are not written unless they are also registered with\n    // the I/O class. This ensures that setup in `extension.register()` is completed, and\n    // allows a Document to be written with specific extensions disabled.\n    const extensionsRegistered = new Set(options.extensions.map(ext => ext.EXTENSION_NAME));\n    const extensionsUsed = doc.getRoot().listExtensionsUsed().filter(ext => extensionsRegistered.has(ext.extensionName)).sort((a, b) => a.extensionName > b.extensionName ? 1 : -1);\n    const extensionsRequired = doc.getRoot().listExtensionsRequired().filter(ext => extensionsRegistered.has(ext.extensionName)).sort((a, b) => a.extensionName > b.extensionName ? 1 : -1);\n    if (extensionsUsed.length < doc.getRoot().listExtensionsUsed().length) {\n      logger.warn('Some extensions were not registered for I/O, and will not be written.');\n    }\n    for (const extension of extensionsUsed) {\n      // Warn on unsupported prewrite hooks.\n      const unsupportedHooks = extension.prewriteTypes.filter(type => !SUPPORTED_PREWRITE_TYPES.has(type));\n      if (unsupportedHooks.length) {\n        logger.warn(`Prewrite hooks for some types (${unsupportedHooks.join()}), requested by extension ` + `${extension.extensionName}, are unsupported. Please file an issue or a PR.`);\n      }\n      // Install dependencies.\n      for (const key of extension.writeDependencies) {\n        extension.install(key, options.dependencies[key]);\n      }\n    }\n    /**\n     * Pack a group of accessors into a sequential buffer view. Appends accessor and buffer view\n     * definitions to the root JSON lists.\n     *\n     * @param accessors Accessors to be included.\n     * @param bufferIndex Buffer to write to.\n     * @param bufferByteOffset Current offset into the buffer, accounting for other buffer views.\n     * @param bufferViewTarget (Optional) target use of the buffer view.\n     */\n    function concatAccessors(accessors, bufferIndex, bufferByteOffset, bufferViewTarget) {\n      const buffers = [];\n      let byteLength = 0;\n      // Create accessor definitions, determining size of final buffer view.\n      for (const accessor of accessors) {\n        const accessorDef = context.createAccessorDef(accessor);\n        accessorDef.bufferView = json.bufferViews.length;\n        const accessorArray = accessor.getArray();\n        const data = BufferUtils.pad(BufferUtils.toView(accessorArray));\n        accessorDef.byteOffset = byteLength;\n        byteLength += data.byteLength;\n        buffers.push(data);\n        context.accessorIndexMap.set(accessor, json.accessors.length);\n        json.accessors.push(accessorDef);\n      }\n      // Create buffer view definition.\n      const bufferViewData = BufferUtils.concat(buffers);\n      const bufferViewDef = {\n        buffer: bufferIndex,\n        byteOffset: bufferByteOffset,\n        byteLength: bufferViewData.byteLength\n      };\n      if (bufferViewTarget) bufferViewDef.target = bufferViewTarget;\n      json.bufferViews.push(bufferViewDef);\n      return {\n        buffers,\n        byteLength\n      };\n    }\n    /**\n     * Pack a group of accessors into an interleaved buffer view. Appends accessor and buffer\n     * view definitions to the root JSON lists. Buffer view target is implicitly attribute data.\n     *\n     * References:\n     * - [Apple • Best Practices for Working with Vertex Data](https://developer.apple.com/library/archive/documentation/3DDrawing/Conceptual/OpenGLES_ProgrammingGuide/TechniquesforWorkingwithVertexData/TechniquesforWorkingwithVertexData.html)\n     * - [Khronos • Vertex Specification Best Practices](https://www.khronos.org/opengl/wiki/Vertex_Specification_Best_Practices)\n     *\n     * @param accessors Accessors to be included.\n     * @param bufferIndex Buffer to write to.\n     * @param bufferByteOffset Offset into the buffer, accounting for other buffer views.\n     */\n    function interleaveAccessors(accessors, bufferIndex, bufferByteOffset) {\n      const vertexCount = accessors[0].getCount();\n      let byteStride = 0;\n      // Create accessor definitions, determining size and stride of final buffer view.\n      for (const accessor of accessors) {\n        const accessorDef = context.createAccessorDef(accessor);\n        accessorDef.bufferView = json.bufferViews.length;\n        accessorDef.byteOffset = byteStride;\n        const elementSize = accessor.getElementSize();\n        const componentSize = accessor.getComponentSize();\n        byteStride += BufferUtils.padNumber(elementSize * componentSize);\n        context.accessorIndexMap.set(accessor, json.accessors.length);\n        json.accessors.push(accessorDef);\n      }\n      // Allocate interleaved buffer view.\n      const byteLength = vertexCount * byteStride;\n      const buffer = new ArrayBuffer(byteLength);\n      const view = new DataView(buffer);\n      // Write interleaved accessor data to the buffer view.\n      for (let i = 0; i < vertexCount; i++) {\n        let vertexByteOffset = 0;\n        for (const accessor of accessors) {\n          const elementSize = accessor.getElementSize();\n          const componentSize = accessor.getComponentSize();\n          const componentType = accessor.getComponentType();\n          const array = accessor.getArray();\n          for (let j = 0; j < elementSize; j++) {\n            const viewByteOffset = i * byteStride + vertexByteOffset + j * componentSize;\n            const value = array[i * elementSize + j];\n            switch (componentType) {\n              case Accessor.ComponentType.FLOAT:\n                view.setFloat32(viewByteOffset, value, true);\n                break;\n              case Accessor.ComponentType.BYTE:\n                view.setInt8(viewByteOffset, value);\n                break;\n              case Accessor.ComponentType.SHORT:\n                view.setInt16(viewByteOffset, value, true);\n                break;\n              case Accessor.ComponentType.UNSIGNED_BYTE:\n                view.setUint8(viewByteOffset, value);\n                break;\n              case Accessor.ComponentType.UNSIGNED_SHORT:\n                view.setUint16(viewByteOffset, value, true);\n                break;\n              case Accessor.ComponentType.UNSIGNED_INT:\n                view.setUint32(viewByteOffset, value, true);\n                break;\n              default:\n                throw new Error('Unexpected component type: ' + componentType);\n            }\n          }\n          vertexByteOffset += BufferUtils.padNumber(elementSize * componentSize);\n        }\n      }\n      // Create buffer view definition.\n      const bufferViewDef = {\n        buffer: bufferIndex,\n        byteOffset: bufferByteOffset,\n        byteLength: byteLength,\n        byteStride: byteStride,\n        target: WriterContext.BufferViewTarget.ARRAY_BUFFER\n      };\n      json.bufferViews.push(bufferViewDef);\n      return {\n        byteLength,\n        buffers: [new Uint8Array(buffer)]\n      };\n    }\n    /**\n     * Pack a group of sparse accessors. Appends accessor and buffer view\n     * definitions to the root JSON lists.\n     *\n     * @param accessors Accessors to be included.\n     * @param bufferIndex Buffer to write to.\n     * @param bufferByteOffset Current offset into the buffer, accounting for other buffer views.\n     */\n    function concatSparseAccessors(accessors, bufferIndex, bufferByteOffset) {\n      const buffers = [];\n      let byteLength = 0;\n      const sparseData = new Map();\n      let maxIndex = -Infinity;\n      let needSparseWarning = false;\n      // (1) Write accessor definitions, gathering indices and values.\n      for (const accessor of accessors) {\n        const accessorDef = context.createAccessorDef(accessor);\n        json.accessors.push(accessorDef);\n        context.accessorIndexMap.set(accessor, json.accessors.length - 1);\n        const indices = [];\n        const values = [];\n        const el = [];\n        const base = new Array(accessor.getElementSize()).fill(0);\n        for (let i = 0, il = accessor.getCount(); i < il; i++) {\n          accessor.getElement(i, el);\n          if (MathUtils.eq(el, base, 0)) continue;\n          maxIndex = Math.max(i, maxIndex);\n          indices.push(i);\n          for (let j = 0; j < el.length; j++) values.push(el[j]);\n        }\n        const count = indices.length;\n        const data = {\n          accessorDef,\n          count\n        };\n        sparseData.set(accessor, data);\n        if (count === 0) continue;\n        if (count > accessor.getCount() / 2) {\n          needSparseWarning = true;\n        }\n        const ValueArray = ComponentTypeToTypedArray[accessor.getComponentType()];\n        data.indices = indices;\n        data.values = new ValueArray(values);\n      }\n      // (2) Early exit if all sparse accessors are just zero-filled arrays.\n      if (!Number.isFinite(maxIndex)) {\n        return {\n          buffers,\n          byteLength\n        };\n      }\n      if (needSparseWarning) {\n        logger.warn(`Some sparse accessors have >50% non-zero elements, which may increase file size.`);\n      }\n      // (3) Write index buffer view.\n      const IndexArray = maxIndex < 255 ? Uint8Array : maxIndex < 65535 ? Uint16Array : Uint32Array;\n      const IndexComponentType = maxIndex < 255 ? UNSIGNED_BYTE : maxIndex < 65535 ? UNSIGNED_SHORT : UNSIGNED_INT;\n      const indicesBufferViewDef = {\n        buffer: bufferIndex,\n        byteOffset: bufferByteOffset + byteLength,\n        byteLength: 0\n      };\n      for (const accessor of accessors) {\n        const data = sparseData.get(accessor);\n        if (data.count === 0) continue;\n        data.indicesByteOffset = indicesBufferViewDef.byteLength;\n        const buffer = BufferUtils.pad(BufferUtils.toView(new IndexArray(data.indices)));\n        buffers.push(buffer);\n        byteLength += buffer.byteLength;\n        indicesBufferViewDef.byteLength += buffer.byteLength;\n      }\n      json.bufferViews.push(indicesBufferViewDef);\n      const indicesBufferViewIndex = json.bufferViews.length - 1;\n      // (4) Write value buffer view.\n      const valuesBufferViewDef = {\n        buffer: bufferIndex,\n        byteOffset: bufferByteOffset + byteLength,\n        byteLength: 0\n      };\n      for (const accessor of accessors) {\n        const data = sparseData.get(accessor);\n        if (data.count === 0) continue;\n        data.valuesByteOffset = valuesBufferViewDef.byteLength;\n        const buffer = BufferUtils.pad(BufferUtils.toView(data.values));\n        buffers.push(buffer);\n        byteLength += buffer.byteLength;\n        valuesBufferViewDef.byteLength += buffer.byteLength;\n      }\n      json.bufferViews.push(valuesBufferViewDef);\n      const valuesBufferViewIndex = json.bufferViews.length - 1;\n      // (5) Write accessor sparse entries.\n      for (const accessor of accessors) {\n        const data = sparseData.get(accessor);\n        if (data.count === 0) continue;\n        data.accessorDef.sparse = {\n          count: data.count,\n          indices: {\n            bufferView: indicesBufferViewIndex,\n            byteOffset: data.indicesByteOffset,\n            componentType: IndexComponentType\n          },\n          values: {\n            bufferView: valuesBufferViewIndex,\n            byteOffset: data.valuesByteOffset\n          }\n        };\n      }\n      return {\n        buffers,\n        byteLength\n      };\n    }\n    json.accessors = [];\n    json.bufferViews = [];\n    /* Textures. */\n    // glTF Transform's \"Texture\" properties correspond 1:1 with glTF \"Image\" properties, and\n    // with image files. The glTF file may contain more one texture per image, where images\n    // are reused with different sampler properties.\n    json.samplers = [];\n    json.textures = [];\n    json.images = root.listTextures().map((texture, textureIndex) => {\n      const imageDef = context.createPropertyDef(texture);\n      if (texture.getMimeType()) {\n        imageDef.mimeType = texture.getMimeType();\n      }\n      const image = texture.getImage();\n      if (image) {\n        context.createImageData(imageDef, image, texture);\n      }\n      context.imageIndexMap.set(texture, textureIndex);\n      return imageDef;\n    });\n    /* Accessors. */\n    extensionsUsed.filter(extension => extension.prewriteTypes.includes(PropertyType.ACCESSOR)).forEach(extension => extension.prewrite(context, PropertyType.ACCESSOR));\n    root.listAccessors().forEach(accessor => {\n      // Attributes are grouped and interleaved in one buffer view per mesh primitive.\n      // Indices for all primitives are grouped into a single buffer view. IBMs are grouped\n      // into a single buffer view. Other usage (if specified by extensions) also goes into\n      // a dedicated buffer view. Everything else goes into a miscellaneous buffer view.\n      // Certain accessor usage should group data into buffer views by the accessor parent.\n      // The `accessorParents` map uses the first parent of each accessor for this purpose.\n      const groupByParent = context.accessorUsageGroupedByParent;\n      const accessorParents = context.accessorParents;\n      // Skip if already written by an extension.\n      if (context.accessorIndexMap.has(accessor)) return;\n      // Assign usage for core accessor usage types (explicit targets and implicit usage).\n      const usage = context.getAccessorUsage(accessor);\n      context.addAccessorToUsageGroup(accessor, usage);\n      // For accessor usage that requires grouping by parent (vertex and instance\n      // attributes) organize buffer views accordingly.\n      if (groupByParent.has(usage)) {\n        const parent = graph.listParents(accessor).find(parent => parent.propertyType !== PropertyType.ROOT);\n        accessorParents.set(accessor, parent);\n      }\n    });\n    /* Buffers, buffer views. */\n    extensionsUsed.filter(extension => extension.prewriteTypes.includes(PropertyType.BUFFER)).forEach(extension => extension.prewrite(context, PropertyType.BUFFER));\n    const needsBuffer = root.listAccessors().length > 0 || context.otherBufferViews.size > 0 || root.listTextures().length > 0 && options.format === Format.GLB;\n    if (needsBuffer && root.listBuffers().length === 0) {\n      throw new Error('Buffer required for Document resources, but none was found.');\n    }\n    json.buffers = [];\n    root.listBuffers().forEach((buffer, index) => {\n      const bufferDef = context.createPropertyDef(buffer);\n      const groupByParent = context.accessorUsageGroupedByParent;\n      const accessors = buffer.listParents().filter(property => property instanceof Accessor);\n      const uniqueParents = new Set(accessors.map(accessor => context.accessorParents.get(accessor)));\n      const parentToIndex = new Map(Array.from(uniqueParents).map((parent, index) => [parent, index]));\n      const accessorGroups = {};\n      for (const accessor of accessors) {\n        var _key;\n        // Skip if already written by an extension.\n        if (context.accessorIndexMap.has(accessor)) continue;\n        const usage = context.getAccessorUsage(accessor);\n        let key = usage;\n        if (groupByParent.has(usage)) {\n          const parent = context.accessorParents.get(accessor);\n          key += `:${parentToIndex.get(parent)}`;\n        }\n        accessorGroups[_key = key] || (accessorGroups[_key] = {\n          usage,\n          accessors: []\n        });\n        accessorGroups[key].accessors.push(accessor);\n      }\n      // Write accessor groups to buffer views.\n      const buffers = [];\n      const bufferIndex = json.buffers.length;\n      let bufferByteLength = 0;\n      for (const {\n        usage,\n        accessors: groupAccessors\n      } of Object.values(accessorGroups)) {\n        if (usage === BufferViewUsage.ARRAY_BUFFER && options.vertexLayout === VertexLayout.INTERLEAVED) {\n          // (1) Interleaved vertex attributes.\n          const result = interleaveAccessors(groupAccessors, bufferIndex, bufferByteLength);\n          bufferByteLength += result.byteLength;\n          for (const _buffer of result.buffers) {\n            buffers.push(_buffer);\n          }\n        } else if (usage === BufferViewUsage.ARRAY_BUFFER) {\n          // (2) Non-interleaved vertex attributes.\n          for (const accessor of groupAccessors) {\n            // We 'interleave' a single accessor because the method pads to\n            // 4-byte boundaries, which concatAccessors() does not.\n            const result = interleaveAccessors([accessor], bufferIndex, bufferByteLength);\n            bufferByteLength += result.byteLength;\n            for (const _buffer2 of result.buffers) {\n              buffers.push(_buffer2);\n            }\n          }\n        } else if (usage === BufferViewUsage.SPARSE) {\n          // (3) Sparse accessors.\n          const result = concatSparseAccessors(groupAccessors, bufferIndex, bufferByteLength);\n          bufferByteLength += result.byteLength;\n          for (const _buffer3 of result.buffers) {\n            buffers.push(_buffer3);\n          }\n        } else if (usage === BufferViewUsage.ELEMENT_ARRAY_BUFFER) {\n          // (4) Indices.\n          const target = WriterContext.BufferViewTarget.ELEMENT_ARRAY_BUFFER;\n          const result = concatAccessors(groupAccessors, bufferIndex, bufferByteLength, target);\n          bufferByteLength += result.byteLength;\n          for (const _buffer4 of result.buffers) {\n            buffers.push(_buffer4);\n          }\n        } else {\n          // (5) Other.\n          const result = concatAccessors(groupAccessors, bufferIndex, bufferByteLength);\n          bufferByteLength += result.byteLength;\n          for (const _buffer5 of result.buffers) {\n            buffers.push(_buffer5);\n          }\n        }\n      }\n      // We only support embedded images in GLB, where the embedded buffer must be the first.\n      // Additional buffers are currently left empty (see EXT_meshopt_compression fallback).\n      if (context.imageBufferViews.length && index === 0) {\n        for (let i = 0; i < context.imageBufferViews.length; i++) {\n          json.bufferViews[json.images[i].bufferView].byteOffset = bufferByteLength;\n          bufferByteLength += context.imageBufferViews[i].byteLength;\n          buffers.push(context.imageBufferViews[i]);\n          if (bufferByteLength % 8) {\n            // See: https://github.com/KhronosGroup/glTF/issues/1935\n            const imagePadding = 8 - bufferByteLength % 8;\n            bufferByteLength += imagePadding;\n            buffers.push(new Uint8Array(imagePadding));\n          }\n        }\n      }\n      if (context.otherBufferViews.has(buffer)) {\n        for (const data of context.otherBufferViews.get(buffer)) {\n          json.bufferViews.push({\n            buffer: bufferIndex,\n            byteOffset: bufferByteLength,\n            byteLength: data.byteLength\n          });\n          context.otherBufferViewsIndexMap.set(data, json.bufferViews.length - 1);\n          bufferByteLength += data.byteLength;\n          buffers.push(data);\n        }\n      }\n      if (bufferByteLength) {\n        // Assign buffer URI.\n        let uri;\n        if (options.format === Format.GLB) {\n          uri = GLB_BUFFER;\n        } else {\n          uri = context.bufferURIGenerator.createURI(buffer, 'bin');\n          bufferDef.uri = uri;\n        }\n        // Write buffer views to buffer.\n        bufferDef.byteLength = bufferByteLength;\n        context.assignResourceURI(uri, BufferUtils.concat(buffers), true);\n      }\n      json.buffers.push(bufferDef);\n      context.bufferIndexMap.set(buffer, index);\n    });\n    if (root.listAccessors().find(a => !a.getBuffer())) {\n      logger.warn('Skipped writing one or more Accessors: no Buffer assigned.');\n    }\n    /* Materials. */\n    extensionsUsed.filter(extension => extension.prewriteTypes.includes(PropertyType.MATERIAL)).forEach(extension => extension.prewrite(context, PropertyType.MATERIAL));\n    json.materials = root.listMaterials().map((material, index) => {\n      const materialDef = context.createPropertyDef(material);\n      // Program state & blending.\n      if (material.getAlphaMode() !== Material.AlphaMode.OPAQUE) {\n        materialDef.alphaMode = material.getAlphaMode();\n      }\n      if (material.getAlphaMode() === Material.AlphaMode.MASK) {\n        materialDef.alphaCutoff = material.getAlphaCutoff();\n      }\n      if (material.getDoubleSided()) materialDef.doubleSided = true;\n      // Factors.\n      materialDef.pbrMetallicRoughness = {};\n      if (!MathUtils.eq(material.getBaseColorFactor(), [1, 1, 1, 1])) {\n        materialDef.pbrMetallicRoughness.baseColorFactor = material.getBaseColorFactor();\n      }\n      if (!MathUtils.eq(material.getEmissiveFactor(), [0, 0, 0])) {\n        materialDef.emissiveFactor = material.getEmissiveFactor();\n      }\n      if (material.getRoughnessFactor() !== 1) {\n        materialDef.pbrMetallicRoughness.roughnessFactor = material.getRoughnessFactor();\n      }\n      if (material.getMetallicFactor() !== 1) {\n        materialDef.pbrMetallicRoughness.metallicFactor = material.getMetallicFactor();\n      }\n      // Textures.\n      if (material.getBaseColorTexture()) {\n        const texture = material.getBaseColorTexture();\n        const textureInfo = material.getBaseColorTextureInfo();\n        materialDef.pbrMetallicRoughness.baseColorTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n      if (material.getEmissiveTexture()) {\n        const texture = material.getEmissiveTexture();\n        const textureInfo = material.getEmissiveTextureInfo();\n        materialDef.emissiveTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n      if (material.getNormalTexture()) {\n        const texture = material.getNormalTexture();\n        const textureInfo = material.getNormalTextureInfo();\n        const textureInfoDef = context.createTextureInfoDef(texture, textureInfo);\n        if (material.getNormalScale() !== 1) {\n          textureInfoDef.scale = material.getNormalScale();\n        }\n        materialDef.normalTexture = textureInfoDef;\n      }\n      if (material.getOcclusionTexture()) {\n        const texture = material.getOcclusionTexture();\n        const textureInfo = material.getOcclusionTextureInfo();\n        const textureInfoDef = context.createTextureInfoDef(texture, textureInfo);\n        if (material.getOcclusionStrength() !== 1) {\n          textureInfoDef.strength = material.getOcclusionStrength();\n        }\n        materialDef.occlusionTexture = textureInfoDef;\n      }\n      if (material.getMetallicRoughnessTexture()) {\n        const texture = material.getMetallicRoughnessTexture();\n        const textureInfo = material.getMetallicRoughnessTextureInfo();\n        materialDef.pbrMetallicRoughness.metallicRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n      context.materialIndexMap.set(material, index);\n      return materialDef;\n    });\n    /* Meshes. */\n    extensionsUsed.filter(extension => extension.prewriteTypes.includes(PropertyType.MESH)).forEach(extension => extension.prewrite(context, PropertyType.MESH));\n    json.meshes = root.listMeshes().map((mesh, index) => {\n      const meshDef = context.createPropertyDef(mesh);\n      let targetNames = null;\n      meshDef.primitives = mesh.listPrimitives().map(primitive => {\n        const primitiveDef = {\n          attributes: {}\n        };\n        primitiveDef.mode = primitive.getMode();\n        const material = primitive.getMaterial();\n        if (material) {\n          primitiveDef.material = context.materialIndexMap.get(material);\n        }\n        if (Object.keys(primitive.getExtras()).length) {\n          primitiveDef.extras = primitive.getExtras();\n        }\n        const indices = primitive.getIndices();\n        if (indices) {\n          primitiveDef.indices = context.accessorIndexMap.get(indices);\n        }\n        for (const semantic of primitive.listSemantics()) {\n          primitiveDef.attributes[semantic] = context.accessorIndexMap.get(primitive.getAttribute(semantic));\n        }\n        for (const target of primitive.listTargets()) {\n          const targetDef = {};\n          for (const semantic of target.listSemantics()) {\n            targetDef[semantic] = context.accessorIndexMap.get(target.getAttribute(semantic));\n          }\n          primitiveDef.targets = primitiveDef.targets || [];\n          primitiveDef.targets.push(targetDef);\n        }\n        if (primitive.listTargets().length && !targetNames) {\n          targetNames = primitive.listTargets().map(target => target.getName());\n        }\n        return primitiveDef;\n      });\n      if (mesh.getWeights().length) {\n        meshDef.weights = mesh.getWeights();\n      }\n      if (targetNames) {\n        meshDef.extras = meshDef.extras || {};\n        meshDef.extras['targetNames'] = targetNames;\n      }\n      context.meshIndexMap.set(mesh, index);\n      return meshDef;\n    });\n    /** Cameras. */\n    json.cameras = root.listCameras().map((camera, index) => {\n      const cameraDef = context.createPropertyDef(camera);\n      cameraDef.type = camera.getType();\n      if (cameraDef.type === Camera.Type.PERSPECTIVE) {\n        cameraDef.perspective = {\n          znear: camera.getZNear(),\n          zfar: camera.getZFar(),\n          yfov: camera.getYFov()\n        };\n        const aspectRatio = camera.getAspectRatio();\n        if (aspectRatio !== null) {\n          cameraDef.perspective.aspectRatio = aspectRatio;\n        }\n      } else {\n        cameraDef.orthographic = {\n          znear: camera.getZNear(),\n          zfar: camera.getZFar(),\n          xmag: camera.getXMag(),\n          ymag: camera.getYMag()\n        };\n      }\n      context.cameraIndexMap.set(camera, index);\n      return cameraDef;\n    });\n    /* Nodes. */\n    json.nodes = root.listNodes().map((node, index) => {\n      const nodeDef = context.createPropertyDef(node);\n      if (!MathUtils.eq(node.getTranslation(), [0, 0, 0])) {\n        nodeDef.translation = node.getTranslation();\n      }\n      if (!MathUtils.eq(node.getRotation(), [0, 0, 0, 1])) {\n        nodeDef.rotation = node.getRotation();\n      }\n      if (!MathUtils.eq(node.getScale(), [1, 1, 1])) {\n        nodeDef.scale = node.getScale();\n      }\n      if (node.getWeights().length) {\n        nodeDef.weights = node.getWeights();\n      }\n      // Attachments (mesh, camera, skin) defined later in writing process.\n      context.nodeIndexMap.set(node, index);\n      return nodeDef;\n    });\n    /** Skins. */\n    json.skins = root.listSkins().map((skin, index) => {\n      const skinDef = context.createPropertyDef(skin);\n      const inverseBindMatrices = skin.getInverseBindMatrices();\n      if (inverseBindMatrices) {\n        skinDef.inverseBindMatrices = context.accessorIndexMap.get(inverseBindMatrices);\n      }\n      const skeleton = skin.getSkeleton();\n      if (skeleton) {\n        skinDef.skeleton = context.nodeIndexMap.get(skeleton);\n      }\n      skinDef.joints = skin.listJoints().map(joint => context.nodeIndexMap.get(joint));\n      context.skinIndexMap.set(skin, index);\n      return skinDef;\n    });\n    /** Node attachments. */\n    root.listNodes().forEach((node, index) => {\n      const nodeDef = json.nodes[index];\n      const mesh = node.getMesh();\n      if (mesh) {\n        nodeDef.mesh = context.meshIndexMap.get(mesh);\n      }\n      const camera = node.getCamera();\n      if (camera) {\n        nodeDef.camera = context.cameraIndexMap.get(camera);\n      }\n      const skin = node.getSkin();\n      if (skin) {\n        nodeDef.skin = context.skinIndexMap.get(skin);\n      }\n      if (node.listChildren().length > 0) {\n        nodeDef.children = node.listChildren().map(node => context.nodeIndexMap.get(node));\n      }\n    });\n    /** Animations. */\n    json.animations = root.listAnimations().map((animation, index) => {\n      const animationDef = context.createPropertyDef(animation);\n      const samplerIndexMap = new Map();\n      animationDef.samplers = animation.listSamplers().map((sampler, samplerIndex) => {\n        const samplerDef = context.createPropertyDef(sampler);\n        samplerDef.input = context.accessorIndexMap.get(sampler.getInput());\n        samplerDef.output = context.accessorIndexMap.get(sampler.getOutput());\n        samplerDef.interpolation = sampler.getInterpolation();\n        samplerIndexMap.set(sampler, samplerIndex);\n        return samplerDef;\n      });\n      animationDef.channels = animation.listChannels().map(channel => {\n        const channelDef = context.createPropertyDef(channel);\n        channelDef.sampler = samplerIndexMap.get(channel.getSampler());\n        channelDef.target = {\n          node: context.nodeIndexMap.get(channel.getTargetNode()),\n          path: channel.getTargetPath()\n        };\n        return channelDef;\n      });\n      context.animationIndexMap.set(animation, index);\n      return animationDef;\n    });\n    /* Scenes. */\n    json.scenes = root.listScenes().map((scene, index) => {\n      const sceneDef = context.createPropertyDef(scene);\n      sceneDef.nodes = scene.listChildren().map(node => context.nodeIndexMap.get(node));\n      context.sceneIndexMap.set(scene, index);\n      return sceneDef;\n    });\n    const defaultScene = root.getDefaultScene();\n    if (defaultScene) {\n      json.scene = root.listScenes().indexOf(defaultScene);\n    }\n    /* Extensions (2/2). */\n    json.extensionsUsed = extensionsUsed.map(ext => ext.extensionName);\n    json.extensionsRequired = extensionsRequired.map(ext => ext.extensionName);\n    extensionsUsed.forEach(extension => extension.write(context));\n    //\n    clean(json);\n    return jsonDoc;\n  }\n}\n/**\n * Removes empty and null values from an object.\n * @param object\n * @internal\n */\nfunction clean(object) {\n  const unused = [];\n  for (const key in object) {\n    const value = object[key];\n    if (Array.isArray(value) && value.length === 0) {\n      unused.push(key);\n    } else if (value === null || value === '') {\n      unused.push(key);\n    } else if (value && typeof value === 'object' && Object.keys(value).length === 0) {\n      unused.push(key);\n    }\n  }\n  for (const key of unused) {\n    delete object[key];\n  }\n}\n\nvar ChunkType;\n(function (ChunkType) {\n  ChunkType[ChunkType[\"JSON\"] = 1313821514] = \"JSON\";\n  ChunkType[ChunkType[\"BIN\"] = 5130562] = \"BIN\";\n})(ChunkType || (ChunkType = {}));\n/**\n * *Abstract I/O service.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * For platform-specific implementations, see {@link NodeIO}, {@link WebIO}, and {@link DenoIO}.\n *\n * @category I/O\n */\nclass PlatformIO {\n  constructor() {\n    this._logger = Logger.DEFAULT_INSTANCE;\n    this._extensions = new Set();\n    this._dependencies = {};\n    this._vertexLayout = VertexLayout.INTERLEAVED;\n    /** @hidden */\n    this.lastReadBytes = 0;\n    /** @hidden */\n    this.lastWriteBytes = 0;\n  }\n  /** Sets the {@link Logger} used by this I/O instance. Defaults to Logger.DEFAULT_INSTANCE. */\n  setLogger(logger) {\n    this._logger = logger;\n    return this;\n  }\n  /** Registers extensions, enabling I/O class to read and write glTF assets requiring them. */\n  registerExtensions(extensions) {\n    for (const extension of extensions) {\n      this._extensions.add(extension);\n      extension.register();\n    }\n    return this;\n  }\n  /** Registers dependencies used (e.g. by extensions) in the I/O process. */\n  registerDependencies(dependencies) {\n    Object.assign(this._dependencies, dependencies);\n    return this;\n  }\n  /**\n   * Sets the vertex layout method used by this I/O instance. Defaults to\n   * VertexLayout.INTERLEAVED.\n   */\n  setVertexLayout(layout) {\n    this._vertexLayout = layout;\n    return this;\n  }\n  /**********************************************************************************************\n   * Public Read API.\n   */\n  /** Reads a {@link Document} from the given URI. */\n  async read(uri) {\n    return await this.readJSON(await this.readAsJSON(uri));\n  }\n  /** Loads a URI and returns a {@link JSONDocument} struct, without parsing. */\n  async readAsJSON(uri) {\n    const view = await this.readURI(uri, 'view');\n    this.lastReadBytes = view.byteLength;\n    const jsonDoc = isGLB(view) ? this._binaryToJSON(view) : {\n      json: JSON.parse(BufferUtils.decodeText(view)),\n      resources: {}\n    };\n    // Read external resources first, before Data URIs are replaced.\n    await this._readResourcesExternal(jsonDoc, this.dirname(uri));\n    this._readResourcesInternal(jsonDoc);\n    return jsonDoc;\n  }\n  /** Converts glTF-formatted JSON and a resource map to a {@link Document}. */\n  async readJSON(jsonDoc) {\n    jsonDoc = this._copyJSON(jsonDoc);\n    this._readResourcesInternal(jsonDoc);\n    return GLTFReader.read(jsonDoc, {\n      extensions: Array.from(this._extensions),\n      dependencies: this._dependencies,\n      logger: this._logger\n    });\n  }\n  /** Converts a GLB-formatted Uint8Array to a {@link JSONDocument}. */\n  async binaryToJSON(glb) {\n    const jsonDoc = this._binaryToJSON(BufferUtils.assertView(glb));\n    this._readResourcesInternal(jsonDoc);\n    const json = jsonDoc.json;\n    // Check for external references, which can't be resolved by this method.\n    if (json.buffers && json.buffers.some(bufferDef => isExternalBuffer(jsonDoc, bufferDef))) {\n      throw new Error('Cannot resolve external buffers with binaryToJSON().');\n    } else if (json.images && json.images.some(imageDef => isExternalImage(jsonDoc, imageDef))) {\n      throw new Error('Cannot resolve external images with binaryToJSON().');\n    }\n    return jsonDoc;\n  }\n  /** Converts a GLB-formatted Uint8Array to a {@link Document}. */\n  async readBinary(glb) {\n    return this.readJSON(await this.binaryToJSON(BufferUtils.assertView(glb)));\n  }\n  /**********************************************************************************************\n   * Public Write API.\n   */\n  /** Converts a {@link Document} to glTF-formatted JSON and a resource map. */\n  async writeJSON(doc, _options = {}) {\n    if (_options.format === Format.GLB && doc.getRoot().listBuffers().length > 1) {\n      throw new Error('GLB must have 0–1 buffers.');\n    }\n    return GLTFWriter.write(doc, {\n      format: _options.format || Format.GLTF,\n      basename: _options.basename || '',\n      logger: this._logger,\n      vertexLayout: this._vertexLayout,\n      dependencies: _extends({}, this._dependencies),\n      extensions: Array.from(this._extensions)\n    });\n  }\n  /** Converts a {@link Document} to a GLB-formatted Uint8Array. */\n  async writeBinary(doc) {\n    const {\n      json,\n      resources\n    } = await this.writeJSON(doc, {\n      format: Format.GLB\n    });\n    const header = new Uint32Array([0x46546c67, 2, 12]);\n    const jsonText = JSON.stringify(json);\n    const jsonChunkData = BufferUtils.pad(BufferUtils.encodeText(jsonText), 0x20);\n    const jsonChunkHeader = BufferUtils.toView(new Uint32Array([jsonChunkData.byteLength, 0x4e4f534a]));\n    const jsonChunk = BufferUtils.concat([jsonChunkHeader, jsonChunkData]);\n    header[header.length - 1] += jsonChunk.byteLength;\n    const binBuffer = Object.values(resources)[0];\n    if (!binBuffer || !binBuffer.byteLength) {\n      return BufferUtils.concat([BufferUtils.toView(header), jsonChunk]);\n    }\n    const binChunkData = BufferUtils.pad(binBuffer, 0x00);\n    const binChunkHeader = BufferUtils.toView(new Uint32Array([binChunkData.byteLength, 0x004e4942]));\n    const binChunk = BufferUtils.concat([binChunkHeader, binChunkData]);\n    header[header.length - 1] += binChunk.byteLength;\n    return BufferUtils.concat([BufferUtils.toView(header), jsonChunk, binChunk]);\n  }\n  /**********************************************************************************************\n   * Internal.\n   */\n  async _readResourcesExternal(jsonDoc, base) {\n    var _this = this;\n    const images = jsonDoc.json.images || [];\n    const buffers = jsonDoc.json.buffers || [];\n    const pendingResources = [...images, ...buffers].map(async function (resource) {\n      const uri = resource.uri;\n      if (!uri || uri.match(/data:/)) return Promise.resolve();\n      jsonDoc.resources[uri] = await _this.readURI(_this.resolve(base, uri), 'view');\n      _this.lastReadBytes += jsonDoc.resources[uri].byteLength;\n    });\n    await Promise.all(pendingResources);\n  }\n  _readResourcesInternal(jsonDoc) {\n    // NOTICE: This method may be called more than once during the loading\n    // process (e.g. WebIO.read) and should handle that safely.\n    function resolveResource(resource) {\n      if (!resource.uri) return;\n      if (resource.uri in jsonDoc.resources) {\n        BufferUtils.assertView(jsonDoc.resources[resource.uri]);\n        return;\n      }\n      if (resource.uri.match(/data:/)) {\n        // Rewrite Data URIs to something short and unique.\n        const resourceUUID = `__${uuid()}.${FileUtils.extension(resource.uri)}`;\n        jsonDoc.resources[resourceUUID] = BufferUtils.createBufferFromDataURI(resource.uri);\n        resource.uri = resourceUUID;\n      }\n    }\n    // Unpack images.\n    const images = jsonDoc.json.images || [];\n    images.forEach(image => {\n      if (image.bufferView === undefined && image.uri === undefined) {\n        throw new Error('Missing resource URI or buffer view.');\n      }\n      resolveResource(image);\n    });\n    // Unpack buffers.\n    const buffers = jsonDoc.json.buffers || [];\n    buffers.forEach(resolveResource);\n  }\n  /**\n   * Creates a shallow copy of glTF-formatted {@link JSONDocument}.\n   *\n   * Images, Buffers, and Resources objects are deep copies so that PlatformIO can safely\n   * modify them during the parsing process. Other properties are shallow copies, and buffers\n   * are passed by reference.\n   */\n  _copyJSON(jsonDoc) {\n    const {\n      images,\n      buffers\n    } = jsonDoc.json;\n    jsonDoc = {\n      json: _extends({}, jsonDoc.json),\n      resources: _extends({}, jsonDoc.resources)\n    };\n    if (images) {\n      jsonDoc.json.images = images.map(image => _extends({}, image));\n    }\n    if (buffers) {\n      jsonDoc.json.buffers = buffers.map(buffer => _extends({}, buffer));\n    }\n    return jsonDoc;\n  }\n  /** Internal version of binaryToJSON; does not warn about external resources. */\n  _binaryToJSON(glb) {\n    // Decode and verify GLB header.\n    if (!isGLB(glb)) {\n      throw new Error('Invalid glTF 2.0 binary.');\n    }\n    // Decode JSON chunk.\n    const jsonChunkHeader = new Uint32Array(glb.buffer, glb.byteOffset + 12, 2);\n    if (jsonChunkHeader[1] !== ChunkType.JSON) {\n      throw new Error('Missing required GLB JSON chunk.');\n    }\n    const jsonByteOffset = 20;\n    const jsonByteLength = jsonChunkHeader[0];\n    const jsonText = BufferUtils.decodeText(BufferUtils.toView(glb, jsonByteOffset, jsonByteLength));\n    const json = JSON.parse(jsonText);\n    // Decode BIN chunk.\n    const binByteOffset = jsonByteOffset + jsonByteLength;\n    if (glb.byteLength <= binByteOffset) {\n      return {\n        json,\n        resources: {}\n      };\n    }\n    const binChunkHeader = new Uint32Array(glb.buffer, glb.byteOffset + binByteOffset, 2);\n    if (binChunkHeader[1] !== ChunkType.BIN) {\n      // Allow GLB files without BIN chunk, but with unknown chunk\n      // Spec: https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#chunks-overview\n      return {\n        json,\n        resources: {}\n      };\n    }\n    const binByteLength = binChunkHeader[0];\n    const binBuffer = BufferUtils.toView(glb, binByteOffset + 8, binByteLength);\n    return {\n      json,\n      resources: {\n        [GLB_BUFFER]: binBuffer\n      }\n    };\n  }\n}\nfunction isExternalBuffer(jsonDocument, bufferDef) {\n  return bufferDef.uri !== undefined && !(bufferDef.uri in jsonDocument.resources);\n}\nfunction isExternalImage(jsonDocument, imageDef) {\n  return imageDef.uri !== undefined && !(imageDef.uri in jsonDocument.resources) && imageDef.bufferView === undefined;\n}\nfunction isGLB(view) {\n  if (view.byteLength < 3 * Uint32Array.BYTES_PER_ELEMENT) return false;\n  const header = new Uint32Array(view.buffer, view.byteOffset, 3);\n  return header[0] === 0x46546c67 && header[1] === 2;\n}\n\n/**\n * *I/O service for [Deno](https://deno.land/).*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * _*NOTICE:* Support for the Deno environment is currently experimental. See\n * [glTF-Transform#457](https://github.com/donmccurdy/glTF-Transform/issues/457)._\n *\n * Usage:\n *\n * ```typescript\n * import { DenoIO } from 'https://esm.sh/@gltf-transform/core';\n * import * as path from 'https://deno.land/std/path/mod.ts';\n *\n * const io = new DenoIO(path);\n *\n * // Read.\n * let document;\n * document = io.read('model.glb');  // → Document\n * document = io.readBinary(glb);    // Uint8Array → Document\n *\n * // Write.\n * const glb = io.writeBinary(document);  // Document → Uint8Array\n * ```\n *\n * @category I/O\n */\nclass DenoIO extends PlatformIO {\n  constructor(path) {\n    super();\n    this._path = void 0;\n    this._path = path;\n  }\n  async readURI(uri, type) {\n    switch (type) {\n      case 'view':\n        return Deno.readFile(uri);\n      case 'text':\n        return Deno.readTextFile(uri);\n    }\n  }\n  resolve(base, path) {\n    // https://github.com/KhronosGroup/glTF/issues/1449\n    // https://stackoverflow.com/a/27278490/1314762\n    return this._path.resolve(base, decodeURIComponent(path));\n  }\n  dirname(uri) {\n    return this._path.dirname(uri);\n  }\n}\n\n/**\n * *I/O service for Node.js.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * Usage:\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n *\n * const io = new NodeIO();\n *\n * // Read.\n * let document;\n * document = await io.read('model.glb'); // → Document\n * document = await io.readBinary(glb);   // Uint8Array → Document\n *\n * // Write.\n * await io.write('model.glb', document);      // → void\n * const glb = await io.writeBinary(document); // Document → Uint8Array\n * ```\n *\n * By default, NodeIO can only read/write paths on disk. To enable network requests, provide a Fetch\n * API implementation (global [`fetch()`](https://nodejs.org/api/globals.html#fetch) is stable in\n * Node.js v21+, or [`node-fetch`](https://www.npmjs.com/package/node-fetch) may be installed) and enable\n * {@link NodeIO.setAllowNetwork setAllowNetwork}. Network requests may optionally be configured with\n * [RequestInit](https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters) parameters.\n *\n * ```typescript\n * const io = new NodeIO(fetch, {headers: {...}}).setAllowNetwork(true);\n *\n * const document = await io.read('https://example.com/path/to/model.glb');\n * ```\n *\n * @category I/O\n */\nclass NodeIO extends PlatformIO {\n  /**\n   * Constructs a new NodeIO service. Instances are reusable. By default, only NodeIO can only\n   * read/write paths on disk. To enable HTTP requests, provide a Fetch API implementation and\n   * enable {@link NodeIO.setAllowNetwork setAllowNetwork}.\n   *\n   * @param fetch Implementation of Fetch API.\n   * @param fetchConfig Configuration object for Fetch API.\n   */\n  constructor(_fetch = null, _fetchConfig = HTTPUtils.DEFAULT_INIT) {\n    super();\n    this._fetch = void 0;\n    this._fetchConfig = void 0;\n    this._init = void 0;\n    this._fetchEnabled = false;\n    this._fetch = _fetch;\n    this._fetchConfig = _fetchConfig;\n    this._init = this.init();\n  }\n  async init() {\n    if (this._init) return this._init;\n    return Promise.all([import('fs'), import('path')]).then(([fs, path]) => {\n      this._fs = fs.promises;\n      this._path = path;\n    });\n  }\n  setAllowNetwork(allow) {\n    if (allow && !this._fetch) {\n      throw new Error('NodeIO requires a Fetch API implementation for HTTP requests.');\n    }\n    this._fetchEnabled = allow;\n    return this;\n  }\n  async readURI(uri, type) {\n    await this.init();\n    if (HTTPUtils.isAbsoluteURL(uri)) {\n      if (!this._fetchEnabled || !this._fetch) {\n        throw new Error('Network request blocked. Allow HTTP requests explicitly, if needed.');\n      }\n      const response = await this._fetch(uri, this._fetchConfig);\n      switch (type) {\n        case 'view':\n          return new Uint8Array(await response.arrayBuffer());\n        case 'text':\n          return response.text();\n      }\n    } else {\n      switch (type) {\n        case 'view':\n          return this._fs.readFile(uri);\n        case 'text':\n          return this._fs.readFile(uri, 'utf8');\n      }\n    }\n  }\n  resolve(base, path) {\n    if (HTTPUtils.isAbsoluteURL(base) || HTTPUtils.isAbsoluteURL(path)) {\n      return HTTPUtils.resolve(base, path);\n    }\n    // https://github.com/KhronosGroup/glTF/issues/1449\n    // https://stackoverflow.com/a/27278490/1314762\n    return this._path.resolve(base, decodeURIComponent(path));\n  }\n  dirname(uri) {\n    if (HTTPUtils.isAbsoluteURL(uri)) {\n      return HTTPUtils.dirname(uri);\n    }\n    return this._path.dirname(uri);\n  }\n  /**********************************************************************************************\n   * Public.\n   */\n  /** Writes a {@link Document} instance to a local path. */\n  async write(uri, doc) {\n    await this.init();\n    const isGLB = !!uri.match(/\\.glb$/);\n    await (isGLB ? this._writeGLB(uri, doc) : this._writeGLTF(uri, doc));\n  }\n  /**********************************************************************************************\n   * Private.\n   */\n  /** @internal */\n  async _writeGLTF(uri, doc) {\n    var _this = this;\n    this.lastWriteBytes = 0;\n    const {\n      json,\n      resources\n    } = await this.writeJSON(doc, {\n      format: Format.GLTF,\n      basename: FileUtils.basename(uri)\n    });\n    const {\n      _fs: fs,\n      _path: path\n    } = this;\n    const dir = path.dirname(uri);\n    // write json\n    const jsonContent = JSON.stringify(json, null, 2);\n    await fs.writeFile(uri, jsonContent);\n    this.lastWriteBytes += jsonContent.length;\n    // write resources\n    for (const batch of listBatches(Object.keys(resources), 10)) {\n      await Promise.all(batch.map(async function (resourceURI) {\n        if (HTTPUtils.isAbsoluteURL(resourceURI)) {\n          if (HTTPUtils.extension(resourceURI) === 'bin') {\n            throw new Error(`Cannot write buffer to path \"${resourceURI}\".`);\n          }\n          return;\n        }\n        const resourcePath = path.join(dir, decodeURIComponent(resourceURI));\n        await fs.mkdir(path.dirname(resourcePath), {\n          recursive: true\n        });\n        await fs.writeFile(resourcePath, resources[resourceURI]);\n        _this.lastWriteBytes += resources[resourceURI].byteLength;\n      }));\n    }\n  }\n  /** @internal */\n  async _writeGLB(uri, doc) {\n    const buffer = await this.writeBinary(doc);\n    await this._fs.writeFile(uri, buffer);\n    this.lastWriteBytes = buffer.byteLength;\n  }\n}\n/** Divides a flat input array into batches of size `batchSize`. */\nfunction listBatches(array, batchSize) {\n  const batches = [];\n  for (let i = 0, il = array.length; i < il; i += batchSize) {\n    const batch = [];\n    for (let j = 0; j < batchSize && i + j < il; j++) {\n      batch.push(array[i + j]);\n    }\n    batches.push(batch);\n  }\n  return batches;\n}\n\n/**\n * *I/O service for Web.*\n *\n * The most common use of the I/O service is to read/write a {@link Document} with a given path.\n * Methods are also available for converting in-memory representations of raw glTF files, both\n * binary (*Uint8Array*) and JSON ({@link JSONDocument}).\n *\n * Usage:\n *\n * ```typescript\n * import { WebIO } from '@gltf-transform/core';\n *\n * const io = new WebIO({credentials: 'include'});\n *\n * // Read.\n * let document;\n * document = await io.read('model.glb');  // → Document\n * document = await io.readBinary(glb);    // Uint8Array → Document\n *\n * // Write.\n * const glb = await io.writeBinary(document); // Document → Uint8Array\n * ```\n *\n * @category I/O\n */\nclass WebIO extends PlatformIO {\n  /**\n   * Constructs a new WebIO service. Instances are reusable.\n   * @param fetchConfig Configuration object for Fetch API.\n   */\n  constructor(fetchConfig = HTTPUtils.DEFAULT_INIT) {\n    super();\n    this._fetchConfig = void 0;\n    this._fetchConfig = fetchConfig;\n  }\n  async readURI(uri, type) {\n    const response = await fetch(uri, this._fetchConfig);\n    switch (type) {\n      case 'view':\n        return new Uint8Array(await response.arrayBuffer());\n      case 'text':\n        return response.text();\n    }\n  }\n  resolve(base, path) {\n    return HTTPUtils.resolve(base, path);\n  }\n  dirname(uri) {\n    return HTTPUtils.dirname(uri);\n  }\n}\n\nexport { Accessor, Animation, AnimationChannel, AnimationSampler, Buffer$1 as Buffer, BufferUtils, COPY_IDENTITY, Camera, ColorUtils, ComponentTypeToTypedArray, DenoIO, Document, ExtensibleProperty, Extension, ExtensionProperty, FileUtils, Format, GLB_BUFFER, HTTPUtils, ImageUtils, Logger, Material, MathUtils, Mesh, Node, NodeIO, PlatformIO, Primitive, PrimitiveTarget, Property, PropertyType, ReaderContext, Root, Scene, Skin, Texture, TextureChannel, TextureInfo, VERSION, Verbosity, VertexLayout, WebIO, WriterContext, getBounds, uuid };\n//# sourceMappingURL=index.modern.js.map\n","///////////////////////////////////////////////////\n// KTX2 Header.\n///////////////////////////////////////////////////\nconst KHR_SUPERCOMPRESSION_NONE = 0;\nconst KHR_SUPERCOMPRESSION_BASISLZ = 1;\nconst KHR_SUPERCOMPRESSION_ZSTD = 2;\nconst KHR_SUPERCOMPRESSION_ZLIB = 3;\n///////////////////////////////////////////////////\n// Data Format Descriptor (DFD).\n///////////////////////////////////////////////////\nconst KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT = 0;\nconst KHR_DF_VENDORID_KHRONOS = 0;\nconst KHR_DF_VERSION = 2;\nconst KHR_DF_MODEL_UNSPECIFIED = 0;\nconst KHR_DF_MODEL_RGBSDA = 1;\n// ...\nconst KHR_DF_MODEL_ETC1 = 160;\nconst KHR_DF_MODEL_ETC2 = 161;\nconst KHR_DF_MODEL_ASTC = 162;\nconst KHR_DF_MODEL_ETC1S = 163;\nconst KHR_DF_MODEL_UASTC = 166;\nconst KHR_DF_FLAG_ALPHA_STRAIGHT = 0;\nconst KHR_DF_FLAG_ALPHA_PREMULTIPLIED = 1;\nconst KHR_DF_TRANSFER_UNSPECIFIED = 0;\nconst KHR_DF_TRANSFER_LINEAR = 1;\nconst KHR_DF_TRANSFER_SRGB = 2;\nconst KHR_DF_TRANSFER_ITU = 3;\nconst KHR_DF_TRANSFER_NTSC = 4;\nconst KHR_DF_TRANSFER_SLOG = 5;\nconst KHR_DF_TRANSFER_SLOG2 = 6;\nconst KHR_DF_TRANSFER_BT1886 = 7;\nconst KHR_DF_TRANSFER_HLG_OETF = 8;\nconst KHR_DF_TRANSFER_HLG_EOTF = 9;\nconst KHR_DF_TRANSFER_PQ_EOTF = 10;\nconst KHR_DF_TRANSFER_PQ_OETF = 11;\nconst KHR_DF_TRANSFER_DCIP3 = 12;\nconst KHR_DF_TRANSFER_PAL_OETF = 13;\nconst KHR_DF_TRANSFER_PAL625_EOTF = 14;\nconst KHR_DF_TRANSFER_ST240 = 15;\nconst KHR_DF_TRANSFER_ACESCC = 16;\nconst KHR_DF_TRANSFER_ACESCCT = 17;\nconst KHR_DF_TRANSFER_ADOBERGB = 18;\nconst KHR_DF_PRIMARIES_UNSPECIFIED = 0;\nconst KHR_DF_PRIMARIES_BT709 = 1;\nconst KHR_DF_PRIMARIES_BT601_EBU = 2;\nconst KHR_DF_PRIMARIES_BT601_SMPTE = 3;\nconst KHR_DF_PRIMARIES_BT2020 = 4;\nconst KHR_DF_PRIMARIES_CIEXYZ = 5;\nconst KHR_DF_PRIMARIES_ACES = 6;\nconst KHR_DF_PRIMARIES_ACESCC = 7;\nconst KHR_DF_PRIMARIES_NTSC1953 = 8;\nconst KHR_DF_PRIMARIES_PAL525 = 9;\nconst KHR_DF_PRIMARIES_DISPLAYP3 = 10;\nconst KHR_DF_PRIMARIES_ADOBERGB = 11;\nconst KHR_DF_CHANNEL_RGBSDA_RED = 0;\nconst KHR_DF_CHANNEL_RGBSDA_GREEN = 1;\nconst KHR_DF_CHANNEL_RGBSDA_BLUE = 2;\nconst KHR_DF_CHANNEL_RGBSDA_STENCIL = 13;\nconst KHR_DF_CHANNEL_RGBSDA_DEPTH = 14;\nconst KHR_DF_CHANNEL_RGBSDA_ALPHA = 15;\nconst KHR_DF_SAMPLE_DATATYPE_FLOAT = 0x80;\nconst KHR_DF_SAMPLE_DATATYPE_SIGNED = 0x40;\nconst KHR_DF_SAMPLE_DATATYPE_EXPONENT = 0x20;\nconst KHR_DF_SAMPLE_DATATYPE_LINEAR = 0x10;\n///////////////////////////////////////////////////\n// VK FORMAT.\n///////////////////////////////////////////////////\nconst VK_FORMAT_UNDEFINED = 0;\nconst VK_FORMAT_R4G4_UNORM_PACK8 = 1;\nconst VK_FORMAT_R4G4B4A4_UNORM_PACK16 = 2;\nconst VK_FORMAT_B4G4R4A4_UNORM_PACK16 = 3;\nconst VK_FORMAT_R5G6B5_UNORM_PACK16 = 4;\nconst VK_FORMAT_B5G6R5_UNORM_PACK16 = 5;\nconst VK_FORMAT_R5G5B5A1_UNORM_PACK16 = 6;\nconst VK_FORMAT_B5G5R5A1_UNORM_PACK16 = 7;\nconst VK_FORMAT_A1R5G5B5_UNORM_PACK16 = 8;\nconst VK_FORMAT_R8_UNORM = 9;\nconst VK_FORMAT_R8_SNORM = 10;\nconst VK_FORMAT_R8_UINT = 13;\nconst VK_FORMAT_R8_SINT = 14;\nconst VK_FORMAT_R8_SRGB = 15;\nconst VK_FORMAT_R8G8_UNORM = 16;\nconst VK_FORMAT_R8G8_SNORM = 17;\nconst VK_FORMAT_R8G8_UINT = 20;\nconst VK_FORMAT_R8G8_SINT = 21;\nconst VK_FORMAT_R8G8_SRGB = 22;\nconst VK_FORMAT_R8G8B8_UNORM = 23;\nconst VK_FORMAT_R8G8B8_SNORM = 24;\nconst VK_FORMAT_R8G8B8_UINT = 27;\nconst VK_FORMAT_R8G8B8_SINT = 28;\nconst VK_FORMAT_R8G8B8_SRGB = 29;\nconst VK_FORMAT_B8G8R8_UNORM = 30;\nconst VK_FORMAT_B8G8R8_SNORM = 31;\nconst VK_FORMAT_B8G8R8_UINT = 34;\nconst VK_FORMAT_B8G8R8_SINT = 35;\nconst VK_FORMAT_B8G8R8_SRGB = 36;\nconst VK_FORMAT_R8G8B8A8_UNORM = 37;\nconst VK_FORMAT_R8G8B8A8_SNORM = 38;\nconst VK_FORMAT_R8G8B8A8_UINT = 41;\nconst VK_FORMAT_R8G8B8A8_SINT = 42;\nconst VK_FORMAT_R8G8B8A8_SRGB = 43;\nconst VK_FORMAT_B8G8R8A8_UNORM = 44;\nconst VK_FORMAT_B8G8R8A8_SNORM = 45;\nconst VK_FORMAT_B8G8R8A8_UINT = 48;\nconst VK_FORMAT_B8G8R8A8_SINT = 49;\nconst VK_FORMAT_B8G8R8A8_SRGB = 50;\nconst VK_FORMAT_A2R10G10B10_UNORM_PACK32 = 58;\nconst VK_FORMAT_A2R10G10B10_SNORM_PACK32 = 59;\nconst VK_FORMAT_A2R10G10B10_UINT_PACK32 = 62;\nconst VK_FORMAT_A2R10G10B10_SINT_PACK32 = 63;\nconst VK_FORMAT_A2B10G10R10_UNORM_PACK32 = 64;\nconst VK_FORMAT_A2B10G10R10_SNORM_PACK32 = 65;\nconst VK_FORMAT_A2B10G10R10_UINT_PACK32 = 68;\nconst VK_FORMAT_A2B10G10R10_SINT_PACK32 = 69;\nconst VK_FORMAT_R16_UNORM = 70;\nconst VK_FORMAT_R16_SNORM = 71;\nconst VK_FORMAT_R16_UINT = 74;\nconst VK_FORMAT_R16_SINT = 75;\nconst VK_FORMAT_R16_SFLOAT = 76;\nconst VK_FORMAT_R16G16_UNORM = 77;\nconst VK_FORMAT_R16G16_SNORM = 78;\nconst VK_FORMAT_R16G16_UINT = 81;\nconst VK_FORMAT_R16G16_SINT = 82;\nconst VK_FORMAT_R16G16_SFLOAT = 83;\nconst VK_FORMAT_R16G16B16_UNORM = 84;\nconst VK_FORMAT_R16G16B16_SNORM = 85;\nconst VK_FORMAT_R16G16B16_UINT = 88;\nconst VK_FORMAT_R16G16B16_SINT = 89;\nconst VK_FORMAT_R16G16B16_SFLOAT = 90;\nconst VK_FORMAT_R16G16B16A16_UNORM = 91;\nconst VK_FORMAT_R16G16B16A16_SNORM = 92;\nconst VK_FORMAT_R16G16B16A16_UINT = 95;\nconst VK_FORMAT_R16G16B16A16_SINT = 96;\nconst VK_FORMAT_R16G16B16A16_SFLOAT = 97;\nconst VK_FORMAT_R32_UINT = 98;\nconst VK_FORMAT_R32_SINT = 99;\nconst VK_FORMAT_R32_SFLOAT = 100;\nconst VK_FORMAT_R32G32_UINT = 101;\nconst VK_FORMAT_R32G32_SINT = 102;\nconst VK_FORMAT_R32G32_SFLOAT = 103;\nconst VK_FORMAT_R32G32B32_UINT = 104;\nconst VK_FORMAT_R32G32B32_SINT = 105;\nconst VK_FORMAT_R32G32B32_SFLOAT = 106;\nconst VK_FORMAT_R32G32B32A32_UINT = 107;\nconst VK_FORMAT_R32G32B32A32_SINT = 108;\nconst VK_FORMAT_R32G32B32A32_SFLOAT = 109;\nconst VK_FORMAT_R64_UINT = 110;\nconst VK_FORMAT_R64_SINT = 111;\nconst VK_FORMAT_R64_SFLOAT = 112;\nconst VK_FORMAT_R64G64_UINT = 113;\nconst VK_FORMAT_R64G64_SINT = 114;\nconst VK_FORMAT_R64G64_SFLOAT = 115;\nconst VK_FORMAT_R64G64B64_UINT = 116;\nconst VK_FORMAT_R64G64B64_SINT = 117;\nconst VK_FORMAT_R64G64B64_SFLOAT = 118;\nconst VK_FORMAT_R64G64B64A64_UINT = 119;\nconst VK_FORMAT_R64G64B64A64_SINT = 120;\nconst VK_FORMAT_R64G64B64A64_SFLOAT = 121;\nconst VK_FORMAT_B10G11R11_UFLOAT_PACK32 = 122;\nconst VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 123;\nconst VK_FORMAT_D16_UNORM = 124;\nconst VK_FORMAT_X8_D24_UNORM_PACK32 = 125;\nconst VK_FORMAT_D32_SFLOAT = 126;\nconst VK_FORMAT_S8_UINT = 127;\nconst VK_FORMAT_D16_UNORM_S8_UINT = 128;\nconst VK_FORMAT_D24_UNORM_S8_UINT = 129;\nconst VK_FORMAT_D32_SFLOAT_S8_UINT = 130;\nconst VK_FORMAT_BC1_RGB_UNORM_BLOCK = 131;\nconst VK_FORMAT_BC1_RGB_SRGB_BLOCK = 132;\nconst VK_FORMAT_BC1_RGBA_UNORM_BLOCK = 133;\nconst VK_FORMAT_BC1_RGBA_SRGB_BLOCK = 134;\nconst VK_FORMAT_BC2_UNORM_BLOCK = 135;\nconst VK_FORMAT_BC2_SRGB_BLOCK = 136;\nconst VK_FORMAT_BC3_UNORM_BLOCK = 137;\nconst VK_FORMAT_BC3_SRGB_BLOCK = 138;\nconst VK_FORMAT_BC4_UNORM_BLOCK = 139;\nconst VK_FORMAT_BC4_SNORM_BLOCK = 140;\nconst VK_FORMAT_BC5_UNORM_BLOCK = 141;\nconst VK_FORMAT_BC5_SNORM_BLOCK = 142;\nconst VK_FORMAT_BC6H_UFLOAT_BLOCK = 143;\nconst VK_FORMAT_BC6H_SFLOAT_BLOCK = 144;\nconst VK_FORMAT_BC7_UNORM_BLOCK = 145;\nconst VK_FORMAT_BC7_SRGB_BLOCK = 146;\nconst VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 147;\nconst VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 148;\nconst VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 149;\nconst VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 150;\nconst VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 151;\nconst VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 152;\nconst VK_FORMAT_EAC_R11_UNORM_BLOCK = 153;\nconst VK_FORMAT_EAC_R11_SNORM_BLOCK = 154;\nconst VK_FORMAT_EAC_R11G11_UNORM_BLOCK = 155;\nconst VK_FORMAT_EAC_R11G11_SNORM_BLOCK = 156;\nconst VK_FORMAT_ASTC_4x4_UNORM_BLOCK = 157;\nconst VK_FORMAT_ASTC_4x4_SRGB_BLOCK = 158;\nconst VK_FORMAT_ASTC_5x4_UNORM_BLOCK = 159;\nconst VK_FORMAT_ASTC_5x4_SRGB_BLOCK = 160;\nconst VK_FORMAT_ASTC_5x5_UNORM_BLOCK = 161;\nconst VK_FORMAT_ASTC_5x5_SRGB_BLOCK = 162;\nconst VK_FORMAT_ASTC_6x5_UNORM_BLOCK = 163;\nconst VK_FORMAT_ASTC_6x5_SRGB_BLOCK = 164;\nconst VK_FORMAT_ASTC_6x6_UNORM_BLOCK = 165;\nconst VK_FORMAT_ASTC_6x6_SRGB_BLOCK = 166;\nconst VK_FORMAT_ASTC_8x5_UNORM_BLOCK = 167;\nconst VK_FORMAT_ASTC_8x5_SRGB_BLOCK = 168;\nconst VK_FORMAT_ASTC_8x6_UNORM_BLOCK = 169;\nconst VK_FORMAT_ASTC_8x6_SRGB_BLOCK = 170;\nconst VK_FORMAT_ASTC_8x8_UNORM_BLOCK = 171;\nconst VK_FORMAT_ASTC_8x8_SRGB_BLOCK = 172;\nconst VK_FORMAT_ASTC_10x5_UNORM_BLOCK = 173;\nconst VK_FORMAT_ASTC_10x5_SRGB_BLOCK = 174;\nconst VK_FORMAT_ASTC_10x6_UNORM_BLOCK = 175;\nconst VK_FORMAT_ASTC_10x6_SRGB_BLOCK = 176;\nconst VK_FORMAT_ASTC_10x8_UNORM_BLOCK = 177;\nconst VK_FORMAT_ASTC_10x8_SRGB_BLOCK = 178;\nconst VK_FORMAT_ASTC_10x10_UNORM_BLOCK = 179;\nconst VK_FORMAT_ASTC_10x10_SRGB_BLOCK = 180;\nconst VK_FORMAT_ASTC_12x10_UNORM_BLOCK = 181;\nconst VK_FORMAT_ASTC_12x10_SRGB_BLOCK = 182;\nconst VK_FORMAT_ASTC_12x12_UNORM_BLOCK = 183;\nconst VK_FORMAT_ASTC_12x12_SRGB_BLOCK = 184;\nconst VK_FORMAT_R10X6_UNORM_PACK16 = 1000156007;\nconst VK_FORMAT_R10X6G10X6_UNORM_2PACK16 = 1000156008;\nconst VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = 1000156009;\nconst VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = 1000156010;\nconst VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = 1000156011;\nconst VK_FORMAT_R12X4_UNORM_PACK16 = 1000156017;\nconst VK_FORMAT_R12X4G12X4_UNORM_2PACK16 = 1000156018;\nconst VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = 1000156019;\nconst VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = 1000156020;\nconst VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = 1000156021;\nconst VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = 1000054000;\nconst VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = 1000054001;\nconst VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = 1000054002;\nconst VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = 1000054003;\nconst VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = 1000054004;\nconst VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = 1000054005;\nconst VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = 1000054006;\nconst VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = 1000054007;\nconst VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT = 1000066000;\nconst VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT = 1000066001;\nconst VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT = 1000066002;\nconst VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT = 1000066003;\nconst VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT = 1000066004;\nconst VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT = 1000066005;\nconst VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT = 1000066006;\nconst VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT = 1000066007;\nconst VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT = 1000066008;\nconst VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT = 1000066009;\nconst VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT = 1000066010;\nconst VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT = 1000066011;\nconst VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT = 1000066012;\nconst VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT = 1000066013;\nconst VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT = 1000340000;\nconst VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT = 1000340001;\n\n/**\n * Creates a 'default' {@link KTX2Container} object, initialized with common\n * configuration wfor BT709 primaries and sRGB transfer, without pixel data.\n * There's nothing particularly special about the 'default' container; creating\n * the KTX2Container object explicitly is also fine.\n */\nfunction createDefaultContainer() {\n  return {\n    vkFormat: VK_FORMAT_UNDEFINED,\n    typeSize: 1,\n    pixelWidth: 0,\n    pixelHeight: 0,\n    pixelDepth: 0,\n    layerCount: 0,\n    faceCount: 1,\n    levelCount: 0,\n    supercompressionScheme: KHR_SUPERCOMPRESSION_NONE,\n    levels: [],\n    dataFormatDescriptor: [{\n      vendorId: KHR_DF_VENDORID_KHRONOS,\n      descriptorType: KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT,\n      versionNumber: KHR_DF_VERSION,\n      colorModel: KHR_DF_MODEL_UNSPECIFIED,\n      colorPrimaries: KHR_DF_PRIMARIES_BT709,\n      transferFunction: KHR_DF_TRANSFER_SRGB,\n      flags: KHR_DF_FLAG_ALPHA_STRAIGHT,\n      texelBlockDimension: [0, 0, 0, 0],\n      bytesPlane: [0, 0, 0, 0, 0, 0, 0, 0],\n      samples: []\n    }],\n    keyValue: {},\n    globalData: null\n  };\n}\n\nclass BufferReader {\n  constructor(data, byteOffset, byteLength, littleEndian) {\n    this._dataView = void 0;\n    this._littleEndian = void 0;\n    this._offset = void 0;\n    this._dataView = new DataView(data.buffer, data.byteOffset + byteOffset, byteLength);\n    this._littleEndian = littleEndian;\n    this._offset = 0;\n  }\n  _nextUint8() {\n    const value = this._dataView.getUint8(this._offset);\n    this._offset += 1;\n    return value;\n  }\n  _nextUint16() {\n    const value = this._dataView.getUint16(this._offset, this._littleEndian);\n    this._offset += 2;\n    return value;\n  }\n  _nextUint32() {\n    const value = this._dataView.getUint32(this._offset, this._littleEndian);\n    this._offset += 4;\n    return value;\n  }\n  _nextUint64() {\n    const left = this._dataView.getUint32(this._offset, this._littleEndian);\n    const right = this._dataView.getUint32(this._offset + 4, this._littleEndian);\n    // TODO(cleanup): Just test this...\n    // const value = this._littleEndian ? left + (2 ** 32 * right) : (2 ** 32 * left) + right;\n    const value = left + 2 ** 32 * right;\n    this._offset += 8;\n    return value;\n  }\n  _nextInt32() {\n    const value = this._dataView.getInt32(this._offset, this._littleEndian);\n    this._offset += 4;\n    return value;\n  }\n  _nextUint8Array(len) {\n    const value = new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + this._offset, len);\n    this._offset += len;\n    return value;\n  }\n  _skip(bytes) {\n    this._offset += bytes;\n    return this;\n  }\n  _scan(maxByteLength, term = 0x00) {\n    const byteOffset = this._offset;\n    let byteLength = 0;\n    while (this._dataView.getUint8(this._offset) !== term && byteLength < maxByteLength) {\n      byteLength++;\n      this._offset++;\n    }\n    if (byteLength < maxByteLength) this._offset++;\n    return new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + byteOffset, byteLength);\n  }\n}\n\n///////////////////////////////////////////////////\n// Common.\n///////////////////////////////////////////////////\nconst KTX_WRITER = `KTX-Parse v${\"1.1.0\"}`;\nconst NUL = new Uint8Array([0x00]);\n///////////////////////////////////////////////////\n// KTX2 Header.\n///////////////////////////////////////////////////\nconst KTX2_ID = [\n// '´', 'K', 'T', 'X', '2', '0', 'ª', '\\r', '\\n', '\\x1A', '\\n'\n0xab, 0x4b, 0x54, 0x58, 0x20, 0x32, 0x30, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\nconst HEADER_BYTE_LENGTH = 68; // 13 * 4 + 2 * 8\n\n/** Encodes text to an ArrayBuffer. */\nfunction encodeText(text) {\n  return new TextEncoder().encode(text);\n}\n/** Decodes an ArrayBuffer to text. */\nfunction decodeText(buffer) {\n  return new TextDecoder().decode(buffer);\n}\n/** Concatenates N ArrayBuffers. */\nfunction concat(buffers) {\n  let totalByteLength = 0;\n  for (const buffer of buffers) {\n    totalByteLength += buffer.byteLength;\n  }\n  const result = new Uint8Array(totalByteLength);\n  let byteOffset = 0;\n  for (const buffer of buffers) {\n    result.set(new Uint8Array(buffer), byteOffset);\n    byteOffset += buffer.byteLength;\n  }\n  return result;\n}\n/** Returns the least common multiple (LCM) for two positive integers. */\nfunction leastCommonMultiple(a, b) {\n  const max = Math.max(a, b);\n  const min = Math.min(a, b);\n  let lcm = max;\n  while (lcm % min !== 0) {\n    lcm += max;\n  }\n  return lcm;\n}\n/**\n * Returns amount of padding, in bytes, required to pad a value V to N-byte\n * boundaries. Both V and N must be positive integers.\n */\nfunction getPadding(v, n = 4) {\n  return Math.ceil(v / n) * n - v;\n}\n/** Returns byte length per texel block. */\nfunction getBlockByteLength(container) {\n  return container.levels[0].levelData.byteLength / getBlockCount(container, 0);\n}\n/**\n * Returns total number of blocks for given level. For VK_FORMAT_UNDEFINED, DFD is required.\n *\n * References:\n * - https://github.khronos.org/KTX-Specification/ktxspec.v2.html#levelImages\n */\nfunction getBlockCount(container, levelIndex) {\n  let blockCount = 1;\n  const pixelDimensions = [container.pixelWidth, container.pixelHeight, container.pixelDepth];\n  const blockDimensions = getBlockDimensions(container);\n  for (let i = 0; i < 3; i++) {\n    if (pixelDimensions[i] > 0) {\n      const dimBlockCount = Math.ceil(Math.floor(pixelDimensions[i] * 2 ** -levelIndex) / blockDimensions[i]);\n      blockCount *= Math.max(1, dimBlockCount);\n    }\n  }\n  if (container.layerCount > 0) {\n    blockCount *= container.layerCount;\n  }\n  if (container.faceCount > 0) {\n    blockCount *= container.faceCount;\n  }\n  return blockCount;\n}\n/**\n * Given a KTX2 container, returns block dimensions as [width, height, depth]. Requires valid DFD.\n */\nfunction getBlockDimensions(container) {\n  const [x, y, z] = container.dataFormatDescriptor[0].texelBlockDimension;\n  return [x + 1, y + 1, z + 1];\n}\n\n/**\n * Parses a KTX 2.0 file, returning an unpacked {@link KTX2Container} instance with all associated\n * data. The container's mip levels and other binary data are pointers into the original file, not\n * copies, so the original file should not be overwritten after reading.\n *\n * @param data Bytes of KTX 2.0 file, as Uint8Array or Buffer.\n */\nfunction read(data) {\n  ///////////////////////////////////////////////////\n  // KTX 2.0 Identifier.\n  ///////////////////////////////////////////////////\n  const id = new Uint8Array(data.buffer, data.byteOffset, KTX2_ID.length);\n  if (id[0] !== KTX2_ID[0] ||\n  // '´'\n  id[1] !== KTX2_ID[1] ||\n  // 'K'\n  id[2] !== KTX2_ID[2] ||\n  // 'T'\n  id[3] !== KTX2_ID[3] ||\n  // 'X'\n  id[4] !== KTX2_ID[4] ||\n  // ' '\n  id[5] !== KTX2_ID[5] ||\n  // '2'\n  id[6] !== KTX2_ID[6] ||\n  // '0'\n  id[7] !== KTX2_ID[7] ||\n  // 'ª'\n  id[8] !== KTX2_ID[8] ||\n  // '\\r'\n  id[9] !== KTX2_ID[9] ||\n  // '\\n'\n  id[10] !== KTX2_ID[10] ||\n  // '\\x1A'\n  id[11] !== KTX2_ID[11] // '\\n'\n  ) {\n    throw new Error('Missing KTX 2.0 identifier.');\n  }\n  const container = createDefaultContainer();\n  ///////////////////////////////////////////////////\n  // Header.\n  ///////////////////////////////////////////////////\n  const headerByteLength = 17 * Uint32Array.BYTES_PER_ELEMENT;\n  const headerReader = new BufferReader(data, KTX2_ID.length, headerByteLength, true);\n  container.vkFormat = headerReader._nextUint32();\n  container.typeSize = headerReader._nextUint32();\n  container.pixelWidth = headerReader._nextUint32();\n  container.pixelHeight = headerReader._nextUint32();\n  container.pixelDepth = headerReader._nextUint32();\n  container.layerCount = headerReader._nextUint32();\n  container.faceCount = headerReader._nextUint32();\n  container.levelCount = headerReader._nextUint32();\n  container.supercompressionScheme = headerReader._nextUint32();\n  const dfdByteOffset = headerReader._nextUint32();\n  const dfdByteLength = headerReader._nextUint32();\n  const kvdByteOffset = headerReader._nextUint32();\n  const kvdByteLength = headerReader._nextUint32();\n  const sgdByteOffset = headerReader._nextUint64();\n  const sgdByteLength = headerReader._nextUint64();\n  ///////////////////////////////////////////////////\n  // Level Index.\n  ///////////////////////////////////////////////////\n  const levelByteLength = Math.max(container.levelCount, 1) * 3 * 8;\n  const levelReader = new BufferReader(data, KTX2_ID.length + headerByteLength, levelByteLength, true);\n  for (let i = 0, il = Math.max(container.levelCount, 1); i < il; i++) {\n    container.levels.push({\n      levelData: new Uint8Array(data.buffer, data.byteOffset + levelReader._nextUint64(), levelReader._nextUint64()),\n      uncompressedByteLength: levelReader._nextUint64()\n    });\n  }\n  ///////////////////////////////////////////////////\n  // Data Format Descriptor (DFD).\n  ///////////////////////////////////////////////////\n  const dfdReader = new BufferReader(data, dfdByteOffset, dfdByteLength, true);\n  dfdReader._skip(4); // totalSize\n  const vendorId = dfdReader._nextUint16();\n  const descriptorType = dfdReader._nextUint16();\n  const versionNumber = dfdReader._nextUint16();\n  const descriptorBlockSize = dfdReader._nextUint16();\n  const colorModel = dfdReader._nextUint8();\n  const colorPrimaries = dfdReader._nextUint8();\n  const transferFunction = dfdReader._nextUint8();\n  const flags = dfdReader._nextUint8();\n  const texelBlockDimension = [dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8()];\n  const bytesPlane = [dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8()];\n  const samples = [];\n  const dfd = {\n    vendorId,\n    descriptorType,\n    versionNumber,\n    colorModel,\n    colorPrimaries,\n    transferFunction,\n    flags,\n    texelBlockDimension,\n    bytesPlane,\n    samples\n  };\n  const sampleStart = 6;\n  const sampleWords = 4;\n  const numSamples = (descriptorBlockSize / 4 - sampleStart) / sampleWords;\n  for (let i = 0; i < numSamples; i++) {\n    const sample = {\n      bitOffset: dfdReader._nextUint16(),\n      bitLength: dfdReader._nextUint8(),\n      channelType: dfdReader._nextUint8(),\n      samplePosition: [dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8(), dfdReader._nextUint8()],\n      sampleLower: Number.NEGATIVE_INFINITY,\n      sampleUpper: Number.POSITIVE_INFINITY\n    };\n    if (sample.channelType & KHR_DF_SAMPLE_DATATYPE_SIGNED) {\n      sample.sampleLower = dfdReader._nextInt32();\n      sample.sampleUpper = dfdReader._nextInt32();\n    } else {\n      sample.sampleLower = dfdReader._nextUint32();\n      sample.sampleUpper = dfdReader._nextUint32();\n    }\n    dfd.samples[i] = sample;\n  }\n  container.dataFormatDescriptor.length = 0;\n  container.dataFormatDescriptor.push(dfd);\n  ///////////////////////////////////////////////////\n  // Key/Value Data (KVD).\n  ///////////////////////////////////////////////////\n  const kvdReader = new BufferReader(data, kvdByteOffset, kvdByteLength, true);\n  while (kvdReader._offset < kvdByteLength) {\n    const keyValueByteLength = kvdReader._nextUint32();\n    const keyData = kvdReader._scan(keyValueByteLength);\n    const key = decodeText(keyData);\n    container.keyValue[key] = kvdReader._nextUint8Array(keyValueByteLength - keyData.byteLength - 1);\n    if (key.match(/^ktx/i)) {\n      const text = decodeText(container.keyValue[key]);\n      container.keyValue[key] = text.substring(0, text.lastIndexOf('\\x00'));\n    }\n    const kvPadding = keyValueByteLength % 4 ? 4 - keyValueByteLength % 4 : 0; // align(4)\n    // 4-byte alignment.\n    kvdReader._skip(kvPadding);\n  }\n  ///////////////////////////////////////////////////\n  // Supercompression Global Data (SGD).\n  ///////////////////////////////////////////////////\n  if (sgdByteLength <= 0) return container;\n  const sgdReader = new BufferReader(data, sgdByteOffset, sgdByteLength, true);\n  const endpointCount = sgdReader._nextUint16();\n  const selectorCount = sgdReader._nextUint16();\n  const endpointsByteLength = sgdReader._nextUint32();\n  const selectorsByteLength = sgdReader._nextUint32();\n  const tablesByteLength = sgdReader._nextUint32();\n  const extendedByteLength = sgdReader._nextUint32();\n  const imageDescs = [];\n  for (let i = 0, il = Math.max(container.levelCount, 1); i < il; i++) {\n    imageDescs.push({\n      imageFlags: sgdReader._nextUint32(),\n      rgbSliceByteOffset: sgdReader._nextUint32(),\n      rgbSliceByteLength: sgdReader._nextUint32(),\n      alphaSliceByteOffset: sgdReader._nextUint32(),\n      alphaSliceByteLength: sgdReader._nextUint32()\n    });\n  }\n  const endpointsByteOffset = sgdByteOffset + sgdReader._offset;\n  const selectorsByteOffset = endpointsByteOffset + endpointsByteLength;\n  const tablesByteOffset = selectorsByteOffset + selectorsByteLength;\n  const extendedByteOffset = tablesByteOffset + tablesByteLength;\n  const endpointsData = new Uint8Array(data.buffer, data.byteOffset + endpointsByteOffset, endpointsByteLength);\n  const selectorsData = new Uint8Array(data.buffer, data.byteOffset + selectorsByteOffset, selectorsByteLength);\n  const tablesData = new Uint8Array(data.buffer, data.byteOffset + tablesByteOffset, tablesByteLength);\n  const extendedData = new Uint8Array(data.buffer, data.byteOffset + extendedByteOffset, extendedByteLength);\n  container.globalData = {\n    endpointCount,\n    selectorCount,\n    imageDescs,\n    endpointsData,\n    selectorsData,\n    tablesData,\n    extendedData\n  };\n  return container;\n}\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\nconst DEFAULT_OPTIONS = {\n  keepWriter: false\n};\n/**\n * Serializes a {@link KTX2Container} instance to a KTX 2.0 file. Mip levels and other binary data\n * are copied into the resulting Uint8Array, so the original container can safely be edited or\n * destroyed after it is serialized.\n *\n * Options:\n * - keepWriter: If true, 'KTXWriter' key/value field is written as provided by the container.\n * \t\tOtherwise, a string for the current ktx-parse version is generated. Default: false.\n *\n * @param container\n * @param options\n */\nfunction write(container, options = {}) {\n  // biome-ignore lint/style/noParameterAssign: Merging defaults only.\n  options = _extends({}, DEFAULT_OPTIONS, options);\n  ///////////////////////////////////////////////////\n  // Supercompression Global Data (SGD).\n  ///////////////////////////////////////////////////\n  let sgdBuffer = new ArrayBuffer(0);\n  if (container.globalData) {\n    const sgdHeaderBuffer = new ArrayBuffer(20 + container.globalData.imageDescs.length * 5 * 4);\n    const sgdHeaderView = new DataView(sgdHeaderBuffer);\n    sgdHeaderView.setUint16(0, container.globalData.endpointCount, true);\n    sgdHeaderView.setUint16(2, container.globalData.selectorCount, true);\n    sgdHeaderView.setUint32(4, container.globalData.endpointsData.byteLength, true);\n    sgdHeaderView.setUint32(8, container.globalData.selectorsData.byteLength, true);\n    sgdHeaderView.setUint32(12, container.globalData.tablesData.byteLength, true);\n    sgdHeaderView.setUint32(16, container.globalData.extendedData.byteLength, true);\n    for (let i = 0; i < container.globalData.imageDescs.length; i++) {\n      const imageDesc = container.globalData.imageDescs[i];\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 0, imageDesc.imageFlags, true);\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 4, imageDesc.rgbSliceByteOffset, true);\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 8, imageDesc.rgbSliceByteLength, true);\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 12, imageDesc.alphaSliceByteOffset, true);\n      sgdHeaderView.setUint32(20 + i * 5 * 4 + 16, imageDesc.alphaSliceByteLength, true);\n    }\n    sgdBuffer = concat([sgdHeaderBuffer, container.globalData.endpointsData, container.globalData.selectorsData, container.globalData.tablesData, container.globalData.extendedData]);\n  }\n  ///////////////////////////////////////////////////\n  // Key/Value Data (KVD).\n  ///////////////////////////////////////////////////\n  const keyValueData = [];\n  const keyValueList = Object.entries(_extends({}, container.keyValue, !options.keepWriter && {\n    KTXwriter: KTX_WRITER\n  }));\n  keyValueList.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (const [key, value] of keyValueList) {\n    const keyData = encodeText(key);\n    const valueData = typeof value === 'string' ? concat([encodeText(value), NUL]) : value;\n    const kvByteLength = keyData.byteLength + 1 + valueData.byteLength;\n    const kvPadding = getPadding(kvByteLength, 4); // align(4)\n    keyValueData.push(concat([new Uint32Array([kvByteLength]), keyData, NUL, valueData, new Uint8Array(kvPadding).fill(0x00) // align(4)\n    ]));\n  }\n  const kvdBuffer = concat(keyValueData);\n  ///////////////////////////////////////////////////\n  // Data Format Descriptor (DFD).\n  ///////////////////////////////////////////////////\n  if (container.dataFormatDescriptor.length !== 1 || container.dataFormatDescriptor[0].descriptorType !== KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT) {\n    throw new Error('Only BASICFORMAT Data Format Descriptor output supported.');\n  }\n  const dfd = container.dataFormatDescriptor[0];\n  const dfdBuffer = new ArrayBuffer(28 + dfd.samples.length * 16);\n  const dfdView = new DataView(dfdBuffer);\n  const descriptorBlockSize = 24 + dfd.samples.length * 16;\n  dfdView.setUint32(0, dfdBuffer.byteLength, true);\n  dfdView.setUint16(4, dfd.vendorId, true);\n  dfdView.setUint16(6, dfd.descriptorType, true);\n  dfdView.setUint16(8, dfd.versionNumber, true);\n  dfdView.setUint16(10, descriptorBlockSize, true);\n  dfdView.setUint8(12, dfd.colorModel);\n  dfdView.setUint8(13, dfd.colorPrimaries);\n  dfdView.setUint8(14, dfd.transferFunction);\n  dfdView.setUint8(15, dfd.flags);\n  if (!Array.isArray(dfd.texelBlockDimension)) {\n    throw new Error('texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.');\n  }\n  dfdView.setUint8(16, dfd.texelBlockDimension[0]);\n  dfdView.setUint8(17, dfd.texelBlockDimension[1]);\n  dfdView.setUint8(18, dfd.texelBlockDimension[2]);\n  dfdView.setUint8(19, dfd.texelBlockDimension[3]);\n  for (let i = 0; i < 8; i++) dfdView.setUint8(20 + i, dfd.bytesPlane[i]);\n  for (let i = 0; i < dfd.samples.length; i++) {\n    const sample = dfd.samples[i];\n    const sampleByteOffset = 28 + i * 16;\n    dfdView.setUint16(sampleByteOffset + 0, sample.bitOffset, true);\n    dfdView.setUint8(sampleByteOffset + 2, sample.bitLength);\n    dfdView.setUint8(sampleByteOffset + 3, sample.channelType);\n    dfdView.setUint8(sampleByteOffset + 4, sample.samplePosition[0]);\n    dfdView.setUint8(sampleByteOffset + 5, sample.samplePosition[1]);\n    dfdView.setUint8(sampleByteOffset + 6, sample.samplePosition[2]);\n    dfdView.setUint8(sampleByteOffset + 7, sample.samplePosition[3]);\n    if (sample.channelType & KHR_DF_SAMPLE_DATATYPE_SIGNED) {\n      dfdView.setInt32(sampleByteOffset + 8, sample.sampleLower, true);\n      dfdView.setInt32(sampleByteOffset + 12, sample.sampleUpper, true);\n    } else {\n      dfdView.setUint32(sampleByteOffset + 8, sample.sampleLower, true);\n      dfdView.setUint32(sampleByteOffset + 12, sample.sampleUpper, true);\n    }\n  }\n  ///////////////////////////////////////////////////\n  // Data alignment.\n  ///////////////////////////////////////////////////\n  const dfdByteOffset = KTX2_ID.length + HEADER_BYTE_LENGTH + container.levels.length * 3 * 8;\n  const kvdByteOffset = dfdByteOffset + dfdBuffer.byteLength;\n  let sgdByteOffset = sgdBuffer.byteLength > 0 ? kvdByteOffset + kvdBuffer.byteLength : 0;\n  if (sgdByteOffset % 8) sgdByteOffset += 8 - sgdByteOffset % 8; // align(8)\n  ///////////////////////////////////////////////////\n  // Level Index.\n  ///////////////////////////////////////////////////\n  const levelData = [];\n  const levelIndex = new DataView(new ArrayBuffer(container.levels.length * 3 * 8));\n  const levelDataByteOffsets = new Uint32Array(container.levels.length);\n  let levelAlign = 0;\n  if (container.supercompressionScheme === KHR_SUPERCOMPRESSION_NONE) {\n    levelAlign = leastCommonMultiple(getBlockByteLength(container), 4);\n  }\n  // Level data is ordered small → large.\n  let levelDataByteOffset = (sgdByteOffset || kvdByteOffset + kvdBuffer.byteLength) + sgdBuffer.byteLength;\n  for (let i = container.levels.length - 1; i >= 0; i--) {\n    // Level padding.\n    if (levelDataByteOffset % levelAlign) {\n      const paddingBytes = getPadding(levelDataByteOffset, levelAlign);\n      levelData.push(new Uint8Array(paddingBytes));\n      levelDataByteOffset += paddingBytes;\n    }\n    // Level data.\n    const level = container.levels[i];\n    levelData.push(level.levelData);\n    levelDataByteOffsets[i] = levelDataByteOffset;\n    levelDataByteOffset += level.levelData.byteLength;\n  }\n  // Level index is ordered large → small.\n  for (let i = 0; i < container.levels.length; i++) {\n    const level = container.levels[i];\n    levelIndex.setBigUint64(i * 24 + 0, BigInt(levelDataByteOffsets[i]), true);\n    levelIndex.setBigUint64(i * 24 + 8, BigInt(level.levelData.byteLength), true);\n    levelIndex.setBigUint64(i * 24 + 16, BigInt(level.uncompressedByteLength), true);\n  }\n  ///////////////////////////////////////////////////\n  // Header.\n  ///////////////////////////////////////////////////\n  const headerBuffer = new ArrayBuffer(HEADER_BYTE_LENGTH);\n  const headerView = new DataView(headerBuffer);\n  headerView.setUint32(0, container.vkFormat, true);\n  headerView.setUint32(4, container.typeSize, true);\n  headerView.setUint32(8, container.pixelWidth, true);\n  headerView.setUint32(12, container.pixelHeight, true);\n  headerView.setUint32(16, container.pixelDepth, true);\n  headerView.setUint32(20, container.layerCount, true);\n  headerView.setUint32(24, container.faceCount, true);\n  headerView.setUint32(28, container.levelCount, true);\n  headerView.setUint32(32, container.supercompressionScheme, true);\n  headerView.setUint32(36, dfdByteOffset, true);\n  headerView.setUint32(40, dfdBuffer.byteLength, true);\n  headerView.setUint32(44, kvdByteOffset, true);\n  headerView.setUint32(48, kvdBuffer.byteLength, true);\n  headerView.setBigUint64(52, BigInt(sgdBuffer.byteLength > 0 ? sgdByteOffset : 0), true);\n  headerView.setBigUint64(60, BigInt(sgdBuffer.byteLength), true);\n  ///////////////////////////////////////////////////\n  // Compose.\n  ///////////////////////////////////////////////////\n  return new Uint8Array(concat([new Uint8Array(KTX2_ID).buffer, headerBuffer, levelIndex.buffer, dfdBuffer, kvdBuffer, sgdByteOffset > 0 ? new ArrayBuffer(sgdByteOffset - (kvdByteOffset + kvdBuffer.byteLength)) // align(8)\n  : new ArrayBuffer(0), sgdBuffer, ...levelData]));\n}\n\nexport { KHR_DF_CHANNEL_RGBSDA_ALPHA, KHR_DF_CHANNEL_RGBSDA_BLUE, KHR_DF_CHANNEL_RGBSDA_DEPTH, KHR_DF_CHANNEL_RGBSDA_GREEN, KHR_DF_CHANNEL_RGBSDA_RED, KHR_DF_CHANNEL_RGBSDA_STENCIL, KHR_DF_FLAG_ALPHA_PREMULTIPLIED, KHR_DF_FLAG_ALPHA_STRAIGHT, KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT, KHR_DF_MODEL_ASTC, KHR_DF_MODEL_ETC1, KHR_DF_MODEL_ETC1S, KHR_DF_MODEL_ETC2, KHR_DF_MODEL_RGBSDA, KHR_DF_MODEL_UASTC, KHR_DF_MODEL_UNSPECIFIED, KHR_DF_PRIMARIES_ACES, KHR_DF_PRIMARIES_ACESCC, KHR_DF_PRIMARIES_ADOBERGB, KHR_DF_PRIMARIES_BT2020, KHR_DF_PRIMARIES_BT601_EBU, KHR_DF_PRIMARIES_BT601_SMPTE, KHR_DF_PRIMARIES_BT709, KHR_DF_PRIMARIES_CIEXYZ, KHR_DF_PRIMARIES_DISPLAYP3, KHR_DF_PRIMARIES_NTSC1953, KHR_DF_PRIMARIES_PAL525, KHR_DF_PRIMARIES_UNSPECIFIED, KHR_DF_SAMPLE_DATATYPE_EXPONENT, KHR_DF_SAMPLE_DATATYPE_FLOAT, KHR_DF_SAMPLE_DATATYPE_LINEAR, KHR_DF_SAMPLE_DATATYPE_SIGNED, KHR_DF_TRANSFER_ACESCC, KHR_DF_TRANSFER_ACESCCT, KHR_DF_TRANSFER_ADOBERGB, KHR_DF_TRANSFER_BT1886, KHR_DF_TRANSFER_DCIP3, KHR_DF_TRANSFER_HLG_EOTF, KHR_DF_TRANSFER_HLG_OETF, KHR_DF_TRANSFER_ITU, KHR_DF_TRANSFER_LINEAR, KHR_DF_TRANSFER_NTSC, KHR_DF_TRANSFER_PAL625_EOTF, KHR_DF_TRANSFER_PAL_OETF, KHR_DF_TRANSFER_PQ_EOTF, KHR_DF_TRANSFER_PQ_OETF, KHR_DF_TRANSFER_SLOG, KHR_DF_TRANSFER_SLOG2, KHR_DF_TRANSFER_SRGB, KHR_DF_TRANSFER_ST240, KHR_DF_TRANSFER_UNSPECIFIED, KHR_DF_VENDORID_KHRONOS, KHR_DF_VERSION, KHR_SUPERCOMPRESSION_BASISLZ, KHR_SUPERCOMPRESSION_NONE, KHR_SUPERCOMPRESSION_ZLIB, KHR_SUPERCOMPRESSION_ZSTD, VK_FORMAT_A1R5G5B5_UNORM_PACK16, VK_FORMAT_A2B10G10R10_SINT_PACK32, VK_FORMAT_A2B10G10R10_SNORM_PACK32, VK_FORMAT_A2B10G10R10_UINT_PACK32, VK_FORMAT_A2B10G10R10_UNORM_PACK32, VK_FORMAT_A2R10G10B10_SINT_PACK32, VK_FORMAT_A2R10G10B10_SNORM_PACK32, VK_FORMAT_A2R10G10B10_UINT_PACK32, VK_FORMAT_A2R10G10B10_UNORM_PACK32, VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT, VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT, VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_10x10_SRGB_BLOCK, VK_FORMAT_ASTC_10x10_UNORM_BLOCK, VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_10x5_SRGB_BLOCK, VK_FORMAT_ASTC_10x5_UNORM_BLOCK, VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_10x6_SRGB_BLOCK, VK_FORMAT_ASTC_10x6_UNORM_BLOCK, VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_10x8_SRGB_BLOCK, VK_FORMAT_ASTC_10x8_UNORM_BLOCK, VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_12x10_SRGB_BLOCK, VK_FORMAT_ASTC_12x10_UNORM_BLOCK, VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_12x12_SRGB_BLOCK, VK_FORMAT_ASTC_12x12_UNORM_BLOCK, VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_4x4_SRGB_BLOCK, VK_FORMAT_ASTC_4x4_UNORM_BLOCK, VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_5x4_SRGB_BLOCK, VK_FORMAT_ASTC_5x4_UNORM_BLOCK, VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_5x5_SRGB_BLOCK, VK_FORMAT_ASTC_5x5_UNORM_BLOCK, VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_6x5_SRGB_BLOCK, VK_FORMAT_ASTC_6x5_UNORM_BLOCK, VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_6x6_SRGB_BLOCK, VK_FORMAT_ASTC_6x6_UNORM_BLOCK, VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_8x5_SRGB_BLOCK, VK_FORMAT_ASTC_8x5_UNORM_BLOCK, VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_8x6_SRGB_BLOCK, VK_FORMAT_ASTC_8x6_UNORM_BLOCK, VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT, VK_FORMAT_ASTC_8x8_SRGB_BLOCK, VK_FORMAT_ASTC_8x8_UNORM_BLOCK, VK_FORMAT_B10G11R11_UFLOAT_PACK32, VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16, VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16, VK_FORMAT_B4G4R4A4_UNORM_PACK16, VK_FORMAT_B5G5R5A1_UNORM_PACK16, VK_FORMAT_B5G6R5_UNORM_PACK16, VK_FORMAT_B8G8R8A8_SINT, VK_FORMAT_B8G8R8A8_SNORM, VK_FORMAT_B8G8R8A8_SRGB, VK_FORMAT_B8G8R8A8_UINT, VK_FORMAT_B8G8R8A8_UNORM, VK_FORMAT_B8G8R8_SINT, VK_FORMAT_B8G8R8_SNORM, VK_FORMAT_B8G8R8_SRGB, VK_FORMAT_B8G8R8_UINT, VK_FORMAT_B8G8R8_UNORM, VK_FORMAT_BC1_RGBA_SRGB_BLOCK, VK_FORMAT_BC1_RGBA_UNORM_BLOCK, VK_FORMAT_BC1_RGB_SRGB_BLOCK, VK_FORMAT_BC1_RGB_UNORM_BLOCK, VK_FORMAT_BC2_SRGB_BLOCK, VK_FORMAT_BC2_UNORM_BLOCK, VK_FORMAT_BC3_SRGB_BLOCK, VK_FORMAT_BC3_UNORM_BLOCK, VK_FORMAT_BC4_SNORM_BLOCK, VK_FORMAT_BC4_UNORM_BLOCK, VK_FORMAT_BC5_SNORM_BLOCK, VK_FORMAT_BC5_UNORM_BLOCK, VK_FORMAT_BC6H_SFLOAT_BLOCK, VK_FORMAT_BC6H_UFLOAT_BLOCK, VK_FORMAT_BC7_SRGB_BLOCK, VK_FORMAT_BC7_UNORM_BLOCK, VK_FORMAT_D16_UNORM, VK_FORMAT_D16_UNORM_S8_UINT, VK_FORMAT_D24_UNORM_S8_UINT, VK_FORMAT_D32_SFLOAT, VK_FORMAT_D32_SFLOAT_S8_UINT, VK_FORMAT_E5B9G9R9_UFLOAT_PACK32, VK_FORMAT_EAC_R11G11_SNORM_BLOCK, VK_FORMAT_EAC_R11G11_UNORM_BLOCK, VK_FORMAT_EAC_R11_SNORM_BLOCK, VK_FORMAT_EAC_R11_UNORM_BLOCK, VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK, VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK, VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK, VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK, VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK, VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK, VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16, VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16, VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG, VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG, VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG, VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG, VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG, VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG, VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG, VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG, VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16, VK_FORMAT_R10X6G10X6_UNORM_2PACK16, VK_FORMAT_R10X6_UNORM_PACK16, VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16, VK_FORMAT_R12X4G12X4_UNORM_2PACK16, VK_FORMAT_R12X4_UNORM_PACK16, VK_FORMAT_R16G16B16A16_SFLOAT, VK_FORMAT_R16G16B16A16_SINT, VK_FORMAT_R16G16B16A16_SNORM, VK_FORMAT_R16G16B16A16_UINT, VK_FORMAT_R16G16B16A16_UNORM, VK_FORMAT_R16G16B16_SFLOAT, VK_FORMAT_R16G16B16_SINT, VK_FORMAT_R16G16B16_SNORM, VK_FORMAT_R16G16B16_UINT, VK_FORMAT_R16G16B16_UNORM, VK_FORMAT_R16G16_SFLOAT, VK_FORMAT_R16G16_SINT, VK_FORMAT_R16G16_SNORM, VK_FORMAT_R16G16_UINT, VK_FORMAT_R16G16_UNORM, VK_FORMAT_R16_SFLOAT, VK_FORMAT_R16_SINT, VK_FORMAT_R16_SNORM, VK_FORMAT_R16_UINT, VK_FORMAT_R16_UNORM, VK_FORMAT_R32G32B32A32_SFLOAT, VK_FORMAT_R32G32B32A32_SINT, VK_FORMAT_R32G32B32A32_UINT, VK_FORMAT_R32G32B32_SFLOAT, VK_FORMAT_R32G32B32_SINT, VK_FORMAT_R32G32B32_UINT, VK_FORMAT_R32G32_SFLOAT, VK_FORMAT_R32G32_SINT, VK_FORMAT_R32G32_UINT, VK_FORMAT_R32_SFLOAT, VK_FORMAT_R32_SINT, VK_FORMAT_R32_UINT, VK_FORMAT_R4G4B4A4_UNORM_PACK16, VK_FORMAT_R4G4_UNORM_PACK8, VK_FORMAT_R5G5B5A1_UNORM_PACK16, VK_FORMAT_R5G6B5_UNORM_PACK16, VK_FORMAT_R64G64B64A64_SFLOAT, VK_FORMAT_R64G64B64A64_SINT, VK_FORMAT_R64G64B64A64_UINT, VK_FORMAT_R64G64B64_SFLOAT, VK_FORMAT_R64G64B64_SINT, VK_FORMAT_R64G64B64_UINT, VK_FORMAT_R64G64_SFLOAT, VK_FORMAT_R64G64_SINT, VK_FORMAT_R64G64_UINT, VK_FORMAT_R64_SFLOAT, VK_FORMAT_R64_SINT, VK_FORMAT_R64_UINT, VK_FORMAT_R8G8B8A8_SINT, VK_FORMAT_R8G8B8A8_SNORM, VK_FORMAT_R8G8B8A8_SRGB, VK_FORMAT_R8G8B8A8_UINT, VK_FORMAT_R8G8B8A8_UNORM, VK_FORMAT_R8G8B8_SINT, VK_FORMAT_R8G8B8_SNORM, VK_FORMAT_R8G8B8_SRGB, VK_FORMAT_R8G8B8_UINT, VK_FORMAT_R8G8B8_UNORM, VK_FORMAT_R8G8_SINT, VK_FORMAT_R8G8_SNORM, VK_FORMAT_R8G8_SRGB, VK_FORMAT_R8G8_UINT, VK_FORMAT_R8G8_UNORM, VK_FORMAT_R8_SINT, VK_FORMAT_R8_SNORM, VK_FORMAT_R8_SRGB, VK_FORMAT_R8_UINT, VK_FORMAT_R8_UNORM, VK_FORMAT_S8_UINT, VK_FORMAT_UNDEFINED, VK_FORMAT_X8_D24_UNORM_PACK32, createDefaultContainer, read, write };\n//# sourceMappingURL=ktx-parse.modern.js.map\n","import { ExtensionProperty, PropertyType, RefMap, Extension, BufferUtils, WriterContext, Primitive, Root, AnimationSampler, AnimationChannel, Accessor, MathUtils, GLB_BUFFER, ImageUtils, getBounds, TextureInfo, TextureChannel, RefSet } from '@gltf-transform/core';\nimport { read, KHR_DF_MODEL_ETC1S, KHR_DF_MODEL_UASTC } from 'ktx-parse';\n\nconst EXT_MESH_GPU_INSTANCING = 'EXT_mesh_gpu_instancing';\nconst EXT_MESHOPT_COMPRESSION = 'EXT_meshopt_compression';\nconst EXT_TEXTURE_WEBP = 'EXT_texture_webp';\nconst EXT_TEXTURE_AVIF = 'EXT_texture_avif';\nconst KHR_DRACO_MESH_COMPRESSION = 'KHR_draco_mesh_compression';\nconst KHR_LIGHTS_PUNCTUAL = 'KHR_lights_punctual';\nconst KHR_MATERIALS_ANISOTROPY = 'KHR_materials_anisotropy';\nconst KHR_MATERIALS_CLEARCOAT = 'KHR_materials_clearcoat';\nconst KHR_MATERIALS_DIFFUSE_TRANSMISSION = 'KHR_materials_diffuse_transmission';\nconst KHR_MATERIALS_DISPERSION = 'KHR_materials_dispersion';\nconst KHR_MATERIALS_EMISSIVE_STRENGTH = 'KHR_materials_emissive_strength';\nconst KHR_MATERIALS_IOR = 'KHR_materials_ior';\nconst KHR_MATERIALS_IRIDESCENCE = 'KHR_materials_iridescence';\nconst KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS = 'KHR_materials_pbrSpecularGlossiness';\nconst KHR_MATERIALS_SHEEN = 'KHR_materials_sheen';\nconst KHR_MATERIALS_SPECULAR = 'KHR_materials_specular';\nconst KHR_MATERIALS_TRANSMISSION = 'KHR_materials_transmission';\nconst KHR_MATERIALS_UNLIT = 'KHR_materials_unlit';\nconst KHR_MATERIALS_VOLUME = 'KHR_materials_volume';\nconst KHR_MATERIALS_VARIANTS = 'KHR_materials_variants';\nconst KHR_MESH_QUANTIZATION = 'KHR_mesh_quantization';\nconst KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\nconst KHR_TEXTURE_TRANSFORM = 'KHR_texture_transform';\nconst KHR_XMP_JSON_LD = 'KHR_xmp_json_ld';\n\n// See BufferViewUsage in `writer-context.ts`.\nconst INSTANCE_ATTRIBUTE = 'INSTANCE_ATTRIBUTE';\n/**\n * Defines GPU instances of a {@link Mesh} under one {@link Node}. See {@link EXTMeshGPUInstancing}.\n */\nclass InstancedMesh extends ExtensionProperty {\n  init() {\n    this.extensionName = EXT_MESH_GPU_INSTANCING;\n    this.propertyType = 'InstancedMesh';\n    this.parentTypes = [PropertyType.NODE];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      attributes: new RefMap()\n    });\n  }\n  /** Returns an instance attribute as an {@link Accessor}. */\n  getAttribute(semantic) {\n    return this.getRefMap('attributes', semantic);\n  }\n  /**\n   * Sets an instance attribute to an {@link Accessor}. All attributes must have the same\n   * instance count.\n   */\n  setAttribute(semantic, accessor) {\n    return this.setRefMap('attributes', semantic, accessor, {\n      usage: INSTANCE_ATTRIBUTE\n    });\n  }\n  /**\n   * Lists all instance attributes {@link Accessor}s associated with the InstancedMesh. Order\n   * will be consistent with the order returned by {@link .listSemantics}().\n   */\n  listAttributes() {\n    return this.listRefMapValues('attributes');\n  }\n  /**\n   * Lists all instance attribute semantics associated with the primitive. Order will be\n   * consistent with the order returned by {@link .listAttributes}().\n   */\n  listSemantics() {\n    return this.listRefMapKeys('attributes');\n  }\n}\nInstancedMesh.EXTENSION_NAME = EXT_MESH_GPU_INSTANCING;\n\n/**\n * [`EXT_mesh_gpu_instancing`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing/)\n * prepares mesh data for efficient GPU instancing.\n *\n * GPU instancing allows engines to render many copies of a single mesh at once using a small number\n * of draw calls. Instancing is particularly useful for things like trees, grass, road signs, etc.\n * Keep in mind that predefined batches, as used in this extension, may prevent frustum culling\n * within a batch. Dividing batches into collocated cells may be preferable to using a single large\n * batch.\n *\n * > _**NOTICE:** While this extension stores mesh data optimized for GPU instancing, it\n * > is important to note that (1) GPU instancing and other optimizations are possible — and\n * > encouraged — even without this extension, and (2) other common meanings of the term\n * > \"instancing\" exist, distinct from this extension. See\n * > [Appendix: Motivation and Purpose](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing#appendix-motivation-and-purpose)\n * > of the `EXT_mesh_gpu_instancing` specification._\n *\n * Properties:\n * - {@link InstancedMesh}\n *\n * ### Example\n *\n * The `EXTMeshGPUInstancing` class provides a single {@link ExtensionProperty} type, `InstancedMesh`,\n * which may be attached to any {@link Node} instance. For example:\n *\n * ```typescript\n * import { EXTMeshGPUInstancing } from '@gltf-transform/extensions';\n *\n * // Create standard mesh, node, and scene hierarchy.\n * // ...\n *\n * // Assign positions for each instance.\n * const batchPositions = doc.createAccessor('instance_positions')\n * \t.setArray(new Float32Array([\n * \t\t0, 0, 0,\n * \t\t1, 0, 0,\n * \t\t2, 0, 0,\n * \t]))\n * \t.setType(Accessor.Type.VEC3)\n * \t.setBuffer(buffer);\n *\n * // Assign IDs for each instance.\n * const batchIDs = doc.createAccessor('instance_ids')\n * \t.setArray(new Uint8Array([0, 1, 2]))\n * \t.setType(Accessor.Type.SCALAR)\n * \t.setBuffer(buffer);\n *\n * // Create an Extension attached to the Document.\n * const batchExtension = document.createExtension(EXTMeshGPUInstancing)\n * \t.setRequired(true);\n * const batch = batchExtension.createInstancedMesh()\n * \t.setAttribute('TRANSLATION', batchPositions)\n * \t.setAttribute('_ID', batchIDs);\n *\n * node\n * \t.setMesh(mesh)\n * \t.setExtension('EXT_mesh_gpu_instancing', batch);\n * ```\n *\n * Standard instance attributes are `TRANSLATION`, `ROTATION`, and `SCALE`, and support the accessor\n * types allowed by the extension specification. Custom instance attributes are allowed, and should\n * be prefixed with an underscore (`_*`).\n */\nclass EXTMeshGPUInstancing extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = EXT_MESH_GPU_INSTANCING;\n    /** @hidden */\n    this.provideTypes = [PropertyType.NODE];\n    /** @hidden */\n    this.prewriteTypes = [PropertyType.ACCESSOR];\n  }\n  /** Creates a new InstancedMesh property for use on a {@link Node}. */\n  createInstancedMesh() {\n    return new InstancedMesh(this.document.getGraph());\n  }\n  /** @hidden */\n  read(context) {\n    const jsonDoc = context.jsonDoc;\n    const nodeDefs = jsonDoc.json.nodes || [];\n    nodeDefs.forEach((nodeDef, nodeIndex) => {\n      if (!nodeDef.extensions || !nodeDef.extensions[EXT_MESH_GPU_INSTANCING]) return;\n      const instancedMeshDef = nodeDef.extensions[EXT_MESH_GPU_INSTANCING];\n      const instancedMesh = this.createInstancedMesh();\n      for (const semantic in instancedMeshDef.attributes) {\n        instancedMesh.setAttribute(semantic, context.accessors[instancedMeshDef.attributes[semantic]]);\n      }\n      context.nodes[nodeIndex].setExtension(EXT_MESH_GPU_INSTANCING, instancedMesh);\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    // Set usage for instance attribute accessors, so they are stored in separate buffer\n    // views grouped by parent reference.\n    context.accessorUsageGroupedByParent.add(INSTANCE_ATTRIBUTE);\n    for (const prop of this.properties) {\n      for (const attribute of prop.listAttributes()) {\n        context.addAccessorToUsageGroup(attribute, INSTANCE_ATTRIBUTE);\n      }\n    }\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listNodes().forEach(node => {\n      const instancedMesh = node.getExtension(EXT_MESH_GPU_INSTANCING);\n      if (instancedMesh) {\n        const nodeIndex = context.nodeIndexMap.get(node);\n        const nodeDef = jsonDoc.json.nodes[nodeIndex];\n        const instancedMeshDef = {\n          attributes: {}\n        };\n        instancedMesh.listSemantics().forEach(semantic => {\n          const attribute = instancedMesh.getAttribute(semantic);\n          instancedMeshDef.attributes[semantic] = context.accessorIndexMap.get(attribute);\n        });\n        nodeDef.extensions = nodeDef.extensions || {};\n        nodeDef.extensions[EXT_MESH_GPU_INSTANCING] = instancedMeshDef;\n      }\n    });\n    return this;\n  }\n}\nEXTMeshGPUInstancing.EXTENSION_NAME = EXT_MESH_GPU_INSTANCING;\n\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\n\nvar EncoderMethod$1;\n(function (EncoderMethod) {\n  EncoderMethod[\"QUANTIZE\"] = \"quantize\";\n  EncoderMethod[\"FILTER\"] = \"filter\";\n})(EncoderMethod$1 || (EncoderMethod$1 = {}));\nvar MeshoptMode;\n(function (MeshoptMode) {\n  MeshoptMode[\"ATTRIBUTES\"] = \"ATTRIBUTES\";\n  MeshoptMode[\"TRIANGLES\"] = \"TRIANGLES\";\n  MeshoptMode[\"INDICES\"] = \"INDICES\";\n})(MeshoptMode || (MeshoptMode = {}));\nvar MeshoptFilter;\n(function (MeshoptFilter) {\n  /** No filter — quantize only. */\n  MeshoptFilter[\"NONE\"] = \"NONE\";\n  /** Four 8- or 16-bit normalized values. */\n  MeshoptFilter[\"OCTAHEDRAL\"] = \"OCTAHEDRAL\";\n  /** Four 16-bit normalized values. */\n  MeshoptFilter[\"QUATERNION\"] = \"QUATERNION\";\n  /** K single-precision floating point values. */\n  MeshoptFilter[\"EXPONENTIAL\"] = \"EXPONENTIAL\";\n})(MeshoptFilter || (MeshoptFilter = {}));\n\n/**\n * Returns true for a fallback buffer, else false.\n *\n *   - All references to the fallback buffer must come from bufferViews that\n *     have a EXT_meshopt_compression extension specified.\n *   - No references to the fallback buffer may come from\n *     EXT_meshopt_compression extension JSON.\n */\nfunction isFallbackBuffer(bufferDef) {\n  if (!bufferDef.extensions || !bufferDef.extensions[EXT_MESHOPT_COMPRESSION]) return false;\n  const fallbackDef = bufferDef.extensions[EXT_MESHOPT_COMPRESSION];\n  return !!fallbackDef.fallback;\n}\n\nconst {\n  BYTE,\n  SHORT,\n  FLOAT\n} = Accessor.ComponentType;\nconst {\n  encodeNormalizedInt,\n  decodeNormalizedInt\n} = MathUtils;\n/** Pre-processes array with required filters or padding. */\nfunction prepareAccessor(accessor, encoder, mode, filterOptions) {\n  const {\n    filter,\n    bits\n  } = filterOptions;\n  const result = {\n    array: accessor.getArray(),\n    byteStride: accessor.getElementSize() * accessor.getComponentSize(),\n    componentType: accessor.getComponentType(),\n    normalized: accessor.getNormalized()\n  };\n  if (mode !== MeshoptMode.ATTRIBUTES) return result;\n  if (filter !== MeshoptFilter.NONE) {\n    let array = accessor.getNormalized() ? decodeNormalizedIntArray(accessor) : new Float32Array(result.array);\n    switch (filter) {\n      case MeshoptFilter.EXPONENTIAL:\n        // → K single-precision floating point values.\n        result.byteStride = accessor.getElementSize() * 4;\n        result.componentType = FLOAT;\n        result.normalized = false;\n        result.array = encoder.encodeFilterExp(array, accessor.getCount(), result.byteStride, bits);\n        break;\n      case MeshoptFilter.OCTAHEDRAL:\n        // → four 8- or 16-bit normalized values.\n        result.byteStride = bits > 8 ? 8 : 4;\n        result.componentType = bits > 8 ? SHORT : BYTE;\n        result.normalized = true;\n        array = accessor.getElementSize() === 3 ? padNormals(array) : array;\n        result.array = encoder.encodeFilterOct(array, accessor.getCount(), result.byteStride, bits);\n        break;\n      case MeshoptFilter.QUATERNION:\n        // → four 16-bit normalized values.\n        result.byteStride = 8;\n        result.componentType = SHORT;\n        result.normalized = true;\n        result.array = encoder.encodeFilterQuat(array, accessor.getCount(), result.byteStride, bits);\n        break;\n      default:\n        throw new Error('Invalid filter.');\n    }\n    result.min = accessor.getMin([]);\n    result.max = accessor.getMax([]);\n    if (accessor.getNormalized()) {\n      result.min = result.min.map(v => decodeNormalizedInt(v, accessor.getComponentType()));\n      result.max = result.max.map(v => decodeNormalizedInt(v, accessor.getComponentType()));\n    }\n    if (result.normalized) {\n      result.min = result.min.map(v => encodeNormalizedInt(v, result.componentType));\n      result.max = result.max.map(v => encodeNormalizedInt(v, result.componentType));\n    }\n  } else if (result.byteStride % 4) {\n    result.array = padArrayElements(result.array, accessor.getElementSize());\n    result.byteStride = result.array.byteLength / accessor.getCount();\n  }\n  return result;\n}\nfunction decodeNormalizedIntArray(attribute) {\n  const componentType = attribute.getComponentType();\n  const srcArray = attribute.getArray();\n  const dstArray = new Float32Array(srcArray.length);\n  for (let i = 0; i < srcArray.length; i++) {\n    dstArray[i] = decodeNormalizedInt(srcArray[i], componentType);\n  }\n  return dstArray;\n}\n/** Pads array to 4 byte alignment, required for Meshopt ATTRIBUTE buffer views. */\nfunction padArrayElements(srcArray, elementSize) {\n  const byteStride = BufferUtils.padNumber(srcArray.BYTES_PER_ELEMENT * elementSize);\n  const elementStride = byteStride / srcArray.BYTES_PER_ELEMENT;\n  const elementCount = srcArray.length / elementSize;\n  const dstArray = new srcArray.constructor(elementCount * elementStride);\n  for (let i = 0; i * elementSize < srcArray.length; i++) {\n    for (let j = 0; j < elementSize; j++) {\n      dstArray[i * elementStride + j] = srcArray[i * elementSize + j];\n    }\n  }\n  return dstArray;\n}\n/** Pad normals with a .w component for octahedral encoding. */\nfunction padNormals(srcArray) {\n  const dstArray = new Float32Array(srcArray.length * 4 / 3);\n  for (let i = 0, il = srcArray.length / 3; i < il; i++) {\n    dstArray[i * 4] = srcArray[i * 3];\n    dstArray[i * 4 + 1] = srcArray[i * 3 + 1];\n    dstArray[i * 4 + 2] = srcArray[i * 3 + 2];\n  }\n  return dstArray;\n}\nfunction getMeshoptMode(accessor, usage) {\n  if (usage === WriterContext.BufferViewUsage.ELEMENT_ARRAY_BUFFER) {\n    const isTriangles = accessor.listParents().some(parent => {\n      return parent instanceof Primitive && parent.getMode() === Primitive.Mode.TRIANGLES;\n    });\n    return isTriangles ? MeshoptMode.TRIANGLES : MeshoptMode.INDICES;\n  }\n  return MeshoptMode.ATTRIBUTES;\n}\nfunction getMeshoptFilter(accessor, doc) {\n  const refs = doc.getGraph().listParentEdges(accessor).filter(edge => !(edge.getParent() instanceof Root));\n  for (const ref of refs) {\n    const refName = ref.getName();\n    const refKey = ref.getAttributes().key || '';\n    const isDelta = ref.getParent().propertyType === PropertyType.PRIMITIVE_TARGET;\n    // Indices.\n    if (refName === 'indices') return {\n      filter: MeshoptFilter.NONE\n    };\n    // Attributes.\n    //\n    // NOTES:\n    // - Vertex attributes should be filtered IFF they are _not_ quantized in\n    //   'packages/cli/src/transforms/meshopt.ts'.\n    // - POSITION and TEXCOORD_0 could use exponential filtering, but this produces broken\n    //   output in some cases (e.g. Matilda.glb), for unknown reasons. gltfpack uses manual\n    //   quantization for these attributes.\n    // - NORMAL and TANGENT attributes use Octahedral filters, but deltas in morphs do not.\n    // - When specifying bit depth for vertex attributes, check the defaults in `quantize.ts`\n    //\t and overrides in `meshopt.ts`. Don't store deltas at higher precision than base.\n    if (refName === 'attributes') {\n      if (refKey === 'POSITION') return {\n        filter: MeshoptFilter.NONE\n      };\n      if (refKey === 'TEXCOORD_0') return {\n        filter: MeshoptFilter.NONE\n      };\n      if (refKey.startsWith('JOINTS_')) return {\n        filter: MeshoptFilter.NONE\n      };\n      if (refKey.startsWith('WEIGHTS_')) return {\n        filter: MeshoptFilter.NONE\n      };\n      if (refKey === 'NORMAL' || refKey === 'TANGENT') {\n        return isDelta ? {\n          filter: MeshoptFilter.NONE\n        } : {\n          filter: MeshoptFilter.OCTAHEDRAL,\n          bits: 8\n        };\n      }\n    }\n    // Animation.\n    if (refName === 'output') {\n      const targetPath = getTargetPath(accessor);\n      if (targetPath === 'rotation') return {\n        filter: MeshoptFilter.QUATERNION,\n        bits: 16\n      };\n      if (targetPath === 'translation') return {\n        filter: MeshoptFilter.EXPONENTIAL,\n        bits: 12\n      };\n      if (targetPath === 'scale') return {\n        filter: MeshoptFilter.EXPONENTIAL,\n        bits: 12\n      };\n      return {\n        filter: MeshoptFilter.NONE\n      };\n    }\n    // See: https://github.com/donmccurdy/glTF-Transform/issues/489\n    if (refName === 'input') return {\n      filter: MeshoptFilter.NONE\n    };\n    if (refName === 'inverseBindMatrices') return {\n      filter: MeshoptFilter.NONE\n    };\n  }\n  return {\n    filter: MeshoptFilter.NONE\n  };\n}\nfunction getTargetPath(accessor) {\n  for (const sampler of accessor.listParents()) {\n    if (!(sampler instanceof AnimationSampler)) continue;\n    for (const channel of sampler.listParents()) {\n      if (!(channel instanceof AnimationChannel)) continue;\n      return channel.getTargetPath();\n    }\n  }\n  return null;\n}\n\nconst DEFAULT_ENCODER_OPTIONS$1 = {\n  method: EncoderMethod$1.QUANTIZE\n};\n/**\n * [`EXT_meshopt_compression`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Vendor/EXT_meshopt_compression/)\n * provides compression and fast decoding for geometry, morph targets, and animations.\n *\n * Meshopt compression (based on the [meshoptimizer](https://github.com/zeux/meshoptimizer)\n * library) offers a lightweight decoder with very fast runtime decompression, and is\n * appropriate for models of any size. Meshopt can reduce the transmission sizes of geometry,\n * morph targets, animation, and other numeric data stored in buffer views. When textures are\n * large, other complementary compression methods should be used as well.\n *\n * For the full benefits of meshopt compression, **apply gzip, brotli, or another lossless\n * compression method** to the resulting .glb, .gltf, or .bin files. Meshopt specifically\n * pre-optimizes assets for this purpose — without this secondary compression, the size\n * reduction is considerably less.\n *\n * Be aware that decompression happens before uploading to the GPU. While Meshopt decoding is\n * considerably faster than Draco decoding, neither compression method will improve runtime\n * performance directly. To improve framerate, you'll need to simplify the geometry by reducing\n * vertex count or draw calls — not just compress it. Finally, be aware that Meshopt compression is\n * lossy: repeatedly compressing and decompressing a model in a pipeline will lose precision, so\n * compression should generally be the last stage of an art workflow, and uncompressed original\n * files should be kept.\n *\n * The meshoptimizer library ([github](https://github.com/zeux/meshoptimizer/tree/master/js),\n * [npm](https://www.npmjs.com/package/meshoptimizer)) is a required dependency for reading or\n * writing files, and must be provided by the application. Compression may alternatively be applied\n * with the [gltfpack](https://github.com/zeux/meshoptimizer/tree/master/gltf) tool.\n *\n * ### Example — Read\n *\n * To read glTF files using Meshopt compression, ensure that the extension\n * and a decoder are registered. Geometry and other data are decompressed\n * while reading the file.\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { EXTMeshoptCompression } from '@gltf-transform/extensions';\n * import { MeshoptDecoder } from 'meshoptimizer';\n *\n * await MeshoptDecoder.ready;\n *\n * const io = new NodeIO()\n * \t.registerExtensions([EXTMeshoptCompression])\n * \t.registerDependencies({ 'meshopt.decoder': MeshoptDecoder });\n *\n * // Read and decode.\n * const document = await io.read('compressed.glb');\n * ```\n *\n * ### Example — Write\n *\n * The simplest way to apply Meshopt compression is with the {@link meshopt}\n * transform. The extension and an encoder must be registered.\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { EXTMeshoptCompression } from '@gltf-transform/extensions';\n * import { meshopt } from '@gltf-transform/functions';\n * import { MeshoptEncoder } from 'meshoptimizer';\n *\n * await MeshoptEncoder.ready;\n *\n * const io = new NodeIO()\n * \t.registerExtensions([EXTMeshoptCompression])\n * \t.registerDependencies({ 'meshopt.encoder': MeshoptEncoder });\n *\n * await document.transform(\n *   meshopt({encoder: MeshoptEncoder, level: 'medium'})\n * );\n *\n * await io.write('compressed-medium.glb', document);\n * ```\n *\n * ### Example — Advanced\n *\n * Internally, the {@link meshopt} transform reorders and quantizes vertex data\n * to preparate for compression. If you prefer different pre-processing, the\n * EXTMeshoptCompression extension can be added to the document manually:\n *\n * ```typescript\n * import { reorder, quantize } from '@gltf-transform/functions';\n * import { EXTMeshoptCompression } from '@gltf-transform/extensions';\n * import { MeshoptEncoder } from 'meshoptimizer';\n *\n * await document.transform(\n * \treorder({encoder: MeshoptEncoder}),\n * \tquantize()\n * );\n *\n * document.createExtension(EXTMeshoptCompression)\n * \t.setRequired(true)\n * \t.setEncoderOptions({ method: EXTMeshoptCompression.EncoderMethod.QUANTIZE });\n * ```\n *\n * In either case, compression is deferred until generating output with an I/O\n * class.\n */\nclass EXTMeshoptCompression extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = EXT_MESHOPT_COMPRESSION;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.BUFFER, PropertyType.PRIMITIVE];\n    /** @hidden */\n    this.prewriteTypes = [PropertyType.BUFFER, PropertyType.ACCESSOR];\n    /** @hidden */\n    this.readDependencies = ['meshopt.decoder'];\n    /** @hidden */\n    this.writeDependencies = ['meshopt.encoder'];\n    this._decoder = null;\n    this._decoderFallbackBufferMap = new Map();\n    this._encoder = null;\n    this._encoderOptions = DEFAULT_ENCODER_OPTIONS$1;\n    this._encoderFallbackBuffer = null;\n    this._encoderBufferViews = {};\n    this._encoderBufferViewData = {};\n    this._encoderBufferViewAccessors = {};\n  }\n  /** @hidden */\n  install(key, dependency) {\n    if (key === 'meshopt.decoder') {\n      this._decoder = dependency;\n    }\n    if (key === 'meshopt.encoder') {\n      this._encoder = dependency;\n    }\n    return this;\n  }\n  /**\n   * Configures Meshopt options for quality/compression tuning. The two methods rely on different\n   * pre-processing before compression, and should be compared on the basis of (a) quality/loss\n   * and (b) final asset size after _also_ applying a lossless compression such as gzip or brotli.\n   *\n   * - QUANTIZE: Default. Pre-process with {@link quantize quantize()} (lossy to specified\n   * \tprecision) before applying lossless Meshopt compression. Offers a considerable compression\n   * \tratio with or without further supercompression. Equivalent to `gltfpack -c`.\n   * - FILTER: Pre-process with lossy filters to improve compression, before applying lossless\n   *\tMeshopt compression. While output may initially be larger than with the QUANTIZE method,\n   *\tthis method will benefit more from supercompression (e.g. gzip or brotli). Equivalent to\n   * \t`gltfpack -cc`.\n   *\n   * Output with the FILTER method will generally be smaller after supercompression (e.g. gzip or\n   * brotli) is applied, but may be larger than QUANTIZE output without it. Decoding is very fast\n   * with both methods.\n   *\n   * Example:\n   *\n   * ```ts\n   * import { EXTMeshoptCompression } from '@gltf-transform/extensions';\n   *\n   * doc.createExtension(EXTMeshoptCompression)\n   * \t.setRequired(true)\n   * \t.setEncoderOptions({\n   * \t\tmethod: EXTMeshoptCompression.EncoderMethod.QUANTIZE\n   * \t});\n   * ```\n   */\n  setEncoderOptions(options) {\n    this._encoderOptions = _extends({}, DEFAULT_ENCODER_OPTIONS$1, options);\n    return this;\n  }\n  /**********************************************************************************************\n   * Decoding.\n   */\n  /** @internal Checks preconditions, decodes buffer views, and creates decoded primitives. */\n  preread(context, propertyType) {\n    if (!this._decoder) {\n      if (!this.isRequired()) return this;\n      throw new Error(`[${EXT_MESHOPT_COMPRESSION}] Please install extension dependency, \"meshopt.decoder\".`);\n    }\n    if (!this._decoder.supported) {\n      if (!this.isRequired()) return this;\n      throw new Error(`[${EXT_MESHOPT_COMPRESSION}]: Missing WASM support.`);\n    }\n    if (propertyType === PropertyType.BUFFER) {\n      this._prereadBuffers(context);\n    } else if (propertyType === PropertyType.PRIMITIVE) {\n      this._prereadPrimitives(context);\n    }\n    return this;\n  }\n  /** @internal Decode buffer views. */\n  _prereadBuffers(context) {\n    const jsonDoc = context.jsonDoc;\n    const viewDefs = jsonDoc.json.bufferViews || [];\n    viewDefs.forEach((viewDef, index) => {\n      if (!viewDef.extensions || !viewDef.extensions[EXT_MESHOPT_COMPRESSION]) return;\n      const meshoptDef = viewDef.extensions[EXT_MESHOPT_COMPRESSION];\n      const byteOffset = meshoptDef.byteOffset || 0;\n      const byteLength = meshoptDef.byteLength || 0;\n      const count = meshoptDef.count;\n      const stride = meshoptDef.byteStride;\n      const result = new Uint8Array(count * stride);\n      const bufferDef = jsonDoc.json.buffers[meshoptDef.buffer];\n      // TODO(cleanup): Should be encapsulated in writer-context.ts.\n      const resource = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n      const source = BufferUtils.toView(resource, byteOffset, byteLength);\n      this._decoder.decodeGltfBuffer(result, count, stride, source, meshoptDef.mode, meshoptDef.filter);\n      context.bufferViews[index] = result;\n    });\n  }\n  /**\n   * Mark fallback buffers and replacements.\n   *\n   * Note: Alignment with primitives is arbitrary; this just needs to happen\n   * after Buffers have been parsed.\n   * @internal\n   */\n  _prereadPrimitives(context) {\n    const jsonDoc = context.jsonDoc;\n    const viewDefs = jsonDoc.json.bufferViews || [];\n    //\n    viewDefs.forEach(viewDef => {\n      if (!viewDef.extensions || !viewDef.extensions[EXT_MESHOPT_COMPRESSION]) return;\n      const meshoptDef = viewDef.extensions[EXT_MESHOPT_COMPRESSION];\n      const buffer = context.buffers[meshoptDef.buffer];\n      const fallbackBuffer = context.buffers[viewDef.buffer];\n      const fallbackBufferDef = jsonDoc.json.buffers[viewDef.buffer];\n      if (isFallbackBuffer(fallbackBufferDef)) {\n        this._decoderFallbackBufferMap.set(fallbackBuffer, buffer);\n      }\n    });\n  }\n  /** @hidden Removes Fallback buffers, if extension is required. */\n  read(_context) {\n    if (!this.isRequired()) return this;\n    // Replace fallback buffers.\n    for (const [fallbackBuffer, buffer] of this._decoderFallbackBufferMap) {\n      for (const parent of fallbackBuffer.listParents()) {\n        if (parent instanceof Accessor) {\n          parent.swap(fallbackBuffer, buffer);\n        }\n      }\n      fallbackBuffer.dispose();\n    }\n    return this;\n  }\n  /**********************************************************************************************\n   * Encoding.\n   */\n  /** @internal Claims accessors that can be compressed and writes compressed buffer views. */\n  prewrite(context, propertyType) {\n    if (propertyType === PropertyType.ACCESSOR) {\n      this._prewriteAccessors(context);\n    } else if (propertyType === PropertyType.BUFFER) {\n      this._prewriteBuffers(context);\n    }\n    return this;\n  }\n  /** @internal Claims accessors that can be compressed. */\n  _prewriteAccessors(context) {\n    const json = context.jsonDoc.json;\n    const encoder = this._encoder;\n    const options = this._encoderOptions;\n    const graph = this.document.getGraph();\n    const fallbackBuffer = this.document.createBuffer(); // Disposed on write.\n    const fallbackBufferIndex = this.document.getRoot().listBuffers().indexOf(fallbackBuffer);\n    let nextID = 1;\n    const parentToID = new Map();\n    const getParentID = property => {\n      for (const parent of graph.listParents(property)) {\n        if (parent.propertyType === PropertyType.ROOT) continue;\n        let id = parentToID.get(property);\n        if (id === undefined) parentToID.set(property, id = nextID++);\n        return id;\n      }\n      return -1;\n    };\n    this._encoderFallbackBuffer = fallbackBuffer;\n    this._encoderBufferViews = {};\n    this._encoderBufferViewData = {};\n    this._encoderBufferViewAccessors = {};\n    for (const accessor of this.document.getRoot().listAccessors()) {\n      // See: https://github.com/donmccurdy/glTF-Transform/pull/323#issuecomment-898791251\n      // Example: https://skfb.ly/6qAD8\n      if (getTargetPath(accessor) === 'weights') continue;\n      // See: https://github.com/donmccurdy/glTF-Transform/issues/289\n      if (accessor.getSparse()) continue;\n      const usage = context.getAccessorUsage(accessor);\n      const parentID = context.accessorUsageGroupedByParent.has(usage) ? getParentID(accessor) : null;\n      const mode = getMeshoptMode(accessor, usage);\n      const filter = options.method === EncoderMethod$1.FILTER ? getMeshoptFilter(accessor, this.document) : {\n        filter: MeshoptFilter.NONE\n      };\n      const preparedAccessor = prepareAccessor(accessor, encoder, mode, filter);\n      const {\n        array,\n        byteStride\n      } = preparedAccessor;\n      const buffer = accessor.getBuffer();\n      if (!buffer) throw new Error(`${EXT_MESHOPT_COMPRESSION}: Missing buffer for accessor.`);\n      const bufferIndex = this.document.getRoot().listBuffers().indexOf(buffer);\n      // Buffer view grouping key.\n      const key = [usage, parentID, mode, filter.filter, byteStride, bufferIndex].join(':');\n      let bufferView = this._encoderBufferViews[key];\n      let bufferViewData = this._encoderBufferViewData[key];\n      let bufferViewAccessors = this._encoderBufferViewAccessors[key];\n      // Write new buffer view, if needed.\n      if (!bufferView || !bufferViewData) {\n        bufferViewAccessors = this._encoderBufferViewAccessors[key] = [];\n        bufferViewData = this._encoderBufferViewData[key] = [];\n        bufferView = this._encoderBufferViews[key] = {\n          buffer: fallbackBufferIndex,\n          target: WriterContext.USAGE_TO_TARGET[usage],\n          byteOffset: 0,\n          byteLength: 0,\n          byteStride: usage === WriterContext.BufferViewUsage.ARRAY_BUFFER ? byteStride : undefined,\n          extensions: {\n            [EXT_MESHOPT_COMPRESSION]: {\n              buffer: bufferIndex,\n              byteOffset: 0,\n              byteLength: 0,\n              mode: mode,\n              filter: filter.filter !== MeshoptFilter.NONE ? filter.filter : undefined,\n              byteStride: byteStride,\n              count: 0\n            }\n          }\n        };\n      }\n      // Write accessor.\n      const accessorDef = context.createAccessorDef(accessor);\n      accessorDef.componentType = preparedAccessor.componentType;\n      accessorDef.normalized = preparedAccessor.normalized;\n      accessorDef.byteOffset = bufferView.byteLength;\n      if (accessorDef.min && preparedAccessor.min) accessorDef.min = preparedAccessor.min;\n      if (accessorDef.max && preparedAccessor.max) accessorDef.max = preparedAccessor.max;\n      context.accessorIndexMap.set(accessor, json.accessors.length);\n      json.accessors.push(accessorDef);\n      bufferViewAccessors.push(accessorDef);\n      // Update buffer view.\n      bufferViewData.push(new Uint8Array(array.buffer, array.byteOffset, array.byteLength));\n      bufferView.byteLength += array.byteLength;\n      bufferView.extensions.EXT_meshopt_compression.count += accessor.getCount();\n    }\n  }\n  /** @internal Writes compressed buffer views. */\n  _prewriteBuffers(context) {\n    const encoder = this._encoder;\n    for (const key in this._encoderBufferViews) {\n      const bufferView = this._encoderBufferViews[key];\n      const bufferViewData = this._encoderBufferViewData[key];\n      const buffer = this.document.getRoot().listBuffers()[bufferView.extensions[EXT_MESHOPT_COMPRESSION].buffer];\n      const otherBufferViews = context.otherBufferViews.get(buffer) || [];\n      const {\n        count,\n        byteStride,\n        mode\n      } = bufferView.extensions[EXT_MESHOPT_COMPRESSION];\n      const srcArray = BufferUtils.concat(bufferViewData);\n      const dstArray = encoder.encodeGltfBuffer(srcArray, count, byteStride, mode);\n      const compressedData = BufferUtils.pad(dstArray);\n      bufferView.extensions[EXT_MESHOPT_COMPRESSION].byteLength = dstArray.byteLength;\n      bufferViewData.length = 0;\n      bufferViewData.push(compressedData);\n      otherBufferViews.push(compressedData);\n      context.otherBufferViews.set(buffer, otherBufferViews);\n    }\n  }\n  /** @hidden Puts encoded data into glTF output. */\n  write(context) {\n    let fallbackBufferByteOffset = 0;\n    // Write final encoded buffer view properties.\n    for (const key in this._encoderBufferViews) {\n      const bufferView = this._encoderBufferViews[key];\n      const bufferViewData = this._encoderBufferViewData[key][0];\n      const bufferViewIndex = context.otherBufferViewsIndexMap.get(bufferViewData);\n      const bufferViewAccessors = this._encoderBufferViewAccessors[key];\n      for (const accessorDef of bufferViewAccessors) {\n        accessorDef.bufferView = bufferViewIndex;\n      }\n      const finalBufferViewDef = context.jsonDoc.json.bufferViews[bufferViewIndex];\n      const compressedByteOffset = finalBufferViewDef.byteOffset || 0;\n      Object.assign(finalBufferViewDef, bufferView);\n      finalBufferViewDef.byteOffset = fallbackBufferByteOffset;\n      const bufferViewExtensionDef = finalBufferViewDef.extensions[EXT_MESHOPT_COMPRESSION];\n      bufferViewExtensionDef.byteOffset = compressedByteOffset;\n      fallbackBufferByteOffset += BufferUtils.padNumber(bufferView.byteLength);\n    }\n    // Write final fallback buffer.\n    const fallbackBuffer = this._encoderFallbackBuffer;\n    const fallbackBufferIndex = context.bufferIndexMap.get(fallbackBuffer);\n    const fallbackBufferDef = context.jsonDoc.json.buffers[fallbackBufferIndex];\n    fallbackBufferDef.byteLength = fallbackBufferByteOffset;\n    fallbackBufferDef.extensions = {\n      [EXT_MESHOPT_COMPRESSION]: {\n        fallback: true\n      }\n    };\n    fallbackBuffer.dispose();\n    return this;\n  }\n}\nEXTMeshoptCompression.EXTENSION_NAME = EXT_MESHOPT_COMPRESSION;\nEXTMeshoptCompression.EncoderMethod = EncoderMethod$1;\n\nclass AVIFImageUtils {\n  match(array) {\n    return array.length >= 12 && BufferUtils.decodeText(array.slice(4, 12)) === 'ftypavif';\n  }\n  /**\n   * Probes size of AVIF or HEIC image. Assumes a single static image, without\n   * orientation or other metadata that would affect dimensions.\n   */\n  getSize(array) {\n    if (!this.match(array)) return null;\n    // References:\n    // - https://stackoverflow.com/questions/66222773/how-to-get-image-dimensions-from-an-avif-file\n    // - https://github.com/nodeca/probe-image-size/blob/master/lib/parse_sync/avif.js\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    let box = unbox(view, 0);\n    if (!box) return null;\n    let offset = box.end;\n    while (box = unbox(view, offset)) {\n      if (box.type === 'meta') {\n        offset = box.start + 4; // version + flags\n      } else if (box.type === 'iprp' || box.type === 'ipco') {\n        offset = box.start;\n      } else if (box.type === 'ispe') {\n        return [view.getUint32(box.start + 4), view.getUint32(box.start + 8)];\n      } else if (box.type === 'mdat') {\n        break; // mdat should be last, unlikely to find metadata past here.\n      } else {\n        offset = box.end;\n      }\n    }\n    return null;\n  }\n  getChannels(_buffer) {\n    return 4;\n  }\n}\n/**\n * [`EXT_texture_avif`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_avif/)\n * enables AVIF images for any material texture.\n *\n * AVIF offers greatly reduced transmission size, but\n * [requires browser support](https://caniuse.com/avif). Like PNG and JPEG, an AVIF image is\n * *fully decompressed* when uploaded to the GPU, which increases upload time and GPU memory cost.\n * For seamless uploads and minimal GPU memory cost, it is necessary to use a GPU texture format\n * like Basis Universal, with the `KHR_texture_basisu` extension.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the\n * {@link Document}, and affects the entire Document by allowing use of the `image/avif` MIME type\n * and passing AVIF image data to the {@link Texture.setImage} method. Without the Extension, the\n * same MIME types and image data would yield an invalid glTF document, under the stricter core glTF\n * specification.\n *\n * Properties:\n * - N/A\n *\n * ### Example\n *\n * ```typescript\n * import { TextureAVIF } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const avifExtension = document.createExtension(TextureAVIF)\n * \t.setRequired(true);\n * document.createTexture('MyAVIFTexture')\n * \t.setMimeType('image/avif')\n * \t.setImage(fs.readFileSync('my-texture.avif'));\n * ```\n *\n * AVIF conversion is not done automatically when adding the extension as shown above — you must\n * convert the image data first, then pass the `.avif` payload to {@link Texture.setImage}.\n *\n * When the `EXT_texture_avif` extension is added to a file by glTF-Transform, the extension should\n * always be required. This tool does not support writing assets that \"fall back\" to optional PNG or\n * JPEG image data.\n */\nclass EXTTextureAVIF extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = EXT_TEXTURE_AVIF;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.TEXTURE];\n  }\n  /** @hidden */\n  static register() {\n    ImageUtils.registerFormat('image/avif', new AVIFImageUtils());\n  }\n  /** @hidden */\n  preread(context) {\n    const textureDefs = context.jsonDoc.json.textures || [];\n    textureDefs.forEach(textureDef => {\n      if (textureDef.extensions && textureDef.extensions[EXT_TEXTURE_AVIF]) {\n        textureDef.source = textureDef.extensions[EXT_TEXTURE_AVIF].source;\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listTextures().forEach(texture => {\n      if (texture.getMimeType() === 'image/avif') {\n        const imageIndex = context.imageIndexMap.get(texture);\n        const textureDefs = jsonDoc.json.textures || [];\n        textureDefs.forEach(textureDef => {\n          if (textureDef.source === imageIndex) {\n            textureDef.extensions = textureDef.extensions || {};\n            textureDef.extensions[EXT_TEXTURE_AVIF] = {\n              source: textureDef.source\n            };\n            delete textureDef.source;\n          }\n        });\n      }\n    });\n    return this;\n  }\n}\nEXTTextureAVIF.EXTENSION_NAME = EXT_TEXTURE_AVIF;\nfunction unbox(data, offset) {\n  if (data.byteLength < 4 + offset) return null;\n  // size includes first 4 bytes (length)\n  const size = data.getUint32(offset);\n  if (data.byteLength < size + offset || size < 8) return null;\n  return {\n    type: BufferUtils.decodeText(new Uint8Array(data.buffer, data.byteOffset + offset + 4, 4)),\n    start: offset + 8,\n    end: offset + size\n  };\n}\n\nclass WEBPImageUtils {\n  match(array) {\n    return array.length >= 12 && array[8] === 87 && array[9] === 69 && array[10] === 66 && array[11] === 80;\n  }\n  getSize(array) {\n    // Reference: http://tools.ietf.org/html/rfc6386\n    const RIFF = BufferUtils.decodeText(array.slice(0, 4));\n    const WEBP = BufferUtils.decodeText(array.slice(8, 12));\n    if (RIFF !== 'RIFF' || WEBP !== 'WEBP') return null;\n    const view = new DataView(array.buffer, array.byteOffset);\n    // Reference: https://wiki.tcl-lang.org/page/Reading+WEBP+image+dimensions\n    let offset = 12;\n    while (offset < view.byteLength) {\n      const chunkId = BufferUtils.decodeText(new Uint8Array([view.getUint8(offset), view.getUint8(offset + 1), view.getUint8(offset + 2), view.getUint8(offset + 3)]));\n      const chunkByteLength = view.getUint32(offset + 4, true);\n      if (chunkId === 'VP8 ') {\n        const width = view.getInt16(offset + 14, true) & 0x3fff;\n        const height = view.getInt16(offset + 16, true) & 0x3fff;\n        return [width, height];\n      } else if (chunkId === 'VP8L') {\n        const b0 = view.getUint8(offset + 9);\n        const b1 = view.getUint8(offset + 10);\n        const b2 = view.getUint8(offset + 11);\n        const b3 = view.getUint8(offset + 12);\n        const width = 1 + ((b1 & 0x3f) << 8 | b0);\n        const height = 1 + ((b3 & 0xf) << 10 | b2 << 2 | (b1 & 0xc0) >> 6);\n        return [width, height];\n      }\n      offset += 8 + chunkByteLength + chunkByteLength % 2;\n    }\n    return null;\n  }\n  getChannels(_buffer) {\n    return 4;\n  }\n}\n/**\n * [`EXT_texture_webp`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_webp/)\n * enables WebP images for any material texture.\n *\n * WebP offers greatly reduced transmission size, but\n * [requires browser support](https://caniuse.com/webp). Like PNG and JPEG, a WebP image is\n * *fully decompressed* when uploaded to the GPU, which increases upload time and GPU memory cost.\n * For seamless uploads and minimal GPU memory cost, it is necessary to use a GPU texture format\n * like Basis Universal, with the `KHR_texture_basisu` extension.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the\n * {@link Document}, and affects the entire Document by allowing use of the `image/webp` MIME type\n * and passing WebP image data to the {@link Texture.setImage} method. Without the Extension, the\n * same MIME types and image data would yield an invalid glTF document, under the stricter core glTF\n * specification.\n *\n * Properties:\n * - N/A\n *\n * ### Example\n *\n * ```typescript\n * import { EXTTextureWebP } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const webpExtension = document.createExtension(EXTTextureWebP)\n * \t.setRequired(true);\n * document.createTexture('MyWebPTexture')\n * \t.setMimeType('image/webp')\n * \t.setImage(fs.readFileSync('my-texture.webp'));\n * ```\n *\n * WebP conversion is not done automatically when adding the extension as shown above — you must\n * convert the image data first, then pass the `.webp` payload to {@link Texture.setImage}.\n *\n * When the `EXT_texture_webp` extension is added to a file by glTF-Transform, the extension should\n * always be required. This tool does not support writing assets that \"fall back\" to optional PNG or\n * JPEG image data.\n */\nclass EXTTextureWebP extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = EXT_TEXTURE_WEBP;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.TEXTURE];\n  }\n  /** @hidden */\n  static register() {\n    ImageUtils.registerFormat('image/webp', new WEBPImageUtils());\n  }\n  /** @hidden */\n  preread(context) {\n    const textureDefs = context.jsonDoc.json.textures || [];\n    textureDefs.forEach(textureDef => {\n      if (textureDef.extensions && textureDef.extensions[EXT_TEXTURE_WEBP]) {\n        textureDef.source = textureDef.extensions[EXT_TEXTURE_WEBP].source;\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listTextures().forEach(texture => {\n      if (texture.getMimeType() === 'image/webp') {\n        const imageIndex = context.imageIndexMap.get(texture);\n        const textureDefs = jsonDoc.json.textures || [];\n        textureDefs.forEach(textureDef => {\n          if (textureDef.source === imageIndex) {\n            textureDef.extensions = textureDef.extensions || {};\n            textureDef.extensions[EXT_TEXTURE_WEBP] = {\n              source: textureDef.source\n            };\n            delete textureDef.source;\n          }\n        });\n      }\n    });\n    return this;\n  }\n}\nEXTTextureWebP.EXTENSION_NAME = EXT_TEXTURE_WEBP;\n\nlet decoderModule;\n// Initialized when decoder module loads.\nlet COMPONENT_ARRAY;\nlet DATA_TYPE;\nfunction decodeGeometry(decoder, data) {\n  const buffer = new decoderModule.DecoderBuffer();\n  try {\n    buffer.Init(data, data.length);\n    const geometryType = decoder.GetEncodedGeometryType(buffer);\n    if (geometryType !== decoderModule.TRIANGULAR_MESH) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Unknown geometry type.`);\n    }\n    const dracoMesh = new decoderModule.Mesh();\n    const status = decoder.DecodeBufferToMesh(buffer, dracoMesh);\n    if (!status.ok() || dracoMesh.ptr === 0) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Decoding failure.`);\n    }\n    return dracoMesh;\n  } finally {\n    decoderModule.destroy(buffer);\n  }\n}\nfunction decodeIndex(decoder, mesh) {\n  const numFaces = mesh.num_faces();\n  const numIndices = numFaces * 3;\n  let ptr;\n  let indices;\n  if (mesh.num_points() <= 65534) {\n    const byteLength = numIndices * Uint16Array.BYTES_PER_ELEMENT;\n    ptr = decoderModule._malloc(byteLength);\n    decoder.GetTrianglesUInt16Array(mesh, byteLength, ptr);\n    indices = new Uint16Array(decoderModule.HEAPU16.buffer, ptr, numIndices).slice();\n  } else {\n    const byteLength = numIndices * Uint32Array.BYTES_PER_ELEMENT;\n    ptr = decoderModule._malloc(byteLength);\n    decoder.GetTrianglesUInt32Array(mesh, byteLength, ptr);\n    indices = new Uint32Array(decoderModule.HEAPU32.buffer, ptr, numIndices).slice();\n  }\n  decoderModule._free(ptr);\n  return indices;\n}\nfunction decodeAttribute(decoder, mesh, attribute, accessorDef) {\n  const dataType = DATA_TYPE[accessorDef.componentType];\n  const ArrayCtor = COMPONENT_ARRAY[accessorDef.componentType];\n  const numComponents = attribute.num_components();\n  const numPoints = mesh.num_points();\n  const numValues = numPoints * numComponents;\n  const byteLength = numValues * ArrayCtor.BYTES_PER_ELEMENT;\n  const ptr = decoderModule._malloc(byteLength);\n  decoder.GetAttributeDataArrayForAllPoints(mesh, attribute, dataType, byteLength, ptr);\n  const array = new ArrayCtor(decoderModule.HEAPF32.buffer, ptr, numValues).slice();\n  decoderModule._free(ptr);\n  return array;\n}\nfunction initDecoderModule(_decoderModule) {\n  decoderModule = _decoderModule;\n  COMPONENT_ARRAY = {\n    [Accessor.ComponentType.FLOAT]: Float32Array,\n    [Accessor.ComponentType.UNSIGNED_INT]: Uint32Array,\n    [Accessor.ComponentType.UNSIGNED_SHORT]: Uint16Array,\n    [Accessor.ComponentType.UNSIGNED_BYTE]: Uint8Array,\n    [Accessor.ComponentType.SHORT]: Int16Array,\n    [Accessor.ComponentType.BYTE]: Int8Array\n  };\n  DATA_TYPE = {\n    [Accessor.ComponentType.FLOAT]: decoderModule.DT_FLOAT32,\n    [Accessor.ComponentType.UNSIGNED_INT]: decoderModule.DT_UINT32,\n    [Accessor.ComponentType.UNSIGNED_SHORT]: decoderModule.DT_UINT16,\n    [Accessor.ComponentType.UNSIGNED_BYTE]: decoderModule.DT_UINT8,\n    [Accessor.ComponentType.SHORT]: decoderModule.DT_INT16,\n    [Accessor.ComponentType.BYTE]: decoderModule.DT_INT8\n  };\n}\n\nlet encoderModule;\nvar EncoderMethod;\n(function (EncoderMethod) {\n  EncoderMethod[EncoderMethod[\"EDGEBREAKER\"] = 1] = \"EDGEBREAKER\";\n  EncoderMethod[EncoderMethod[\"SEQUENTIAL\"] = 0] = \"SEQUENTIAL\";\n})(EncoderMethod || (EncoderMethod = {}));\nvar AttributeEnum;\n(function (AttributeEnum) {\n  AttributeEnum[\"POSITION\"] = \"POSITION\";\n  AttributeEnum[\"NORMAL\"] = \"NORMAL\";\n  AttributeEnum[\"COLOR\"] = \"COLOR\";\n  AttributeEnum[\"TEX_COORD\"] = \"TEX_COORD\";\n  AttributeEnum[\"GENERIC\"] = \"GENERIC\";\n})(AttributeEnum || (AttributeEnum = {}));\nconst DEFAULT_QUANTIZATION_BITS = {\n  [AttributeEnum.POSITION]: 14,\n  [AttributeEnum.NORMAL]: 10,\n  [AttributeEnum.COLOR]: 8,\n  [AttributeEnum.TEX_COORD]: 12,\n  [AttributeEnum.GENERIC]: 12\n};\nconst DEFAULT_ENCODER_OPTIONS = {\n  decodeSpeed: 5,\n  encodeSpeed: 5,\n  method: EncoderMethod.EDGEBREAKER,\n  quantizationBits: DEFAULT_QUANTIZATION_BITS,\n  quantizationVolume: 'mesh'\n};\nfunction initEncoderModule(_encoderModule) {\n  encoderModule = _encoderModule;\n}\n/**\n * References:\n * - https://github.com/mrdoob/three.js/blob/dev/examples/js/exporters/DRACOExporter.js\n * - https://github.com/CesiumGS/gltf-pipeline/blob/master/lib/compressDracoMeshes.js\n */\nfunction encodeGeometry(prim, _options = DEFAULT_ENCODER_OPTIONS) {\n  const options = _extends({}, DEFAULT_ENCODER_OPTIONS, _options);\n  options.quantizationBits = _extends({}, DEFAULT_QUANTIZATION_BITS, _options.quantizationBits);\n  const builder = new encoderModule.MeshBuilder();\n  const mesh = new encoderModule.Mesh();\n  const encoder = new encoderModule.ExpertEncoder(mesh);\n  const attributeIDs = {};\n  const dracoBuffer = new encoderModule.DracoInt8Array();\n  const hasMorphTargets = prim.listTargets().length > 0;\n  let hasSparseAttributes = false;\n  for (const semantic of prim.listSemantics()) {\n    const attribute = prim.getAttribute(semantic);\n    if (attribute.getSparse()) {\n      hasSparseAttributes = true;\n      continue;\n    }\n    const attributeEnum = getAttributeEnum(semantic);\n    const attributeID = addAttribute(builder, attribute.getComponentType(), mesh, encoderModule[attributeEnum], attribute.getCount(), attribute.getElementSize(), attribute.getArray());\n    if (attributeID === -1) throw new Error(`Error compressing \"${semantic}\" attribute.`);\n    attributeIDs[semantic] = attributeID;\n    if (options.quantizationVolume === 'mesh' || semantic !== 'POSITION') {\n      encoder.SetAttributeQuantization(attributeID, options.quantizationBits[attributeEnum]);\n    } else if (typeof options.quantizationVolume === 'object') {\n      const {\n        quantizationVolume\n      } = options;\n      const range = Math.max(quantizationVolume.max[0] - quantizationVolume.min[0], quantizationVolume.max[1] - quantizationVolume.min[1], quantizationVolume.max[2] - quantizationVolume.min[2]);\n      encoder.SetAttributeExplicitQuantization(attributeID, options.quantizationBits[attributeEnum], attribute.getElementSize(), quantizationVolume.min, range);\n    } else {\n      throw new Error('Invalid quantization volume state.');\n    }\n  }\n  const indices = prim.getIndices();\n  if (!indices) throw new EncodingError('Primitive must have indices.');\n  builder.AddFacesToMesh(mesh, indices.getCount() / 3, indices.getArray());\n  encoder.SetSpeedOptions(options.encodeSpeed, options.decodeSpeed);\n  encoder.SetTrackEncodedProperties(true);\n  // TODO(cleanup): Use edgebreaker without deduplication if possible.\n  // See https://github.com/google/draco/issues/929.\n  if (options.method === EncoderMethod.SEQUENTIAL || hasMorphTargets || hasSparseAttributes) {\n    encoder.SetEncodingMethod(encoderModule.MESH_SEQUENTIAL_ENCODING);\n  } else {\n    encoder.SetEncodingMethod(encoderModule.MESH_EDGEBREAKER_ENCODING);\n  }\n  // Encode, preserving vertex order for primitives with morph targets and sparse accessors.\n  const byteLength = encoder.EncodeToDracoBuffer(!(hasMorphTargets || hasSparseAttributes), dracoBuffer);\n  if (byteLength <= 0) throw new EncodingError('Error applying Draco compression.');\n  const data = new Uint8Array(byteLength);\n  for (let i = 0; i < byteLength; ++i) {\n    data[i] = dracoBuffer.GetValue(i);\n  }\n  const numVertices = encoder.GetNumberOfEncodedPoints();\n  const numIndices = encoder.GetNumberOfEncodedFaces() * 3;\n  encoderModule.destroy(dracoBuffer);\n  encoderModule.destroy(mesh);\n  encoderModule.destroy(builder);\n  encoderModule.destroy(encoder);\n  return {\n    numVertices,\n    numIndices,\n    data,\n    attributeIDs\n  };\n}\nfunction getAttributeEnum(semantic) {\n  if (semantic === 'POSITION') {\n    return AttributeEnum.POSITION;\n  } else if (semantic === 'NORMAL') {\n    return AttributeEnum.NORMAL;\n  } else if (semantic.startsWith('COLOR_')) {\n    return AttributeEnum.COLOR;\n  } else if (semantic.startsWith('TEXCOORD_')) {\n    return AttributeEnum.TEX_COORD;\n  }\n  return AttributeEnum.GENERIC;\n}\nfunction addAttribute(builder, componentType, mesh, attribute, count, itemSize, array) {\n  switch (componentType) {\n    case Accessor.ComponentType.UNSIGNED_BYTE:\n      return builder.AddUInt8Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.BYTE:\n      return builder.AddInt8Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.UNSIGNED_SHORT:\n      return builder.AddUInt16Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.SHORT:\n      return builder.AddInt16Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.UNSIGNED_INT:\n      return builder.AddUInt32Attribute(mesh, attribute, count, itemSize, array);\n    case Accessor.ComponentType.FLOAT:\n      return builder.AddFloatAttribute(mesh, attribute, count, itemSize, array);\n    default:\n      throw new Error(`Unexpected component type, \"${componentType}\".`);\n  }\n}\nclass EncodingError extends Error {}\n\n/**\n * [`KHR_draco_mesh_compression`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_draco_mesh_compression/)\n * provides advanced compression for mesh geometry.\n *\n * For models where geometry is a significant factor (>1 MB), Draco can reduce filesize by ~95%\n * in many cases. When animation or textures are large, other complementary compression methods\n * should be used as well. For geometry <1MB, the size of the WASM decoder library may outweigh\n * size savings.\n *\n * Be aware that decompression happens before uploading to the GPU — this will add some latency to\n * the parsing process, and means that compressing geometry with  Draco does _not_ affect runtime\n * performance. To improve framerate, you'll need to simplify the geometry by reducing vertex count\n * or draw calls — not just compress it. Finally, be aware that Draco compression is lossy:\n * repeatedly compressing and decompressing a model in a pipeline will lose precision, so\n * compression should generally be the last stage of an art workflow, and uncompressed original\n * files should be kept.\n *\n * A decoder or encoder from the `draco3dgltf` npm module for Node.js (or\n * [elsewhere for web](https://stackoverflow.com/a/66978236/1314762)) is required for reading and writing,\n * and must be provided by the application.\n *\n * ### Encoding options\n *\n * Two compression methods are available: 'edgebreaker' and 'sequential'. The\n * edgebreaker method will give higher compression in general, but changes the\n * order of the model's vertices. To preserve index order, use sequential\n * compression. When a mesh uses morph targets, or a high decoding speed is\n * selected, sequential compression will automatically be chosen.\n *\n * Both speed options affect the encoder's choice of algorithms. For example, a\n * requirement for fast decoding may prevent the encoder from using the best\n * compression methods even if the encoding speed is set to 0. In general, the\n * faster of the two options limits the choice of features that can be used by the\n * encoder. Setting --decodeSpeed to be faster than the --encodeSpeed may allow\n * the encoder to choose the optimal method out of the available features for the\n * given --decodeSpeed.\n *\n * ### Example — Read\n *\n * To read glTF files using Draco compression, ensure that the extension\n * and a decoder are registered. Geometry is decompressed while reading.\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { KHRDracoMeshCompression } from '@gltf-transform/extensions';\n * import draco3d from 'draco3dgltf';\n *\n * const io = new NodeIO()\n * \t.registerExtensions([KHRDracoMeshCompression])\n * \t.registerDependencies({\n * \t\t'draco3d.decoder': await draco3d.createDecoderModule()\n * \t});\n *\n * // Read and decode.\n * const document = await io.read('compressed.glb');\n * ```\n *\n * ### Example — Write\n *\n * The simplest way to apply Draco compression is with the {@link draco}\n * transform. The extension and an encoder must be registered.\n *\n * ```typescript\n * import { NodeIO } from '@gltf-transform/core';\n * import { KHRDracoMeshCompression } from '@gltf-transform/extensions';\n * import { draco } from '@gltf-transform/functions';\n * import draco3d from 'draco3dgltf';\n *\n * const io = new NodeIO()\n * \t.registerExtensions([KHRDracoMeshCompression])\n * \t.registerDependencies({\n * \t\t'draco3d.encoder': await draco3d.createEncoderModule()\n * \t});\n *\n * await document.transform(\n *   draco({method: 'edgebreaker'})\n * );\n *\n * await io.write('compressed.glb', document);\n * ```\n *\n * ### Example\n *\n * Equivalently, the KHRDracoMeshCompression extension can be added manually to a document.\n *\n * ```typescript\n * import { KHRDracoMeshCompression } from '@gltf-transform/extensions';\n *\n * document.createExtension(KHRDracoMeshCompression)\n * \t.setRequired(true)\n * \t.setEncoderOptions({\n * \t\tmethod: KHRDracoMeshCompression.EncoderMethod.EDGEBREAKER,\n * \t\tencodeSpeed: 5,\n * \t\tdecodeSpeed: 5,\n * \t});\n *\n * await io.write('compressed.glb', document);\n * ```\n *\n * In either case, Compression is deferred until generating output with an\n * I/O class.\n */\nclass KHRDracoMeshCompression extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_DRACO_MESH_COMPRESSION;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.PRIMITIVE];\n    /** @hidden */\n    this.prewriteTypes = [PropertyType.ACCESSOR];\n    /** @hidden */\n    this.readDependencies = ['draco3d.decoder'];\n    /** @hidden */\n    this.writeDependencies = ['draco3d.encoder'];\n    this._decoderModule = null;\n    this._encoderModule = null;\n    this._encoderOptions = {};\n  }\n  /** @hidden */\n  install(key, dependency) {\n    if (key === 'draco3d.decoder') {\n      this._decoderModule = dependency;\n      initDecoderModule(this._decoderModule);\n    }\n    if (key === 'draco3d.encoder') {\n      this._encoderModule = dependency;\n      initEncoderModule(this._encoderModule);\n    }\n    return this;\n  }\n  /**\n   * Sets Draco compression options. Compression does not take effect until the Document is\n   * written with an I/O class.\n   *\n   * Defaults:\n   * ```\n   * decodeSpeed?: number = 5;\n   * encodeSpeed?: number = 5;\n   * method?: EncoderMethod = EncoderMethod.EDGEBREAKER;\n   * quantizationBits?: {[ATTRIBUTE_NAME]: bits};\n   * quantizationVolume?: 'mesh' | 'scene' | bbox = 'mesh';\n   * ```\n   */\n  setEncoderOptions(options) {\n    this._encoderOptions = options;\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    if (!this._decoderModule) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Please install extension dependency, \"draco3d.decoder\".`);\n    }\n    const logger = this.document.getLogger();\n    const jsonDoc = context.jsonDoc;\n    const dracoMeshes = new Map();\n    try {\n      const meshDefs = jsonDoc.json.meshes || [];\n      for (const meshDef of meshDefs) {\n        for (const primDef of meshDef.primitives) {\n          if (!primDef.extensions || !primDef.extensions[KHR_DRACO_MESH_COMPRESSION]) continue;\n          const dracoDef = primDef.extensions[KHR_DRACO_MESH_COMPRESSION];\n          let [decoder, dracoMesh] = dracoMeshes.get(dracoDef.bufferView) || [];\n          if (!dracoMesh || !decoder) {\n            const bufferViewDef = jsonDoc.json.bufferViews[dracoDef.bufferView];\n            const bufferDef = jsonDoc.json.buffers[bufferViewDef.buffer];\n            // TODO(cleanup): Should be encapsulated in writer-context.ts.\n            const resource = bufferDef.uri ? jsonDoc.resources[bufferDef.uri] : jsonDoc.resources[GLB_BUFFER];\n            const byteOffset = bufferViewDef.byteOffset || 0;\n            const byteLength = bufferViewDef.byteLength;\n            const compressedData = BufferUtils.toView(resource, byteOffset, byteLength);\n            decoder = new this._decoderModule.Decoder();\n            dracoMesh = decodeGeometry(decoder, compressedData);\n            dracoMeshes.set(dracoDef.bufferView, [decoder, dracoMesh]);\n            logger.debug(`[${KHR_DRACO_MESH_COMPRESSION}] Decompressed ${compressedData.byteLength} bytes.`);\n          }\n          // Attributes.\n          for (const semantic in dracoDef.attributes) {\n            const accessorDef = context.jsonDoc.json.accessors[primDef.attributes[semantic]];\n            const dracoAttribute = decoder.GetAttributeByUniqueId(dracoMesh, dracoDef.attributes[semantic]);\n            const attributeArray = decodeAttribute(decoder, dracoMesh, dracoAttribute, accessorDef);\n            context.accessors[primDef.attributes[semantic]].setArray(attributeArray);\n          }\n          // Indices. Optional, see https://github.com/google/draco/issues/720.\n          if (primDef.indices !== undefined) {\n            context.accessors[primDef.indices].setArray(decodeIndex(decoder, dracoMesh));\n          }\n        }\n      }\n    } finally {\n      for (const [decoder, dracoMesh] of Array.from(dracoMeshes.values())) {\n        this._decoderModule.destroy(decoder);\n        this._decoderModule.destroy(dracoMesh);\n      }\n    }\n    return this;\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  prewrite(context, _propertyType) {\n    if (!this._encoderModule) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Please install extension dependency, \"draco3d.encoder\".`);\n    }\n    const logger = this.document.getLogger();\n    logger.debug(`[${KHR_DRACO_MESH_COMPRESSION}] Compression options: ${JSON.stringify(this._encoderOptions)}`);\n    const primitiveHashMap = listDracoPrimitives(this.document);\n    const primitiveEncodingMap = new Map();\n    let quantizationVolume = 'mesh';\n    if (this._encoderOptions.quantizationVolume === 'scene') {\n      if (this.document.getRoot().listScenes().length !== 1) {\n        logger.warn(`[${KHR_DRACO_MESH_COMPRESSION}]: quantizationVolume=scene requires exactly 1 scene.`);\n      } else {\n        quantizationVolume = getBounds(this.document.getRoot().listScenes().pop());\n      }\n    }\n    for (const prim of Array.from(primitiveHashMap.keys())) {\n      const primHash = primitiveHashMap.get(prim);\n      if (!primHash) throw new Error('Unexpected primitive.');\n      // Reuse an existing EncodedPrimitive, if possible.\n      if (primitiveEncodingMap.has(primHash)) {\n        primitiveEncodingMap.set(primHash, primitiveEncodingMap.get(primHash));\n        continue;\n      }\n      const indices = prim.getIndices(); // Condition for listDracoPrimitives().\n      const accessorDefs = context.jsonDoc.json.accessors;\n      // Create a new EncodedPrimitive.\n      let encodedPrim;\n      try {\n        encodedPrim = encodeGeometry(prim, _extends({}, this._encoderOptions, {\n          quantizationVolume\n        }));\n      } catch (e) {\n        if (e instanceof EncodingError) {\n          logger.warn(`[${KHR_DRACO_MESH_COMPRESSION}]: ${e.message} Skipping primitive compression.`);\n          continue;\n        }\n        throw e;\n      }\n      primitiveEncodingMap.set(primHash, encodedPrim);\n      // Create indices definition, update count.\n      const indicesDef = context.createAccessorDef(indices);\n      indicesDef.count = encodedPrim.numIndices;\n      context.accessorIndexMap.set(indices, accessorDefs.length);\n      accessorDefs.push(indicesDef);\n      // In rare cases Draco increases vertex count, requiring a larger index component type.\n      // https://github.com/donmccurdy/glTF-Transform/issues/1370\n      if (encodedPrim.numVertices > 65534 && Accessor.getComponentSize(indicesDef.componentType) <= 2) {\n        indicesDef.componentType = Accessor.ComponentType.UNSIGNED_INT;\n      } else if (encodedPrim.numVertices > 254 && Accessor.getComponentSize(indicesDef.componentType) <= 1) {\n        indicesDef.componentType = Accessor.ComponentType.UNSIGNED_SHORT;\n      }\n      // Create attribute definitions, update count.\n      for (const semantic of prim.listSemantics()) {\n        const attribute = prim.getAttribute(semantic);\n        if (encodedPrim.attributeIDs[semantic] === undefined) continue; // sparse\n        const attributeDef = context.createAccessorDef(attribute);\n        attributeDef.count = encodedPrim.numVertices;\n        context.accessorIndexMap.set(attribute, accessorDefs.length);\n        accessorDefs.push(attributeDef);\n      }\n      // Map compressed buffer view to a Buffer.\n      const buffer = prim.getAttribute('POSITION').getBuffer() || this.document.getRoot().listBuffers()[0];\n      if (!context.otherBufferViews.has(buffer)) context.otherBufferViews.set(buffer, []);\n      context.otherBufferViews.get(buffer).push(encodedPrim.data);\n    }\n    logger.debug(`[${KHR_DRACO_MESH_COMPRESSION}] Compressed ${primitiveHashMap.size} primitives.`);\n    context.extensionData[KHR_DRACO_MESH_COMPRESSION] = {\n      primitiveHashMap,\n      primitiveEncodingMap\n    };\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const dracoContext = context.extensionData[KHR_DRACO_MESH_COMPRESSION];\n    for (const mesh of this.document.getRoot().listMeshes()) {\n      const meshDef = context.jsonDoc.json.meshes[context.meshIndexMap.get(mesh)];\n      for (let i = 0; i < mesh.listPrimitives().length; i++) {\n        const prim = mesh.listPrimitives()[i];\n        const primDef = meshDef.primitives[i];\n        const primHash = dracoContext.primitiveHashMap.get(prim);\n        if (!primHash) continue;\n        const encodedPrim = dracoContext.primitiveEncodingMap.get(primHash);\n        if (!encodedPrim) continue;\n        primDef.extensions = primDef.extensions || {};\n        primDef.extensions[KHR_DRACO_MESH_COMPRESSION] = {\n          bufferView: context.otherBufferViewsIndexMap.get(encodedPrim.data),\n          attributes: encodedPrim.attributeIDs\n        };\n      }\n    }\n    // Omit the extension if nothing was compressed.\n    if (!dracoContext.primitiveHashMap.size) {\n      const json = context.jsonDoc.json;\n      json.extensionsUsed = (json.extensionsUsed || []).filter(name => name !== KHR_DRACO_MESH_COMPRESSION);\n      json.extensionsRequired = (json.extensionsRequired || []).filter(name => name !== KHR_DRACO_MESH_COMPRESSION);\n    }\n    return this;\n  }\n}\n/**\n * Returns a list of Primitives compatible with Draco compression. If any required preconditions\n * fail, and would break assumptions required for compression, this function will throw an error.\n */\nKHRDracoMeshCompression.EXTENSION_NAME = KHR_DRACO_MESH_COMPRESSION;\n/**\n * Compression method. `EncoderMethod.EDGEBREAKER` usually provides a higher compression ratio,\n * while `EncoderMethod.SEQUENTIAL` better preserves original vertex order.\n */\nKHRDracoMeshCompression.EncoderMethod = EncoderMethod;\nfunction listDracoPrimitives(doc) {\n  const logger = doc.getLogger();\n  const included = new Set();\n  const excluded = new Set();\n  let nonIndexed = 0;\n  let nonTriangles = 0;\n  // Support compressing only indexed, mode=TRIANGLES primitives.\n  for (const mesh of doc.getRoot().listMeshes()) {\n    for (const prim of mesh.listPrimitives()) {\n      if (!prim.getIndices()) {\n        excluded.add(prim);\n        nonIndexed++;\n      } else if (prim.getMode() !== Primitive.Mode.TRIANGLES) {\n        excluded.add(prim);\n        nonTriangles++;\n      } else {\n        included.add(prim);\n      }\n    }\n  }\n  if (nonIndexed > 0) {\n    logger.warn(`[${KHR_DRACO_MESH_COMPRESSION}] Skipping Draco compression of ${nonIndexed} non-indexed primitives.`);\n  }\n  if (nonTriangles > 0) {\n    logger.warn(`[${KHR_DRACO_MESH_COMPRESSION}] Skipping Draco compression of ${nonTriangles} non-TRIANGLES primitives.`);\n  }\n  // Create an Accessor->index mapping.\n  const accessors = doc.getRoot().listAccessors();\n  const accessorIndices = new Map();\n  for (let i = 0; i < accessors.length; i++) accessorIndices.set(accessors[i], i);\n  // For each compressed Primitive, create a hash key identifying its accessors. Map each\n  // compressed Primitive and Accessor to this hash key.\n  const includedAccessors = new Map();\n  const includedHashKeys = new Set();\n  const primToHashKey = new Map();\n  for (const prim of Array.from(included)) {\n    let hashKey = createHashKey(prim, accessorIndices);\n    // If accessors of an identical primitive have already been checked, we're done.\n    if (includedHashKeys.has(hashKey)) {\n      primToHashKey.set(prim, hashKey);\n      continue;\n    }\n    // If any accessors are already in use, but the same hashKey hasn't been written, then we\n    // need to create copies of these accessors for the current encoded primitive. We can't\n    // reuse the same compressed accessor for two encoded primitives, because Draco might\n    // change the vertex count, change the vertex order, or cause other conflicts.\n    if (includedAccessors.has(prim.getIndices())) {\n      const indices = prim.getIndices(); // Condition for 'included' list.\n      const dstIndices = indices.clone();\n      accessorIndices.set(dstIndices, doc.getRoot().listAccessors().length - 1);\n      prim.swap(indices, dstIndices); // TODO(cleanup): I/O should not modify Document.\n    }\n    for (const attribute of prim.listAttributes()) {\n      if (includedAccessors.has(attribute)) {\n        const dstAttribute = attribute.clone();\n        accessorIndices.set(dstAttribute, doc.getRoot().listAccessors().length - 1);\n        prim.swap(attribute, dstAttribute); // TODO(cleanup): I/O should not modify Document.\n      }\n    }\n    // With conflicts resolved, compute the hash key again.\n    hashKey = createHashKey(prim, accessorIndices);\n    // Commit the primitive and its accessors to the hash key.\n    includedHashKeys.add(hashKey);\n    primToHashKey.set(prim, hashKey);\n    includedAccessors.set(prim.getIndices(), hashKey);\n    for (const attribute of prim.listAttributes()) {\n      includedAccessors.set(attribute, hashKey);\n    }\n  }\n  // For each compressed Accessor, ensure that it isn't used except by a Primitive.\n  for (const accessor of Array.from(includedAccessors.keys())) {\n    const parentTypes = new Set(accessor.listParents().map(prop => prop.propertyType));\n    if (parentTypes.size !== 2 || !parentTypes.has(PropertyType.PRIMITIVE) || !parentTypes.has(PropertyType.ROOT)) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Compressed accessors must only be used as indices or vertex attributes.`);\n    }\n  }\n  // For each compressed Primitive, ensure that Accessors are mapped only to the same hash key.\n  for (const prim of Array.from(included)) {\n    const hashKey = primToHashKey.get(prim);\n    const indices = prim.getIndices(); // Condition for 'included' list.\n    if (includedAccessors.get(indices) !== hashKey || prim.listAttributes().some(attr => includedAccessors.get(attr) !== hashKey)) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Draco primitives must share all, or no, accessors.`);\n    }\n  }\n  // For each excluded Primitive, ensure that no Accessors are compressed.\n  for (const prim of Array.from(excluded)) {\n    const indices = prim.getIndices(); // Condition for 'included' list.\n    if (includedAccessors.has(indices) || prim.listAttributes().some(attr => includedAccessors.has(attr))) {\n      throw new Error(`[${KHR_DRACO_MESH_COMPRESSION}] Accessor cannot be shared by compressed and uncompressed primitives.`);\n    }\n  }\n  return primToHashKey;\n}\nfunction createHashKey(prim, indexMap) {\n  const hashElements = [];\n  const indices = prim.getIndices(); // Condition for 'included' list.\n  hashElements.push(indexMap.get(indices));\n  for (const attribute of prim.listAttributes()) {\n    hashElements.push(indexMap.get(attribute));\n  }\n  return hashElements.sort().join('|');\n}\n\n/**\n * Defines a light attached to a {@link Node}. See {@link KHRLightsPunctual}.\n */\nclass Light extends ExtensionProperty {\n  /**********************************************************************************************\n   * INSTANCE.\n   */\n  init() {\n    this.extensionName = KHR_LIGHTS_PUNCTUAL;\n    this.propertyType = 'Light';\n    this.parentTypes = [PropertyType.NODE];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      color: [1, 1, 1],\n      intensity: 1,\n      type: Light.Type.POINT,\n      range: null,\n      innerConeAngle: 0,\n      outerConeAngle: Math.PI / 4\n    });\n  }\n  /**********************************************************************************************\n   * COLOR.\n   */\n  /** Light color; Linear-sRGB components. */\n  getColor() {\n    return this.get('color');\n  }\n  /** Light color; Linear-sRGB components. */\n  setColor(color) {\n    return this.set('color', color);\n  }\n  /**********************************************************************************************\n   * INTENSITY.\n   */\n  /**\n   * Brightness of light. Units depend on the type of light: point and spot lights use luminous\n   * intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n   */\n  getIntensity() {\n    return this.get('intensity');\n  }\n  /**\n   * Brightness of light. Units depend on the type of light: point and spot lights use luminous\n   * intensity in candela (lm/sr) while directional lights use illuminance in lux (lm/m2).\n   */\n  setIntensity(intensity) {\n    return this.set('intensity', intensity);\n  }\n  /**********************************************************************************************\n   * TYPE.\n   */\n  /** Type. */\n  getType() {\n    return this.get('type');\n  }\n  /** Type. */\n  setType(type) {\n    return this.set('type', type);\n  }\n  /**********************************************************************************************\n   * RANGE.\n   */\n  /**\n   * Hint defining a distance cutoff at which the light's intensity may be considered to have\n   * reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range\n   * is assumed to be infinite.\n   */\n  getRange() {\n    return this.get('range');\n  }\n  /**\n   * Hint defining a distance cutoff at which the light's intensity may be considered to have\n   * reached zero. Supported only for point and spot lights. Must be > 0. When undefined, range\n   * is assumed to be infinite.\n   */\n  setRange(range) {\n    return this.set('range', range);\n  }\n  /**********************************************************************************************\n   * SPOT LIGHT PROPERTIES\n   */\n  /**\n   * Angle, in radians, from centre of spotlight where falloff begins. Must be >= 0 and\n   * < outerConeAngle.\n   */\n  getInnerConeAngle() {\n    return this.get('innerConeAngle');\n  }\n  /**\n   * Angle, in radians, from centre of spotlight where falloff begins. Must be >= 0 and\n   * < outerConeAngle.\n   */\n  setInnerConeAngle(angle) {\n    return this.set('innerConeAngle', angle);\n  }\n  /**\n   * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and\n   * <= PI / 2.0.\n   */\n  getOuterConeAngle() {\n    return this.get('outerConeAngle');\n  }\n  /**\n   * Angle, in radians, from centre of spotlight where falloff ends. Must be > innerConeAngle and\n   * <= PI / 2.0.\n   */\n  setOuterConeAngle(angle) {\n    return this.set('outerConeAngle', angle);\n  }\n}\nLight.EXTENSION_NAME = KHR_LIGHTS_PUNCTUAL;\n/**********************************************************************************************\n * CONSTANTS.\n */\nLight.Type = {\n  POINT: 'point',\n  SPOT: 'spot',\n  DIRECTIONAL: 'directional'\n};\n\n/**\n * [`KHR_lights_punctual`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_lights_punctual/) defines three \"punctual\" light types: directional, point and\n * spot.\n *\n * Punctual lights are parameterized, infinitely small points that emit light in\n * well-defined directions and intensities. Lights are referenced by nodes and inherit the transform\n * of that node.\n *\n * Properties:\n * - {@link Light}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRLightsPunctual, Light, LightType } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const lightsExtension = document.createExtension(KHRLightsPunctual);\n *\n * // Create a Light property.\n * const light = lightsExtension.createLight()\n *\t.setType(LightType.POINT)\n *\t.setIntensity(2.0)\n *\t.setColor([1.0, 0.0, 0.0]);\n *\n * // Attach the property to a Material.\n * node.setExtension('KHR_lights_punctual', light);\n * ```\n */\nclass KHRLightsPunctual extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_LIGHTS_PUNCTUAL;\n  }\n  /** Creates a new punctual Light property for use on a {@link Node}. */\n  createLight(name = '') {\n    return new Light(this.document.getGraph(), name);\n  }\n  /** @hidden */\n  read(context) {\n    const jsonDoc = context.jsonDoc;\n    if (!jsonDoc.json.extensions || !jsonDoc.json.extensions[KHR_LIGHTS_PUNCTUAL]) return this;\n    const rootDef = jsonDoc.json.extensions[KHR_LIGHTS_PUNCTUAL];\n    const lightDefs = rootDef.lights || [];\n    const lights = lightDefs.map(lightDef => {\n      var _lightDef$spot, _lightDef$spot2;\n      const light = this.createLight().setName(lightDef.name || '').setType(lightDef.type);\n      if (lightDef.color !== undefined) light.setColor(lightDef.color);\n      if (lightDef.intensity !== undefined) light.setIntensity(lightDef.intensity);\n      if (lightDef.range !== undefined) light.setRange(lightDef.range);\n      if (((_lightDef$spot = lightDef.spot) == null ? void 0 : _lightDef$spot.innerConeAngle) !== undefined) {\n        light.setInnerConeAngle(lightDef.spot.innerConeAngle);\n      }\n      if (((_lightDef$spot2 = lightDef.spot) == null ? void 0 : _lightDef$spot2.outerConeAngle) !== undefined) {\n        light.setOuterConeAngle(lightDef.spot.outerConeAngle);\n      }\n      return light;\n    });\n    jsonDoc.json.nodes.forEach((nodeDef, nodeIndex) => {\n      if (!nodeDef.extensions || !nodeDef.extensions[KHR_LIGHTS_PUNCTUAL]) return;\n      const lightNodeDef = nodeDef.extensions[KHR_LIGHTS_PUNCTUAL];\n      context.nodes[nodeIndex].setExtension(KHR_LIGHTS_PUNCTUAL, lights[lightNodeDef.light]);\n    });\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    if (this.properties.size === 0) return this;\n    const lightDefs = [];\n    const lightIndexMap = new Map();\n    for (const property of this.properties) {\n      const light = property;\n      const lightDef = {\n        type: light.getType()\n      };\n      if (!MathUtils.eq(light.getColor(), [1, 1, 1])) lightDef.color = light.getColor();\n      if (light.getIntensity() !== 1) lightDef.intensity = light.getIntensity();\n      if (light.getRange() != null) lightDef.range = light.getRange();\n      if (light.getName()) lightDef.name = light.getName();\n      if (light.getType() === Light.Type.SPOT) {\n        lightDef.spot = {\n          innerConeAngle: light.getInnerConeAngle(),\n          outerConeAngle: light.getOuterConeAngle()\n        };\n      }\n      lightDefs.push(lightDef);\n      lightIndexMap.set(light, lightDefs.length - 1);\n    }\n    this.document.getRoot().listNodes().forEach(node => {\n      const light = node.getExtension(KHR_LIGHTS_PUNCTUAL);\n      if (light) {\n        const nodeIndex = context.nodeIndexMap.get(node);\n        const nodeDef = jsonDoc.json.nodes[nodeIndex];\n        nodeDef.extensions = nodeDef.extensions || {};\n        nodeDef.extensions[KHR_LIGHTS_PUNCTUAL] = {\n          light: lightIndexMap.get(light)\n        };\n      }\n    });\n    jsonDoc.json.extensions = jsonDoc.json.extensions || {};\n    jsonDoc.json.extensions[KHR_LIGHTS_PUNCTUAL] = {\n      lights: lightDefs\n    };\n    return this;\n  }\n}\nKHRLightsPunctual.EXTENSION_NAME = KHR_LIGHTS_PUNCTUAL;\n\nconst {\n  R: R$7,\n  G: G$7,\n  B: B$5\n} = TextureChannel;\n/**\n * Defines anisotropy (directionally-dependent reflections) on a PBR {@link Material}. See\n * {@link KHRMaterialsAnisotropy}.\n */\nclass Anisotropy extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_ANISOTROPY;\n    this.propertyType = 'Anisotropy';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      anisotropyStrength: 0.0,\n      anisotropyRotation: 0.0,\n      anisotropyTexture: null,\n      anisotropyTextureInfo: new TextureInfo(this.graph, 'anisotropyTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Anisotropy strength.\n   */\n  /** Anisotropy strength. */\n  getAnisotropyStrength() {\n    return this.get('anisotropyStrength');\n  }\n  /** Anisotropy strength. */\n  setAnisotropyStrength(strength) {\n    return this.set('anisotropyStrength', strength);\n  }\n  /**********************************************************************************************\n   * Anisotropy rotation.\n   */\n  /** Anisotropy rotation; linear multiplier. */\n  getAnisotropyRotation() {\n    return this.get('anisotropyRotation');\n  }\n  /** Anisotropy rotation; linear multiplier. */\n  setAnisotropyRotation(rotation) {\n    return this.set('anisotropyRotation', rotation);\n  }\n  /**********************************************************************************************\n   * Anisotropy texture.\n   */\n  /**\n   * Anisotropy texture. Red and green channels represent the anisotropy\n   * direction in [-1, 1] tangent, bitangent space, to be rotated by\n   * anisotropyRotation. The blue channel contains strength as [0, 1] to be\n   * multiplied by anisotropyStrength.\n   */\n  getAnisotropyTexture() {\n    return this.getRef('anisotropyTexture');\n  }\n  /**\n   * Settings affecting the material's use of its anisotropy texture. If no\n   * texture is attached, {@link TextureInfo} is `null`.\n   */\n  getAnisotropyTextureInfo() {\n    return this.getRef('anisotropyTexture') ? this.getRef('anisotropyTextureInfo') : null;\n  }\n  /** Anisotropy texture. See {@link Anisotropy.getAnisotropyTexture getAnisotropyTexture}. */\n  setAnisotropyTexture(texture) {\n    return this.setRef('anisotropyTexture', texture, {\n      channels: R$7 | G$7 | B$5\n    });\n  }\n}\nAnisotropy.EXTENSION_NAME = KHR_MATERIALS_ANISOTROPY;\n\n/**\n * [`KHR_materials_anisotropy`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_anisotropy/)\n * defines anisotropy (directionally-dependent reflections) on a PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-anisotropy.jpg)\n *\n * > _**Figure:** Effect of each color channel in the anisotropyTexture. Left\n * > to right: the full anisotropy texture, filling the red channel with black,\n * > filling the green channel with black, filling the blue channel with black.\n * > Source: [Khronos Group & Wayfair](https://github.com/KhronosGroup/glTF-Sample-Assets/tree/main/Models/AnisotropyBarnLamp)._\n *\n * This extension defines the anisotropic property of a material as observable with brushed metals\n * for instance. An asymmetric specular lobe model is introduced to allow for such phenomena. The\n * visually distinct feature of that lobe is the elongated appearance of the specular reflection.\n * For a single punctual light source, the specular reflection will eventually degenerate into a\n * zero width line in the limit, that is where the material is fully anisotropic, as opposed to be\n * fully isotropic in which case the specular reflection is radially symmetric.\n *\n * Properties:\n * - {@link Anisotropy}\n *\n * ### Example\n *\n * The `KHRMaterialsAnisotropy` class provides a single {@link ExtensionProperty} type, `Anisotropy`,\n * which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsAnisotropy, Anisotropy } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const anisotropyExtension = document.createExtension(KHRMaterialsAnisotropy);\n *\n * // Create an Anisotropy property.\n * const anisotropy = anisotropyExtension.createAnisotropy()\n * \t.setAnisotropyStrength(1.0)\n * \t.setAnisotropyRotation(Math.PI / 4);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_anisotropy', anisotropy);\n * ```\n */\nclass KHRMaterialsAnisotropy extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_ANISOTROPY;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Anisotropy property for use on a {@link Material}. */\n  createAnisotropy() {\n    return new Anisotropy(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_ANISOTROPY]) {\n        const anisotropy = this.createAnisotropy();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_ANISOTROPY, anisotropy);\n        const anisotropyDef = materialDef.extensions[KHR_MATERIALS_ANISOTROPY];\n        // Factors.\n        if (anisotropyDef.anisotropyStrength !== undefined) {\n          anisotropy.setAnisotropyStrength(anisotropyDef.anisotropyStrength);\n        }\n        if (anisotropyDef.anisotropyRotation !== undefined) {\n          anisotropy.setAnisotropyRotation(anisotropyDef.anisotropyRotation);\n        }\n        // Textures.\n        if (anisotropyDef.anisotropyTexture !== undefined) {\n          const textureInfoDef = anisotropyDef.anisotropyTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          anisotropy.setAnisotropyTexture(texture);\n          context.setTextureInfo(anisotropy.getAnisotropyTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const anisotropy = material.getExtension(KHR_MATERIALS_ANISOTROPY);\n      if (anisotropy) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const anisotropyDef = materialDef.extensions[KHR_MATERIALS_ANISOTROPY] = {};\n        if (anisotropy.getAnisotropyStrength() > 0) {\n          anisotropyDef.anisotropyStrength = anisotropy.getAnisotropyStrength();\n        }\n        if (anisotropy.getAnisotropyRotation() !== 0) {\n          anisotropyDef.anisotropyRotation = anisotropy.getAnisotropyRotation();\n        }\n        // Textures.\n        if (anisotropy.getAnisotropyTexture()) {\n          const texture = anisotropy.getAnisotropyTexture();\n          const textureInfo = anisotropy.getAnisotropyTextureInfo();\n          anisotropyDef.anisotropyTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsAnisotropy.EXTENSION_NAME = KHR_MATERIALS_ANISOTROPY;\n\nconst {\n  R: R$6,\n  G: G$6,\n  B: B$4\n} = TextureChannel;\n/**\n * Defines clear coat for a PBR material. See {@link KHRMaterialsClearcoat}.\n */\nclass Clearcoat extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_CLEARCOAT;\n    this.propertyType = 'Clearcoat';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      clearcoatFactor: 0,\n      clearcoatTexture: null,\n      clearcoatTextureInfo: new TextureInfo(this.graph, 'clearcoatTextureInfo'),\n      clearcoatRoughnessFactor: 0,\n      clearcoatRoughnessTexture: null,\n      clearcoatRoughnessTextureInfo: new TextureInfo(this.graph, 'clearcoatRoughnessTextureInfo'),\n      clearcoatNormalScale: 1,\n      clearcoatNormalTexture: null,\n      clearcoatNormalTextureInfo: new TextureInfo(this.graph, 'clearcoatNormalTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Clearcoat.\n   */\n  /** Clearcoat; linear multiplier. See {@link Clearcoat.getClearcoatTexture getClearcoatTexture}. */\n  getClearcoatFactor() {\n    return this.get('clearcoatFactor');\n  }\n  /** Clearcoat; linear multiplier. See {@link Clearcoat.getClearcoatTexture getClearcoatTexture}. */\n  setClearcoatFactor(factor) {\n    return this.set('clearcoatFactor', factor);\n  }\n  /**\n   * Clearcoat texture; linear multiplier. The `r` channel of this texture specifies an amount\n   * [0-1] of coating over the surface of the material, which may have its own roughness and\n   * normal map properties.\n   */\n  getClearcoatTexture() {\n    return this.getRef('clearcoatTexture');\n  }\n  /**\n   * Settings affecting the material's use of its clearcoat texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getClearcoatTextureInfo() {\n    return this.getRef('clearcoatTexture') ? this.getRef('clearcoatTextureInfo') : null;\n  }\n  /** Sets clearcoat texture. See {@link Clearcoat.getClearcoatTexture getClearcoatTexture}. */\n  setClearcoatTexture(texture) {\n    return this.setRef('clearcoatTexture', texture, {\n      channels: R$6\n    });\n  }\n  /**********************************************************************************************\n   * Clearcoat roughness.\n   */\n  /**\n   * Clearcoat roughness; linear multiplier.\n   * See {@link Clearcoat.getClearcoatRoughnessTexture getClearcoatRoughnessTexture}.\n   */\n  getClearcoatRoughnessFactor() {\n    return this.get('clearcoatRoughnessFactor');\n  }\n  /**\n   * Clearcoat roughness; linear multiplier.\n   * See {@link Clearcoat.getClearcoatRoughnessTexture getClearcoatRoughnessTexture}.\n   */\n  setClearcoatRoughnessFactor(factor) {\n    return this.set('clearcoatRoughnessFactor', factor);\n  }\n  /**\n   * Clearcoat roughness texture; linear multiplier. The `g` channel of this texture specifies\n   * roughness, independent of the base layer's roughness.\n   */\n  getClearcoatRoughnessTexture() {\n    return this.getRef('clearcoatRoughnessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its clearcoat roughness texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getClearcoatRoughnessTextureInfo() {\n    return this.getRef('clearcoatRoughnessTexture') ? this.getRef('clearcoatRoughnessTextureInfo') : null;\n  }\n  /**\n   * Sets clearcoat roughness texture.\n   * See {@link Clearcoat.getClearcoatRoughnessTexture getClearcoatRoughnessTexture}.\n   */\n  setClearcoatRoughnessTexture(texture) {\n    return this.setRef('clearcoatRoughnessTexture', texture, {\n      channels: G$6\n    });\n  }\n  /**********************************************************************************************\n   * Clearcoat normals.\n   */\n  /** Clearcoat normal scale. See {@link Clearcoat.getClearcoatNormalTexture getClearcoatNormalTexture}. */\n  getClearcoatNormalScale() {\n    return this.get('clearcoatNormalScale');\n  }\n  /** Clearcoat normal scale. See {@link Clearcoat.getClearcoatNormalTexture getClearcoatNormalTexture}. */\n  setClearcoatNormalScale(scale) {\n    return this.set('clearcoatNormalScale', scale);\n  }\n  /**\n   * Clearcoat normal map. Independent of the material base layer normal map.\n   */\n  getClearcoatNormalTexture() {\n    return this.getRef('clearcoatNormalTexture');\n  }\n  /**\n   * Settings affecting the material's use of its clearcoat normal texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getClearcoatNormalTextureInfo() {\n    return this.getRef('clearcoatNormalTexture') ? this.getRef('clearcoatNormalTextureInfo') : null;\n  }\n  /** Sets clearcoat normal texture. See {@link Clearcoat.getClearcoatNormalTexture getClearcoatNormalTexture}. */\n  setClearcoatNormalTexture(texture) {\n    return this.setRef('clearcoatNormalTexture', texture, {\n      channels: R$6 | G$6 | B$4\n    });\n  }\n}\nClearcoat.EXTENSION_NAME = KHR_MATERIALS_CLEARCOAT;\n\n/**\n * [KHR_materials_clearcoat](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_clearcoat/)\n * defines a clear coating on a glTF PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-clearcoat.png)\n *\n * > _**Figure:** Comparison of a carbon-fiber material without clearcoat (left) and with clearcoat\n * > (right). Source: [Filament](https://google.github.io/filament/Materials.html)._\n *\n * A clear coat is a common technique used in Physically-Based\n * Rendering for a protective layer applied to a base material.\n * Commonly used to represent car paint, carbon fiber, or thin lacquers.\n *\n * Properties:\n * - {@link Clearcoat}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsClearcoat, Clearcoat } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const clearcoatExtension = document.createExtension(KHRMaterialsClearcoat);\n *\n * // Create Clearcoat property.\n * const clearcoat = clearcoatExtension.createClearcoat()\n *\t.setClearcoatFactor(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_clearcoat', clearcoat);\n * ```\n */\nclass KHRMaterialsClearcoat extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_CLEARCOAT;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Clearcoat property for use on a {@link Material}. */\n  createClearcoat() {\n    return new Clearcoat(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_CLEARCOAT]) {\n        const clearcoat = this.createClearcoat();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_CLEARCOAT, clearcoat);\n        const clearcoatDef = materialDef.extensions[KHR_MATERIALS_CLEARCOAT];\n        // Factors.\n        if (clearcoatDef.clearcoatFactor !== undefined) {\n          clearcoat.setClearcoatFactor(clearcoatDef.clearcoatFactor);\n        }\n        if (clearcoatDef.clearcoatRoughnessFactor !== undefined) {\n          clearcoat.setClearcoatRoughnessFactor(clearcoatDef.clearcoatRoughnessFactor);\n        }\n        // Textures.\n        if (clearcoatDef.clearcoatTexture !== undefined) {\n          const textureInfoDef = clearcoatDef.clearcoatTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          clearcoat.setClearcoatTexture(texture);\n          context.setTextureInfo(clearcoat.getClearcoatTextureInfo(), textureInfoDef);\n        }\n        if (clearcoatDef.clearcoatRoughnessTexture !== undefined) {\n          const textureInfoDef = clearcoatDef.clearcoatRoughnessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          clearcoat.setClearcoatRoughnessTexture(texture);\n          context.setTextureInfo(clearcoat.getClearcoatRoughnessTextureInfo(), textureInfoDef);\n        }\n        if (clearcoatDef.clearcoatNormalTexture !== undefined) {\n          const textureInfoDef = clearcoatDef.clearcoatNormalTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          clearcoat.setClearcoatNormalTexture(texture);\n          context.setTextureInfo(clearcoat.getClearcoatNormalTextureInfo(), textureInfoDef);\n          if (textureInfoDef.scale !== undefined) {\n            clearcoat.setClearcoatNormalScale(textureInfoDef.scale);\n          }\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const clearcoat = material.getExtension(KHR_MATERIALS_CLEARCOAT);\n      if (clearcoat) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const clearcoatDef = materialDef.extensions[KHR_MATERIALS_CLEARCOAT] = {\n          clearcoatFactor: clearcoat.getClearcoatFactor(),\n          clearcoatRoughnessFactor: clearcoat.getClearcoatRoughnessFactor()\n        };\n        // Textures.\n        if (clearcoat.getClearcoatTexture()) {\n          const texture = clearcoat.getClearcoatTexture();\n          const textureInfo = clearcoat.getClearcoatTextureInfo();\n          clearcoatDef.clearcoatTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (clearcoat.getClearcoatRoughnessTexture()) {\n          const texture = clearcoat.getClearcoatRoughnessTexture();\n          const textureInfo = clearcoat.getClearcoatRoughnessTextureInfo();\n          clearcoatDef.clearcoatRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (clearcoat.getClearcoatNormalTexture()) {\n          const texture = clearcoat.getClearcoatNormalTexture();\n          const textureInfo = clearcoat.getClearcoatNormalTextureInfo();\n          clearcoatDef.clearcoatNormalTexture = context.createTextureInfoDef(texture, textureInfo);\n          if (clearcoat.getClearcoatNormalScale() !== 1) {\n            clearcoatDef.clearcoatNormalTexture.scale = clearcoat.getClearcoatNormalScale();\n          }\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsClearcoat.EXTENSION_NAME = KHR_MATERIALS_CLEARCOAT;\n\nconst {\n  R: R$5,\n  G: G$5,\n  B: B$3,\n  A: A$3\n} = TextureChannel;\n/**\n * Defines diffuse transmission on a PBR {@link Material}. See {@link KHRMaterialsDiffuseTransmission}.\n *\n * @experimental KHR_materials_diffuse_transmission is not yet ratified by the Khronos Group.\n */\nclass DiffuseTransmission extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_DIFFUSE_TRANSMISSION;\n    this.propertyType = 'DiffuseTransmission';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      diffuseTransmissionFactor: 0.0,\n      diffuseTransmissionTexture: null,\n      diffuseTransmissionTextureInfo: new TextureInfo(this.graph, 'diffuseTransmissionTextureInfo'),\n      diffuseTransmissionColorFactor: [1.0, 1.0, 1.0],\n      diffuseTransmissionColorTexture: null,\n      diffuseTransmissionColorTextureInfo: new TextureInfo(this.graph, 'diffuseTransmissionColorTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Diffuse transmission.\n   */\n  /**\n   * Percentage of reflected, non-specularly reflected light that is transmitted through the\n   * surface via the Lambertian diffuse transmission, i.e., the strength of the diffuse\n   * transmission effect.\n   */\n  getDiffuseTransmissionFactor() {\n    return this.get('diffuseTransmissionFactor');\n  }\n  /**\n   * Percentage of reflected, non-specularly reflected light that is transmitted through the\n   * surface via the Lambertian diffuse transmission, i.e., the strength of the diffuse\n   * transmission effect.\n   */\n  setDiffuseTransmissionFactor(factor) {\n    return this.set('diffuseTransmissionFactor', factor);\n  }\n  /**\n   * Texture that defines the strength of the diffuse transmission effect, stored in the alpha (A)\n   * channel. Will be multiplied by the diffuseTransmissionFactor.\n   */\n  getDiffuseTransmissionTexture() {\n    return this.getRef('diffuseTransmissionTexture');\n  }\n  /**\n   * Settings affecting the material's use of its diffuse transmission texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getDiffuseTransmissionTextureInfo() {\n    return this.getRef('diffuseTransmissionTexture') ? this.getRef('diffuseTransmissionTextureInfo') : null;\n  }\n  /**\n   * Texture that defines the strength of the diffuse transmission effect, stored in the alpha (A)\n   * channel. Will be multiplied by the diffuseTransmissionFactor.\n   */\n  setDiffuseTransmissionTexture(texture) {\n    return this.setRef('diffuseTransmissionTexture', texture, {\n      channels: A$3\n    });\n  }\n  /**********************************************************************************************\n   * Diffuse transmission color.\n   */\n  /** Color of the transmitted light; Linear-sRGB components. */\n  getDiffuseTransmissionColorFactor() {\n    return this.get('diffuseTransmissionColorFactor');\n  }\n  /** Color of the transmitted light; Linear-sRGB components. */\n  setDiffuseTransmissionColorFactor(factor) {\n    return this.set('diffuseTransmissionColorFactor', factor);\n  }\n  /**\n   * Texture that defines the color of the transmitted light, stored in the RGB channels and\n   * encoded in sRGB. This texture will be multiplied by diffuseTransmissionColorFactor.\n   */\n  getDiffuseTransmissionColorTexture() {\n    return this.getRef('diffuseTransmissionColorTexture');\n  }\n  /**\n   * Settings affecting the material's use of its diffuse transmission color texture. If no\n   * texture is attached, {@link TextureInfo} is `null`.\n   */\n  getDiffuseTransmissionColorTextureInfo() {\n    return this.getRef('diffuseTransmissionColorTexture') ? this.getRef('diffuseTransmissionColorTextureInfo') : null;\n  }\n  /**\n   * Texture that defines the color of the transmitted light, stored in the RGB channels and\n   * encoded in sRGB. This texture will be multiplied by diffuseTransmissionColorFactor.\n   */\n  setDiffuseTransmissionColorTexture(texture) {\n    return this.setRef('diffuseTransmissionColorTexture', texture, {\n      channels: R$5 | G$5 | B$3\n    });\n  }\n}\nDiffuseTransmission.EXTENSION_NAME = KHR_MATERIALS_DIFFUSE_TRANSMISSION;\n\n/**\n * [KHR_materials_diffuse_transmission](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_diffuse_transmission/)\n * defines diffuse transmission on a glTF PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-diffuse-transmission.png)\n *\n * > _**Figure:** Sphere using `KHR_materials_diffuse_transmission` with varying roughness (0.0, 0.2, 0.4).\n * > Source: Khronos Group._\n *\n * Adds a Lambertian diffuse transmission BSDF to the metallic-roughness\n * material. Thin, dielectric objects like leaves or paper diffusely transmit\n * incoming light to the opposite side of the surface. For optically thick\n * media (volumes) with short scattering distances and therefore dense\n * scattering behavior, a diffuse transmission lobe is a phenomenological\n * plausible and cheap approximation.\n *\n * Properties:\n * - {@link DiffuseTransmission}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsDiffuseTransmission, DiffuseTransmission } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const diffuseTransmissionExtension = document.createExtension(KHRMaterialsDiffuseTransmission);\n *\n * // Create DiffuseTransmission property.\n * const diffuseTransmission = diffuseTransmission.createDiffuseTransmission()\n *\t.setDiffuseTransmissionFactor(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_diffuse_transmission', diffuseTransmission);\n * ```\n *\n * @experimental KHR_materials_diffuse_transmission is not yet ratified by the Khronos Group.\n */\nclass KHRMaterialsDiffuseTransmission extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_DIFFUSE_TRANSMISSION;\n  }\n  /** Creates a new DiffuseTransmission property for use on a {@link Material}. */\n  createDiffuseTransmission() {\n    return new DiffuseTransmission(this.document.getGraph());\n  }\n  /** @hidden */\n  read(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_DIFFUSE_TRANSMISSION]) {\n        const transmission = this.createDiffuseTransmission();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_DIFFUSE_TRANSMISSION, transmission);\n        const transmissionDef = materialDef.extensions[KHR_MATERIALS_DIFFUSE_TRANSMISSION];\n        // Factors.\n        if (transmissionDef.diffuseTransmissionFactor !== undefined) {\n          transmission.setDiffuseTransmissionFactor(transmissionDef.diffuseTransmissionFactor);\n        }\n        if (transmissionDef.diffuseTransmissionColorFactor !== undefined) {\n          transmission.setDiffuseTransmissionColorFactor(transmissionDef.diffuseTransmissionColorFactor);\n        }\n        // Textures.\n        if (transmissionDef.diffuseTransmissionTexture !== undefined) {\n          const textureInfoDef = transmissionDef.diffuseTransmissionTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          transmission.setDiffuseTransmissionTexture(texture);\n          context.setTextureInfo(transmission.getDiffuseTransmissionTextureInfo(), textureInfoDef);\n        }\n        if (transmissionDef.diffuseTransmissionColorTexture !== undefined) {\n          const textureInfoDef = transmissionDef.diffuseTransmissionColorTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          transmission.setDiffuseTransmissionColorTexture(texture);\n          context.setTextureInfo(transmission.getDiffuseTransmissionColorTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    for (const material of this.document.getRoot().listMaterials()) {\n      const transmission = material.getExtension(KHR_MATERIALS_DIFFUSE_TRANSMISSION);\n      if (!transmission) continue;\n      const materialIndex = context.materialIndexMap.get(material);\n      const materialDef = jsonDoc.json.materials[materialIndex];\n      materialDef.extensions = materialDef.extensions || {};\n      // Factors.\n      const transmissionDef = materialDef.extensions[KHR_MATERIALS_DIFFUSE_TRANSMISSION] = {\n        diffuseTransmissionFactor: transmission.getDiffuseTransmissionFactor(),\n        diffuseTransmissionColorFactor: transmission.getDiffuseTransmissionColorFactor()\n      };\n      // Textures.\n      if (transmission.getDiffuseTransmissionTexture()) {\n        const texture = transmission.getDiffuseTransmissionTexture();\n        const textureInfo = transmission.getDiffuseTransmissionTextureInfo();\n        transmissionDef.diffuseTransmissionTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n      if (transmission.getDiffuseTransmissionColorTexture()) {\n        const texture = transmission.getDiffuseTransmissionColorTexture();\n        const textureInfo = transmission.getDiffuseTransmissionColorTextureInfo();\n        transmissionDef.diffuseTransmissionColorTexture = context.createTextureInfoDef(texture, textureInfo);\n      }\n    }\n    return this;\n  }\n}\nKHRMaterialsDiffuseTransmission.EXTENSION_NAME = KHR_MATERIALS_DIFFUSE_TRANSMISSION;\n\n/**\n * Defines dispersion for a PBR {@link Material}. See {@link KHRMaterialsDispersion}.\n */\nclass Dispersion extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_DISPERSION;\n    this.propertyType = 'Dispersion';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      dispersion: 0\n    });\n  }\n  /**********************************************************************************************\n   * Dispersion.\n   */\n  /** Dispersion. */\n  getDispersion() {\n    return this.get('dispersion');\n  }\n  /** Dispersion. */\n  setDispersion(dispersion) {\n    return this.set('dispersion', dispersion);\n  }\n}\nDispersion.EXTENSION_NAME = KHR_MATERIALS_DISPERSION;\n\n/**\n * [KHR_materials_dispersion](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_dispersion/)\n * defines dispersion on a glTF PBR material.\n *\n * ![illustration](/media/extensions/khr-materials-dispersion.jpg)\n *\n * > _**Figure:** Prisms demonstrating volumetric refraction and dispersion, for varying\n * > values of dispersion and IOR. Source: Khronos Group, rendered in Adobe Stager._\n *\n * Dispersion enables configuring the strength of the angular separation of colors (chromatic\n * aberration) transmitting through a relatively clear volume.  It is an enhancement to the\n * default `KHR_materials_volume` transmission model which assumes no dispersion.\n *\n * Properties:\n * - {@link Dispersion}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsDispersion, Dispersion } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const dispersionExtension = document.createExtension(KHRMaterialsDispersion);\n *\n * // Create Dispersion property.\n * const dispersion = dispersionExtension.createDispersion().setDispersion(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_dispersion', dispersion);\n * ```\n */\nclass KHRMaterialsDispersion extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_DISPERSION;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Dispersion property for use on a {@link Material}. */\n  createDispersion() {\n    return new Dispersion(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_DISPERSION]) {\n        const dispersion = this.createDispersion();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_DISPERSION, dispersion);\n        const dispersionDef = materialDef.extensions[KHR_MATERIALS_DISPERSION];\n        // Factors.\n        if (dispersionDef.dispersion !== undefined) {\n          dispersion.setDispersion(dispersionDef.dispersion);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const dispersion = material.getExtension(KHR_MATERIALS_DISPERSION);\n      if (dispersion) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        materialDef.extensions[KHR_MATERIALS_DISPERSION] = {\n          dispersion: dispersion.getDispersion()\n        };\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsDispersion.EXTENSION_NAME = KHR_MATERIALS_DISPERSION;\n\n/**\n * Defines emissive strength for a PBR {@link Material}, allowing high-dynamic-range\n * (HDR) emissive materials. See {@link KHRMaterialsEmissiveStrength}.\n */\nclass EmissiveStrength extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_EMISSIVE_STRENGTH;\n    this.propertyType = 'EmissiveStrength';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      emissiveStrength: 1.0\n    });\n  }\n  /**********************************************************************************************\n   * EmissiveStrength.\n   */\n  /** EmissiveStrength. */\n  getEmissiveStrength() {\n    return this.get('emissiveStrength');\n  }\n  /** EmissiveStrength. */\n  setEmissiveStrength(strength) {\n    return this.set('emissiveStrength', strength);\n  }\n}\nEmissiveStrength.EXTENSION_NAME = KHR_MATERIALS_EMISSIVE_STRENGTH;\n\n/**\n * [KHR_materials_emissive_strength](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_emissive_strength/)\n * defines emissive strength and enables high-dynamic-range (HDR) emissive materials.\n *\n * ![Illustration](/media/extensions/khr-materials-emissive-strength.jpg)\n *\n * > _**Figure:** Cubes with emissive color #59BCF3 and emissive strength\n * > increasing from 1 to 256 nits, left to right. Rendered in [three.js](https://threejs.org/),\n * > with independent point lighting and a bloom effect.\n * > Source: [Don McCurdy](https://www.donmccurdy.com/2024/04/27/emission-and-bloom/)._\n *\n * The core glTF 2.0 material model includes {@link Material.setEmissiveFactor `emissiveFactor`}\n * and {@link Material.setEmissiveTexture `emissiveTexture`} to control the color and intensity\n * of the light being emitted by the material, clamped to the range [0.0, 1.0]. However, in\n * PBR environments with HDR reflections and lighting, stronger emission effects may be desirable.\n *\n * In this extension, a new {@link EmissiveStrength.setEmissiveStrength `emissiveStrength`} scalar\n * factor is supplied, which governs the upper limit of emissive strength per material and may be\n * given arbitrarily high values.\n *\n * For implementations where a physical light unit is needed, the units for the multiplicative\n * product of the emissive texture and factor are candela per square meter (cd / m2), sometimes\n * called _nits_. Many realtime rendering engines simplify this calculation by assuming that an\n * emissive factor of 1.0 results in a fully exposed pixel.\n *\n * Properties:\n * - {@link EmissiveStrength}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsEmissiveStrength, EmissiveStrength } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const emissiveStrengthExtension = document.createExtension(KHRMaterialsEmissiveStrength);\n *\n * // Create EmissiveStrength property.\n * const emissiveStrength = emissiveStrengthExtension\n * \t.createEmissiveStrength().setEmissiveStrength(5.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_emissive_strength', emissiveStrength);\n * ```\n */\nclass KHRMaterialsEmissiveStrength extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_EMISSIVE_STRENGTH;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new EmissiveStrength property for use on a {@link Material}. */\n  createEmissiveStrength() {\n    return new EmissiveStrength(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_EMISSIVE_STRENGTH]) {\n        const emissiveStrength = this.createEmissiveStrength();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_EMISSIVE_STRENGTH, emissiveStrength);\n        const emissiveStrengthDef = materialDef.extensions[KHR_MATERIALS_EMISSIVE_STRENGTH];\n        // Factors.\n        if (emissiveStrengthDef.emissiveStrength !== undefined) {\n          emissiveStrength.setEmissiveStrength(emissiveStrengthDef.emissiveStrength);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const emissiveStrength = material.getExtension(KHR_MATERIALS_EMISSIVE_STRENGTH);\n      if (emissiveStrength) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        materialDef.extensions[KHR_MATERIALS_EMISSIVE_STRENGTH] = {\n          emissiveStrength: emissiveStrength.getEmissiveStrength()\n        };\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsEmissiveStrength.EXTENSION_NAME = KHR_MATERIALS_EMISSIVE_STRENGTH;\n\n/**\n * Defines index of refraction for a PBR {@link Material}. See {@link KHRMaterialsIOR}.\n */\nclass IOR extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_IOR;\n    this.propertyType = 'IOR';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      ior: 1.5\n    });\n  }\n  /**********************************************************************************************\n   * IOR.\n   */\n  /** IOR. */\n  getIOR() {\n    return this.get('ior');\n  }\n  /** IOR. */\n  setIOR(ior) {\n    return this.set('ior', ior);\n  }\n}\nIOR.EXTENSION_NAME = KHR_MATERIALS_IOR;\n\n/**\n * [KHR_materials_ior](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_ior/)\n * defines index of refraction on a glTF PBR material.\n *\n * The dielectric BRDF of the metallic-roughness material in glTF uses a fixed value of 1.5 for the\n * index of refraction. This is a good fit for many plastics and glass, but not for other materials\n * like water or asphalt, sapphire or diamond. `KHR_materials_ior` allows users to set the index of\n * refraction to a certain value.\n *\n * Properties:\n * - {@link IOR}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsIOR, IOR } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const iorExtension = document.createExtension(KHRMaterialsIOR);\n *\n * // Create IOR property.\n * const ior = iorExtension.createIOR().setIOR(1.0);\n *\n * // Assign to a Material.\n * material.setExtension('KHR_materials_ior', ior);\n * ```\n */\nclass KHRMaterialsIOR extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_IOR;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new IOR property for use on a {@link Material}. */\n  createIOR() {\n    return new IOR(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_IOR]) {\n        const ior = this.createIOR();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_IOR, ior);\n        const iorDef = materialDef.extensions[KHR_MATERIALS_IOR];\n        // Factors.\n        if (iorDef.ior !== undefined) {\n          ior.setIOR(iorDef.ior);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const ior = material.getExtension(KHR_MATERIALS_IOR);\n      if (ior) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        materialDef.extensions[KHR_MATERIALS_IOR] = {\n          ior: ior.getIOR()\n        };\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsIOR.EXTENSION_NAME = KHR_MATERIALS_IOR;\n\nconst {\n  R: R$4,\n  G: G$4\n} = TextureChannel;\n/**\n * Defines iridescence (thin film interference) on a PBR {@link Material}. See {@link KHRMaterialsIridescence}.\n */\nclass Iridescence extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_IRIDESCENCE;\n    this.propertyType = 'Iridescence';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      iridescenceFactor: 0.0,\n      iridescenceTexture: null,\n      iridescenceTextureInfo: new TextureInfo(this.graph, 'iridescenceTextureInfo'),\n      iridescenceIOR: 1.3,\n      iridescenceThicknessMinimum: 100,\n      iridescenceThicknessMaximum: 400,\n      iridescenceThicknessTexture: null,\n      iridescenceThicknessTextureInfo: new TextureInfo(this.graph, 'iridescenceThicknessTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Iridescence.\n   */\n  /** Iridescence; linear multiplier. See {@link Iridescence.getIridescenceTexture getIridescenceTexture}. */\n  getIridescenceFactor() {\n    return this.get('iridescenceFactor');\n  }\n  /** Iridescence; linear multiplier. See {@link Iridescence.getIridescenceTexture getIridescenceTexture}. */\n  setIridescenceFactor(factor) {\n    return this.set('iridescenceFactor', factor);\n  }\n  /**\n   * Iridescence intensity.\n   *\n   * Only the red (R) channel is used for iridescence intensity, but this texture may optionally\n   * be packed with additional data in the other channels.\n   */\n  getIridescenceTexture() {\n    return this.getRef('iridescenceTexture');\n  }\n  /**\n   * Settings affecting the material's use of its iridescence texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getIridescenceTextureInfo() {\n    return this.getRef('iridescenceTexture') ? this.getRef('iridescenceTextureInfo') : null;\n  }\n  /** Iridescence intensity. See {@link Iridescence.getIridescenceTexture getIridescenceTexture}. */\n  setIridescenceTexture(texture) {\n    return this.setRef('iridescenceTexture', texture, {\n      channels: R$4\n    });\n  }\n  /**********************************************************************************************\n   * Iridescence IOR.\n   */\n  /** Index of refraction of the dielectric thin-film layer. */\n  getIridescenceIOR() {\n    return this.get('iridescenceIOR');\n  }\n  /** Index of refraction of the dielectric thin-film layer. */\n  setIridescenceIOR(ior) {\n    return this.set('iridescenceIOR', ior);\n  }\n  /**********************************************************************************************\n   * Iridescence thickness.\n   */\n  /** Minimum thickness of the thin-film layer, in nanometers (nm). */\n  getIridescenceThicknessMinimum() {\n    return this.get('iridescenceThicknessMinimum');\n  }\n  /** Minimum thickness of the thin-film layer, in nanometers (nm). */\n  setIridescenceThicknessMinimum(thickness) {\n    return this.set('iridescenceThicknessMinimum', thickness);\n  }\n  /** Maximum thickness of the thin-film layer, in nanometers (nm). */\n  getIridescenceThicknessMaximum() {\n    return this.get('iridescenceThicknessMaximum');\n  }\n  /** Maximum thickness of the thin-film layer, in nanometers (nm). */\n  setIridescenceThicknessMaximum(thickness) {\n    return this.set('iridescenceThicknessMaximum', thickness);\n  }\n  /**\n   * The green channel of this texture defines the thickness of the\n   * thin-film layer by blending between the minimum and maximum thickness.\n   */\n  getIridescenceThicknessTexture() {\n    return this.getRef('iridescenceThicknessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its iridescence thickness texture.\n   * If no texture is attached, {@link TextureInfo} is `null`.\n   */\n  getIridescenceThicknessTextureInfo() {\n    return this.getRef('iridescenceThicknessTexture') ? this.getRef('iridescenceThicknessTextureInfo') : null;\n  }\n  /**\n   * Sets iridescence thickness texture.\n   * See {@link Iridescence.getIridescenceThicknessTexture getIridescenceThicknessTexture}.\n   */\n  setIridescenceThicknessTexture(texture) {\n    return this.setRef('iridescenceThicknessTexture', texture, {\n      channels: G$4\n    });\n  }\n}\nIridescence.EXTENSION_NAME = KHR_MATERIALS_IRIDESCENCE;\n\n/**\n * [`KHR_materials_iridescence`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_iridescence/)\n * defines iridescence (thin film interference) on a PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-iridescence.png)\n *\n * > _**Figure:** Varying levels of iridescence IOR values.\n * > Source: [Khronos Group](https://github.com/KhronosGroup/gltf/tree/main/extensions/2.0/Khronos/KHR_materials_iridescence)._\n *\n * Iridescence describes an effect where hue varies depending on the viewing\n * angle and illumination angle: A thin-film of a semi-transparent layer\n * results in inter-reflections and due to thin-film interference, certain\n * wavelengths get absorbed or amplified. Iridescence can be seen on soap\n * bubbles, oil films, or on the wings of many insects. With this extension,\n * thickness and index of refraction (IOR) of the thin-film can be specified,\n * enabling iridescent materials.\n *\n * Properties:\n * - {@link Iridescence}\n *\n * ### Example\n *\n * The `KHRMaterialsIridescence` class provides a single {@link ExtensionProperty} type, `Iridescence`,\n * which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsIridescence, Iridescence } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const iridescenceExtension = document.createExtension(KHRMaterialsIridescence);\n *\n * // Create an Iridescence property.\n * const iridescence = iridescenceExtension.createIridescence()\n * \t.setIridescenceFactor(1.0)\n * \t.setIridescenceIOR(1.8);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_iridescence', iridescence);\n * ```\n */\nclass KHRMaterialsIridescence extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_IRIDESCENCE;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Iridescence property for use on a {@link Material}. */\n  createIridescence() {\n    return new Iridescence(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_IRIDESCENCE]) {\n        const iridescence = this.createIridescence();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_IRIDESCENCE, iridescence);\n        const iridescenceDef = materialDef.extensions[KHR_MATERIALS_IRIDESCENCE];\n        // Factors.\n        if (iridescenceDef.iridescenceFactor !== undefined) {\n          iridescence.setIridescenceFactor(iridescenceDef.iridescenceFactor);\n        }\n        if (iridescenceDef.iridescenceIor !== undefined) {\n          iridescence.setIridescenceIOR(iridescenceDef.iridescenceIor);\n        }\n        if (iridescenceDef.iridescenceThicknessMinimum !== undefined) {\n          iridescence.setIridescenceThicknessMinimum(iridescenceDef.iridescenceThicknessMinimum);\n        }\n        if (iridescenceDef.iridescenceThicknessMaximum !== undefined) {\n          iridescence.setIridescenceThicknessMaximum(iridescenceDef.iridescenceThicknessMaximum);\n        }\n        // Textures.\n        if (iridescenceDef.iridescenceTexture !== undefined) {\n          const textureInfoDef = iridescenceDef.iridescenceTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          iridescence.setIridescenceTexture(texture);\n          context.setTextureInfo(iridescence.getIridescenceTextureInfo(), textureInfoDef);\n        }\n        if (iridescenceDef.iridescenceThicknessTexture !== undefined) {\n          const textureInfoDef = iridescenceDef.iridescenceThicknessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          iridescence.setIridescenceThicknessTexture(texture);\n          context.setTextureInfo(iridescence.getIridescenceThicknessTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const iridescence = material.getExtension(KHR_MATERIALS_IRIDESCENCE);\n      if (iridescence) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const iridescenceDef = materialDef.extensions[KHR_MATERIALS_IRIDESCENCE] = {};\n        if (iridescence.getIridescenceFactor() > 0) {\n          iridescenceDef.iridescenceFactor = iridescence.getIridescenceFactor();\n        }\n        if (iridescence.getIridescenceIOR() !== 1.3) {\n          iridescenceDef.iridescenceIor = iridescence.getIridescenceIOR();\n        }\n        if (iridescence.getIridescenceThicknessMinimum() !== 100) {\n          iridescenceDef.iridescenceThicknessMinimum = iridescence.getIridescenceThicknessMinimum();\n        }\n        if (iridescence.getIridescenceThicknessMaximum() !== 400) {\n          iridescenceDef.iridescenceThicknessMaximum = iridescence.getIridescenceThicknessMaximum();\n        }\n        // Textures.\n        if (iridescence.getIridescenceTexture()) {\n          const texture = iridescence.getIridescenceTexture();\n          const textureInfo = iridescence.getIridescenceTextureInfo();\n          iridescenceDef.iridescenceTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (iridescence.getIridescenceThicknessTexture()) {\n          const texture = iridescence.getIridescenceThicknessTexture();\n          const textureInfo = iridescence.getIridescenceThicknessTextureInfo();\n          iridescenceDef.iridescenceThicknessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsIridescence.EXTENSION_NAME = KHR_MATERIALS_IRIDESCENCE;\n\nconst {\n  R: R$3,\n  G: G$3,\n  B: B$2,\n  A: A$2\n} = TextureChannel;\n/**\n * Converts a {@link Material} to a spec/gloss workflow. See {@link KHRMaterialsPBRSpecularGlossiness}.\n */\nclass PBRSpecularGlossiness extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n    this.propertyType = 'PBRSpecularGlossiness';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      diffuseFactor: [1.0, 1.0, 1.0, 1.0],\n      diffuseTexture: null,\n      diffuseTextureInfo: new TextureInfo(this.graph, 'diffuseTextureInfo'),\n      specularFactor: [1.0, 1.0, 1.0],\n      glossinessFactor: 1.0,\n      specularGlossinessTexture: null,\n      specularGlossinessTextureInfo: new TextureInfo(this.graph, 'specularGlossinessTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Diffuse.\n   */\n  /** Diffuse; Linear-sRGB components. See {@link PBRSpecularGlossiness.getDiffuseTexture getDiffuseTexture}. */\n  getDiffuseFactor() {\n    return this.get('diffuseFactor');\n  }\n  /** Diffuse; Linear-sRGB components. See {@link PBRSpecularGlossiness.getDiffuseTexture getDiffuseTexture}. */\n  setDiffuseFactor(factor) {\n    return this.set('diffuseFactor', factor);\n  }\n  /**\n   * Diffuse texture; sRGB. Alternative to baseColorTexture, used within the\n   * spec/gloss PBR workflow.\n   */\n  getDiffuseTexture() {\n    return this.getRef('diffuseTexture');\n  }\n  /**\n   * Settings affecting the material's use of its diffuse texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getDiffuseTextureInfo() {\n    return this.getRef('diffuseTexture') ? this.getRef('diffuseTextureInfo') : null;\n  }\n  /** Sets diffuse texture. See {@link PBRSpecularGlossiness.getDiffuseTexture getDiffuseTexture}. */\n  setDiffuseTexture(texture) {\n    return this.setRef('diffuseTexture', texture, {\n      channels: R$3 | G$3 | B$2 | A$2,\n      isColor: true\n    });\n  }\n  /**********************************************************************************************\n   * Specular.\n   */\n  /** Specular; linear multiplier. */\n  getSpecularFactor() {\n    return this.get('specularFactor');\n  }\n  /** Specular; linear multiplier. */\n  setSpecularFactor(factor) {\n    return this.set('specularFactor', factor);\n  }\n  /**********************************************************************************************\n   * Glossiness.\n   */\n  /** Glossiness; linear multiplier. */\n  getGlossinessFactor() {\n    return this.get('glossinessFactor');\n  }\n  /** Glossiness; linear multiplier. */\n  setGlossinessFactor(factor) {\n    return this.set('glossinessFactor', factor);\n  }\n  /**********************************************************************************************\n   * Specular/Glossiness.\n   */\n  /** Spec/gloss texture; linear multiplier. */\n  getSpecularGlossinessTexture() {\n    return this.getRef('specularGlossinessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its spec/gloss texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getSpecularGlossinessTextureInfo() {\n    return this.getRef('specularGlossinessTexture') ? this.getRef('specularGlossinessTextureInfo') : null;\n  }\n  /** Spec/gloss texture; linear multiplier. */\n  setSpecularGlossinessTexture(texture) {\n    return this.setRef('specularGlossinessTexture', texture, {\n      channels: R$3 | G$3 | B$2 | A$2\n    });\n  }\n}\nPBRSpecularGlossiness.EXTENSION_NAME = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\n/**\n * [`KHR_materials_pbrSpecularGlossiness`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness/)\n * converts a PBR material from the default metal/rough workflow to a spec/gloss workflow.\n *\n * > _**NOTICE:** The spec/gloss workflow does _not_ support other PBR extensions such as clearcoat,\n * > transmission, IOR, etc. For the complete PBR feature set and specular data, use the\n * > {@link KHRMaterialsSpecular} extension instead, which provides specular data within a metal/rough\n * > workflow._\n *\n * ![Illustration](/media/extensions/khr-material-pbr-specular-glossiness.png)\n *\n * > _**Figure:** Components of a PBR spec/gloss material. Source: Khronos Group._\n *\n * Properties:\n * - {@link PBRSpecularGlossiness}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsPBRSpecularGlossiness } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const specGlossExtension = document.createExtension(KHRMaterialsPBRSpecularGlossiness);\n *\n * // Create a PBRSpecularGlossiness property.\n * const specGloss = specGlossExtension.createPBRSpecularGlossiness()\n * \t.setSpecularFactor(1.0);\n *\n * // // Assign to a Material.\n * material.setExtension('KHR_materials_pbrSpecularGlossiness', specGloss);\n * ```\n */\nclass KHRMaterialsPBRSpecularGlossiness extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new PBRSpecularGlossiness property for use on a {@link Material}. */\n  createPBRSpecularGlossiness() {\n    return new PBRSpecularGlossiness(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n        const specGloss = this.createPBRSpecularGlossiness();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS, specGloss);\n        const specGlossDef = materialDef.extensions[KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n        // Factors.\n        if (specGlossDef.diffuseFactor !== undefined) {\n          specGloss.setDiffuseFactor(specGlossDef.diffuseFactor);\n        }\n        if (specGlossDef.specularFactor !== undefined) {\n          specGloss.setSpecularFactor(specGlossDef.specularFactor);\n        }\n        if (specGlossDef.glossinessFactor !== undefined) {\n          specGloss.setGlossinessFactor(specGlossDef.glossinessFactor);\n        }\n        // Textures.\n        if (specGlossDef.diffuseTexture !== undefined) {\n          const textureInfoDef = specGlossDef.diffuseTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          specGloss.setDiffuseTexture(texture);\n          context.setTextureInfo(specGloss.getDiffuseTextureInfo(), textureInfoDef);\n        }\n        if (specGlossDef.specularGlossinessTexture !== undefined) {\n          const textureInfoDef = specGlossDef.specularGlossinessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          specGloss.setSpecularGlossinessTexture(texture);\n          context.setTextureInfo(specGloss.getSpecularGlossinessTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const specGloss = material.getExtension(KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS);\n      if (specGloss) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const specGlossDef = materialDef.extensions[KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS] = {\n          diffuseFactor: specGloss.getDiffuseFactor(),\n          specularFactor: specGloss.getSpecularFactor(),\n          glossinessFactor: specGloss.getGlossinessFactor()\n        };\n        // Textures.\n        if (specGloss.getDiffuseTexture()) {\n          const texture = specGloss.getDiffuseTexture();\n          const textureInfo = specGloss.getDiffuseTextureInfo();\n          specGlossDef.diffuseTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (specGloss.getSpecularGlossinessTexture()) {\n          const texture = specGloss.getSpecularGlossinessTexture();\n          const textureInfo = specGloss.getSpecularGlossinessTextureInfo();\n          specGlossDef.specularGlossinessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsPBRSpecularGlossiness.EXTENSION_NAME = KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\nconst {\n  R: R$2,\n  G: G$2,\n  B: B$1,\n  A: A$1\n} = TextureChannel;\n/**\n * Defines sheen on a PBR {@link Material}. See {@link KHRMaterialsSheen}.\n */\nclass Sheen extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_SHEEN;\n    this.propertyType = 'Sheen';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      sheenColorFactor: [0.0, 0.0, 0.0],\n      sheenColorTexture: null,\n      sheenColorTextureInfo: new TextureInfo(this.graph, 'sheenColorTextureInfo'),\n      sheenRoughnessFactor: 0.0,\n      sheenRoughnessTexture: null,\n      sheenRoughnessTextureInfo: new TextureInfo(this.graph, 'sheenRoughnessTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Sheen color.\n   */\n  /** Sheen; linear multiplier. */\n  getSheenColorFactor() {\n    return this.get('sheenColorFactor');\n  }\n  /** Sheen; linear multiplier. */\n  setSheenColorFactor(factor) {\n    return this.set('sheenColorFactor', factor);\n  }\n  /**\n   * Sheen color texture, in sRGB colorspace.\n   */\n  getSheenColorTexture() {\n    return this.getRef('sheenColorTexture');\n  }\n  /**\n   * Settings affecting the material's use of its sheen color texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getSheenColorTextureInfo() {\n    return this.getRef('sheenColorTexture') ? this.getRef('sheenColorTextureInfo') : null;\n  }\n  /** Sets sheen color texture. See {@link Sheen.getSheenColorTexture getSheenColorTexture}. */\n  setSheenColorTexture(texture) {\n    return this.setRef('sheenColorTexture', texture, {\n      channels: R$2 | G$2 | B$1,\n      isColor: true\n    });\n  }\n  /**********************************************************************************************\n   * Sheen roughness.\n   */\n  /** Sheen roughness; linear multiplier. See {@link Sheen.getSheenRoughnessTexture getSheenRoughnessTexture}. */\n  getSheenRoughnessFactor() {\n    return this.get('sheenRoughnessFactor');\n  }\n  /** Sheen roughness; linear multiplier. See {@link Sheen.getSheenRoughnessTexture getSheenRoughnessTexture}. */\n  setSheenRoughnessFactor(factor) {\n    return this.set('sheenRoughnessFactor', factor);\n  }\n  /**\n   * Sheen roughness texture; linear multiplier. The `a` channel of this texture specifies\n   * roughness, independent of the base layer's roughness.\n   */\n  getSheenRoughnessTexture() {\n    return this.getRef('sheenRoughnessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its sheen roughness texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getSheenRoughnessTextureInfo() {\n    return this.getRef('sheenRoughnessTexture') ? this.getRef('sheenRoughnessTextureInfo') : null;\n  }\n  /**\n   * Sets sheen roughness texture.  The `a` channel of this texture specifies\n   * roughness, independent of the base layer's roughness.\n   */\n  setSheenRoughnessTexture(texture) {\n    return this.setRef('sheenRoughnessTexture', texture, {\n      channels: A$1\n    });\n  }\n}\nSheen.EXTENSION_NAME = KHR_MATERIALS_SHEEN;\n\n/**\n * [`KHR_materials_sheen`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_sheen/)\n * defines a velvet-like sheen layered on a glTF PBR material.\n *\n * ![Illustration](/media/extensions/khr-materials-sheen.png)\n *\n * > _**Figure:** A cushion, showing high material roughness and low sheen roughness. Soft\n * > highlights at edges of the material show backscattering from microfibers. Source: Khronos\n * > Group._\n *\n * A sheen layer is a common technique used in Physically-Based Rendering to represent\n * cloth and fabric materials.\n *\n * Properties:\n * - {@link Sheen}\n *\n * ### Example\n *\n * The `KHRMaterialsSheen` class provides a single {@link ExtensionProperty} type, `Sheen`,\n * which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsSheen, Sheen } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const sheenExtension = document.createExtension(KHRMaterialsSheen);\n *\n * // Create a Sheen property.\n * const sheen = sheenExtension.createSheen()\n * \t.setSheenColorFactor([1.0, 1.0, 1.0]);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_sheen', sheen);\n * ```\n */\nclass KHRMaterialsSheen extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_SHEEN;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Sheen property for use on a {@link Material}. */\n  createSheen() {\n    return new Sheen(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_SHEEN]) {\n        const sheen = this.createSheen();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_SHEEN, sheen);\n        const sheenDef = materialDef.extensions[KHR_MATERIALS_SHEEN];\n        // Factors.\n        if (sheenDef.sheenColorFactor !== undefined) {\n          sheen.setSheenColorFactor(sheenDef.sheenColorFactor);\n        }\n        if (sheenDef.sheenRoughnessFactor !== undefined) {\n          sheen.setSheenRoughnessFactor(sheenDef.sheenRoughnessFactor);\n        }\n        // Textures.\n        if (sheenDef.sheenColorTexture !== undefined) {\n          const textureInfoDef = sheenDef.sheenColorTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          sheen.setSheenColorTexture(texture);\n          context.setTextureInfo(sheen.getSheenColorTextureInfo(), textureInfoDef);\n        }\n        if (sheenDef.sheenRoughnessTexture !== undefined) {\n          const textureInfoDef = sheenDef.sheenRoughnessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          sheen.setSheenRoughnessTexture(texture);\n          context.setTextureInfo(sheen.getSheenRoughnessTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const sheen = material.getExtension(KHR_MATERIALS_SHEEN);\n      if (sheen) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const sheenDef = materialDef.extensions[KHR_MATERIALS_SHEEN] = {\n          sheenColorFactor: sheen.getSheenColorFactor(),\n          sheenRoughnessFactor: sheen.getSheenRoughnessFactor()\n        };\n        // Textures.\n        if (sheen.getSheenColorTexture()) {\n          const texture = sheen.getSheenColorTexture();\n          const textureInfo = sheen.getSheenColorTextureInfo();\n          sheenDef.sheenColorTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (sheen.getSheenRoughnessTexture()) {\n          const texture = sheen.getSheenRoughnessTexture();\n          const textureInfo = sheen.getSheenRoughnessTextureInfo();\n          sheenDef.sheenRoughnessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsSheen.EXTENSION_NAME = KHR_MATERIALS_SHEEN;\n\nconst {\n  R: R$1,\n  G: G$1,\n  B,\n  A\n} = TextureChannel;\n/**\n * Defines specular reflectivity on a PBR {@link Material}. See {@link KHRMaterialsSpecular}.\n */\nclass Specular extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_SPECULAR;\n    this.propertyType = 'Specular';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      specularFactor: 1.0,\n      specularTexture: null,\n      specularTextureInfo: new TextureInfo(this.graph, 'specularTextureInfo'),\n      specularColorFactor: [1.0, 1.0, 1.0],\n      specularColorTexture: null,\n      specularColorTextureInfo: new TextureInfo(this.graph, 'specularColorTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Specular.\n   */\n  /** Specular; linear multiplier. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  getSpecularFactor() {\n    return this.get('specularFactor');\n  }\n  /** Specular; linear multiplier. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  setSpecularFactor(factor) {\n    return this.set('specularFactor', factor);\n  }\n  /** Specular color; Linear-sRGB components. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  getSpecularColorFactor() {\n    return this.get('specularColorFactor');\n  }\n  /** Specular color; Linear-sRGB components. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  setSpecularColorFactor(factor) {\n    return this.set('specularColorFactor', factor);\n  }\n  /**\n   * Specular texture; linear multiplier. Configures the strength of the specular reflection in\n   * the dielectric BRDF. A value of zero disables the specular reflection, resulting in a pure\n   * diffuse material.\n   *\n   * Only the alpha (A) channel is used for specular strength, but this texture may optionally\n   * be packed with specular color (RGB) into a single texture.\n   */\n  getSpecularTexture() {\n    return this.getRef('specularTexture');\n  }\n  /**\n   * Settings affecting the material's use of its specular texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getSpecularTextureInfo() {\n    return this.getRef('specularTexture') ? this.getRef('specularTextureInfo') : null;\n  }\n  /** Sets specular texture. See {@link Specular.getSpecularTexture getSpecularTexture}. */\n  setSpecularTexture(texture) {\n    return this.setRef('specularTexture', texture, {\n      channels: A\n    });\n  }\n  /**\n   * Specular color texture; linear multiplier. Defines the F0 color of the specular reflection\n   * (RGB channels, encoded in sRGB) in the the dielectric BRDF.\n   *\n   * Only RGB channels are used here, but this texture may optionally be packed with a specular\n   * factor (A) into a single texture.\n   */\n  getSpecularColorTexture() {\n    return this.getRef('specularColorTexture');\n  }\n  /**\n   * Settings affecting the material's use of its specular color texture. If no texture is\n   * attached, {@link TextureInfo} is `null`.\n   */\n  getSpecularColorTextureInfo() {\n    return this.getRef('specularColorTexture') ? this.getRef('specularColorTextureInfo') : null;\n  }\n  /** Sets specular color texture. See {@link Specular.getSpecularColorTexture getSpecularColorTexture}. */\n  setSpecularColorTexture(texture) {\n    return this.setRef('specularColorTexture', texture, {\n      channels: R$1 | G$1 | B,\n      isColor: true\n    });\n  }\n}\nSpecular.EXTENSION_NAME = KHR_MATERIALS_SPECULAR;\n\n/**\n * [`KHR_materials_specular`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_specular/)\n * adjusts the strength of the specular reflection in the dielectric BRDF.\n *\n * KHRMaterialsSpecular is a better alternative to the older\n * {@link KHRMaterialsPBRSpecularGlossiness KHR_materials_pbrSpecularGlossiness} extension, and\n * provides specular information while remaining within a metal/rough PBR workflow. A\n * value of zero disables the specular reflection, resulting in a pure diffuse material.\n *\n * Properties:\n * - {@link Specular}\n *\n * ### Example\n *\n * The `KHRMaterialsSpecular` class provides a single {@link ExtensionProperty} type, `Specular`,\n * which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsSpecular, Specular } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const specularExtension = document.createExtension(KHRMaterialsSpecular);\n *\n * // Create a Specular property.\n * const specular = specularExtension.createSpecular()\n * \t.setSpecularFactor(1.0);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_specular', specular);\n * ```\n */\nclass KHRMaterialsSpecular extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_SPECULAR;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Specular property for use on a {@link Material}. */\n  createSpecular() {\n    return new Specular(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_SPECULAR]) {\n        const specular = this.createSpecular();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_SPECULAR, specular);\n        const specularDef = materialDef.extensions[KHR_MATERIALS_SPECULAR];\n        // Factors.\n        if (specularDef.specularFactor !== undefined) {\n          specular.setSpecularFactor(specularDef.specularFactor);\n        }\n        if (specularDef.specularColorFactor !== undefined) {\n          specular.setSpecularColorFactor(specularDef.specularColorFactor);\n        }\n        // Textures.\n        if (specularDef.specularTexture !== undefined) {\n          const textureInfoDef = specularDef.specularTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          specular.setSpecularTexture(texture);\n          context.setTextureInfo(specular.getSpecularTextureInfo(), textureInfoDef);\n        }\n        if (specularDef.specularColorTexture !== undefined) {\n          const textureInfoDef = specularDef.specularColorTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          specular.setSpecularColorTexture(texture);\n          context.setTextureInfo(specular.getSpecularColorTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const specular = material.getExtension(KHR_MATERIALS_SPECULAR);\n      if (specular) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const specularDef = materialDef.extensions[KHR_MATERIALS_SPECULAR] = {};\n        if (specular.getSpecularFactor() !== 1) {\n          specularDef.specularFactor = specular.getSpecularFactor();\n        }\n        if (!MathUtils.eq(specular.getSpecularColorFactor(), [1, 1, 1])) {\n          specularDef.specularColorFactor = specular.getSpecularColorFactor();\n        }\n        // Textures.\n        if (specular.getSpecularTexture()) {\n          const texture = specular.getSpecularTexture();\n          const textureInfo = specular.getSpecularTextureInfo();\n          specularDef.specularTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n        if (specular.getSpecularColorTexture()) {\n          const texture = specular.getSpecularColorTexture();\n          const textureInfo = specular.getSpecularColorTextureInfo();\n          specularDef.specularColorTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsSpecular.EXTENSION_NAME = KHR_MATERIALS_SPECULAR;\n\nconst {\n  R\n} = TextureChannel;\n/**\n * Defines optical transmission on a PBR {@link Material}. See {@link KHRMaterialsTransmission}.\n */\nclass Transmission extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_TRANSMISSION;\n    this.propertyType = 'Transmission';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      transmissionFactor: 0.0,\n      transmissionTexture: null,\n      transmissionTextureInfo: new TextureInfo(this.graph, 'transmissionTextureInfo')\n    });\n  }\n  /**********************************************************************************************\n   * Transmission.\n   */\n  /** Transmission; linear multiplier. See {@link Transmission.getTransmissionTexture getTransmissionTexture}. */\n  getTransmissionFactor() {\n    return this.get('transmissionFactor');\n  }\n  /** Transmission; linear multiplier. See {@link Transmission.getTransmissionTexture getTransmissionTexture}. */\n  setTransmissionFactor(factor) {\n    return this.set('transmissionFactor', factor);\n  }\n  /**\n   * Transmission texture; linear multiplier. The `r` channel of this texture specifies\n   * transmission [0-1] of the material's surface. By default this is a thin transparency\n   * effect, but volume effects (refraction, subsurface scattering) may be introduced with the\n   * addition of the `KHR_materials_volume` extension.\n   */\n  getTransmissionTexture() {\n    return this.getRef('transmissionTexture');\n  }\n  /**\n   * Settings affecting the material's use of its transmission texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getTransmissionTextureInfo() {\n    return this.getRef('transmissionTexture') ? this.getRef('transmissionTextureInfo') : null;\n  }\n  /** Sets transmission texture. See {@link Transmission.getTransmissionTexture getTransmissionTexture}. */\n  setTransmissionTexture(texture) {\n    return this.setRef('transmissionTexture', texture, {\n      channels: R\n    });\n  }\n}\nTransmission.EXTENSION_NAME = KHR_MATERIALS_TRANSMISSION;\n\n/**\n * [`KHR_materials_transmission`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_transmission/)\n * provides a common type of optical transparency: infinitely-thin materials with no refraction,\n * scattering, or dispersion.\n *\n * ![Illustration](/media/extensions/khr-materials-transmission.png)\n *\n * > _**Figure:** Sphere using `KHR_materials_transmission` with varying roughness (0.0, 0.2, 0.4).\n * > Source: Khronos Group._\n *\n * While default PBR materials using alpha blending become invisible as their opacity approaches\n * zero, a transmissive material continues to reflect light in a glass-like manner, even at low\n * transmission values. When combined with {@link KHRMaterialsVolume}, transmission may be used for\n * thicker materials and refractive effects.\n *\n * Properties:\n * - {@link Transmission}\n *\n * ### Example\n *\n * The `KHRMaterialsTransmission` class provides a single {@link ExtensionProperty} type,\n * `Transmission`, which may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsTransmission, Transmission } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const transmissionExtension = document.createExtension(KHRMaterialsTransmission);\n *\n * // Create a Transmission property.\n * const transmission = transmissionExtension.createTransmission()\n * \t.setTransmissionFactor(1.0);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_transmission', transmission);\n * ```\n */\nclass KHRMaterialsTransmission extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_TRANSMISSION;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Transmission property for use on a {@link Material}. */\n  createTransmission() {\n    return new Transmission(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_TRANSMISSION]) {\n        const transmission = this.createTransmission();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_TRANSMISSION, transmission);\n        const transmissionDef = materialDef.extensions[KHR_MATERIALS_TRANSMISSION];\n        // Factors.\n        if (transmissionDef.transmissionFactor !== undefined) {\n          transmission.setTransmissionFactor(transmissionDef.transmissionFactor);\n        }\n        // Textures.\n        if (transmissionDef.transmissionTexture !== undefined) {\n          const textureInfoDef = transmissionDef.transmissionTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          transmission.setTransmissionTexture(texture);\n          context.setTextureInfo(transmission.getTransmissionTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const transmission = material.getExtension(KHR_MATERIALS_TRANSMISSION);\n      if (transmission) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const transmissionDef = materialDef.extensions[KHR_MATERIALS_TRANSMISSION] = {\n          transmissionFactor: transmission.getTransmissionFactor()\n        };\n        // Textures.\n        if (transmission.getTransmissionTexture()) {\n          const texture = transmission.getTransmissionTexture();\n          const textureInfo = transmission.getTransmissionTextureInfo();\n          transmissionDef.transmissionTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsTransmission.EXTENSION_NAME = KHR_MATERIALS_TRANSMISSION;\n\n/**\n * Converts a PBR {@link Material} to an unlit shading model. See {@link KHRMaterialsUnlit}.\n */\nclass Unlit extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_UNLIT;\n    this.propertyType = 'Unlit';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n}\nUnlit.EXTENSION_NAME = KHR_MATERIALS_UNLIT;\n\n/**\n * [`KHR_materials_unlit`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_unlit/)\n * defines an unlit shading model for use in glTF 2.0 materials.\n *\n * ![Illustration](/media/extensions/khr-materials-unlit.png)\n *\n * > _**Figure:** Unlit materials are useful for flat shading, stylized effects, and for improving\n * > performance on mobile devices. Source: [Model by Hayden VanEarden](https://sketchfab.com/3d-models/summertime-kirby-c5711316103a4d67a62c34cfe8710938)._\n *\n * Unlit (also \"Shadeless\" or \"Constant\") materials provide a simple alternative to the Physically\n * Based Rendering (PBR) shading models provided by the core specification. Unlit materials are\n * often useful for cheaper rendering on performance-contrained devices, e.g. mobile phones.\n * Additionally, unlit materials can be very useful in achieving stylized, non-photo-realistic\n * effects like hand painted illustrative styles or baked toon shaders.\n *\n * Properties:\n * - {@link Unlit}\n *\n * ### Example\n *\n * The `KHRMaterialsUnlit` class provides a single {@link ExtensionProperty} type, `Unlit`, which may\n * be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsUnlit, Unlit } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const unlitExtension = document.createExtension(KHRMaterialsUnlit);\n *\n * // Create an Unlit property.\n * const unlit = unlitExtension.createUnlit();\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_unlit', unlit);\n * ```\n */\nclass KHRMaterialsUnlit extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_UNLIT;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Unlit property for use on a {@link Material}. */\n  createUnlit() {\n    return new Unlit(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const materialDefs = context.jsonDoc.json.materials || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_UNLIT]) {\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_UNLIT, this.createUnlit());\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      if (material.getExtension(KHR_MATERIALS_UNLIT)) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        materialDef.extensions[KHR_MATERIALS_UNLIT] = {};\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsUnlit.EXTENSION_NAME = KHR_MATERIALS_UNLIT;\n\n/**\n * Maps {@link Variant}s to {@link Material}s. See {@link KHRMaterialsVariants}.\n */\nclass Mapping extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_VARIANTS;\n    this.propertyType = 'Mapping';\n    this.parentTypes = ['MappingList'];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      material: null,\n      variants: new RefSet()\n    });\n  }\n  /** The {@link Material} designated for this {@link Primitive}, under the given variants. */\n  getMaterial() {\n    return this.getRef('material');\n  }\n  /** The {@link Material} designated for this {@link Primitive}, under the given variants. */\n  setMaterial(material) {\n    return this.setRef('material', material);\n  }\n  /** Adds a {@link Variant} to this mapping. */\n  addVariant(variant) {\n    return this.addRef('variants', variant);\n  }\n  /** Removes a {@link Variant} from this mapping. */\n  removeVariant(variant) {\n    return this.removeRef('variants', variant);\n  }\n  /** Lists {@link Variant}s in this mapping. */\n  listVariants() {\n    return this.listRefs('variants');\n  }\n}\nMapping.EXTENSION_NAME = KHR_MATERIALS_VARIANTS;\n\n/**\n * List of material variant {@link Mapping}s. See {@link KHRMaterialsVariants}.\n */\nclass MappingList extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_VARIANTS;\n    this.propertyType = 'MappingList';\n    this.parentTypes = [PropertyType.PRIMITIVE];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      mappings: new RefSet()\n    });\n  }\n  /** Adds a {@link Mapping} to this mapping. */\n  addMapping(mapping) {\n    return this.addRef('mappings', mapping);\n  }\n  /** Removes a {@link Mapping} from the list for this {@link Primitive}. */\n  removeMapping(mapping) {\n    return this.removeRef('mappings', mapping);\n  }\n  /** Lists {@link Mapping}s in this {@link Primitive}. */\n  listMappings() {\n    return this.listRefs('mappings');\n  }\n}\nMappingList.EXTENSION_NAME = KHR_MATERIALS_VARIANTS;\n\n/**\n * Defines a variant of a {@link Material}. See {@link KHRMaterialsVariants}.\n */\nclass Variant extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_VARIANTS;\n    this.propertyType = 'Variant';\n    this.parentTypes = ['MappingList'];\n  }\n}\nVariant.EXTENSION_NAME = KHR_MATERIALS_VARIANTS;\n\n/**\n * [`KHR_materials_variants`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_variants/)\n * defines alternate {@link Material} states for any {@link Primitive} in the scene.\n *\n * ![Illustration](/media/extensions/khr-materials-variants.jpg)\n *\n * > _**Figure:** A sneaker, in three material variants. Source: Khronos Group._\n *\n * Uses include product configurators, night/day states, healthy/damaged states, etc. The\n * `KHRMaterialsVariants` class provides three {@link ExtensionProperty} types: `Variant`, `Mapping`,\n * and `MappingList`. When attached to {@link Primitive} properties, these offer flexible ways of\n * defining the variants available to an application. Triggering a variant is out of scope of this\n * extension, but could be handled in the application with a UI dropdown, particular game states,\n * and so on.\n *\n * Mesh geometry cannot be changed by this extension, although another extension\n * (tentative: `KHR_mesh_variants`) is under consideration by the Khronos Group, for that purpose.\n *\n * Properties:\n * - {@link Variant}\n * - {@link Mapping}\n * - {@link MappingList}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMaterialsVariants } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const variantExtension = document.createExtension(KHRMaterialsVariants);\n *\n * // Create some Variant states.\n * const healthyVariant = variantExtension.createVariant('Healthy');\n * const damagedVariant = variantExtension.createVariant('Damaged');\n *\n * // Create mappings from a Variant state to a Material.\n * const healthyMapping = variantExtension.createMapping()\n * \t.addVariant(healthyVariant)\n * \t.setMaterial(healthyMat);\n * const damagedMapping = variantExtension.createMapping()\n * \t.addVariant(damagedVariant)\n * \t.setMaterial(damagedMat);\n *\n * // Attach the mappings to a Primitive.\n * primitive.setExtension(\n * \t'KHR_materials_variants',\n * \tvariantExtension.createMappingList()\n * \t\t.addMapping(healthyMapping)\n * \t\t.addMapping(damagedMapping)\n * );\n * ```\n *\n * A few notes about this extension:\n *\n * 1. Viewers that don't recognized this extension will show the default material for each primitive\n * \t instead, so assign that material accordingly. This material can be — but doesn't have to be —\n * \t associated with one of the available variants.\n * 2. Mappings can list multiple Variants. In that case, the first Mapping containing an active\n * \t Variant will be chosen by the viewer.\n * 3. Variant names are how these states are identified, so choose informative names.\n * 4. When writing the file to an unpacked `.gltf`, instead of an embedded `.glb`, viewers will have\n * \t the option of downloading only textures associated with the default state, and lazy-loading\n * \t any textures for inactive Variants only when they are needed.\n */\nclass KHRMaterialsVariants extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_VARIANTS;\n  }\n  /** Creates a new MappingList property. */\n  createMappingList() {\n    return new MappingList(this.document.getGraph());\n  }\n  /** Creates a new Variant property. */\n  createVariant(name = '') {\n    return new Variant(this.document.getGraph(), name);\n  }\n  /** Creates a new Mapping property. */\n  createMapping() {\n    return new Mapping(this.document.getGraph());\n  }\n  /** Lists all Variants on the current Document. */\n  listVariants() {\n    return Array.from(this.properties).filter(prop => prop instanceof Variant);\n  }\n  /** @hidden */\n  read(context) {\n    const jsonDoc = context.jsonDoc;\n    if (!jsonDoc.json.extensions || !jsonDoc.json.extensions[KHR_MATERIALS_VARIANTS]) return this;\n    // Read all top-level variant names.\n    const variantsRootDef = jsonDoc.json.extensions[KHR_MATERIALS_VARIANTS];\n    const variantDefs = variantsRootDef.variants || [];\n    const variants = variantDefs.map(variantDef => this.createVariant().setName(variantDef.name || ''));\n    // For each mesh primitive, read its material/variant mappings.\n    const meshDefs = jsonDoc.json.meshes || [];\n    meshDefs.forEach((meshDef, meshIndex) => {\n      const mesh = context.meshes[meshIndex];\n      const primDefs = meshDef.primitives || [];\n      primDefs.forEach((primDef, primIndex) => {\n        if (!primDef.extensions || !primDef.extensions[KHR_MATERIALS_VARIANTS]) {\n          return;\n        }\n        const mappingList = this.createMappingList();\n        const variantPrimDef = primDef.extensions[KHR_MATERIALS_VARIANTS];\n        for (const mappingDef of variantPrimDef.mappings) {\n          const mapping = this.createMapping();\n          if (mappingDef.material !== undefined) {\n            mapping.setMaterial(context.materials[mappingDef.material]);\n          }\n          for (const variantIndex of mappingDef.variants || []) {\n            mapping.addVariant(variants[variantIndex]);\n          }\n          mappingList.addMapping(mapping);\n        }\n        mesh.listPrimitives()[primIndex].setExtension(KHR_MATERIALS_VARIANTS, mappingList);\n      });\n    });\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    const variants = this.listVariants();\n    if (!variants.length) return this;\n    // Write all top-level variant names.\n    const variantDefs = [];\n    const variantIndexMap = new Map();\n    for (const variant of variants) {\n      variantIndexMap.set(variant, variantDefs.length);\n      variantDefs.push(context.createPropertyDef(variant));\n    }\n    // For each mesh primitive, write its material/variant mappings.\n    for (const mesh of this.document.getRoot().listMeshes()) {\n      const meshIndex = context.meshIndexMap.get(mesh);\n      mesh.listPrimitives().forEach((prim, primIndex) => {\n        const mappingList = prim.getExtension(KHR_MATERIALS_VARIANTS);\n        if (!mappingList) return;\n        const primDef = context.jsonDoc.json.meshes[meshIndex].primitives[primIndex];\n        const mappingDefs = mappingList.listMappings().map(mapping => {\n          const mappingDef = context.createPropertyDef(mapping);\n          const material = mapping.getMaterial();\n          if (material) {\n            mappingDef.material = context.materialIndexMap.get(material);\n          }\n          mappingDef.variants = mapping.listVariants().map(variant => variantIndexMap.get(variant));\n          return mappingDef;\n        });\n        primDef.extensions = primDef.extensions || {};\n        primDef.extensions[KHR_MATERIALS_VARIANTS] = {\n          mappings: mappingDefs\n        };\n      });\n    }\n    jsonDoc.json.extensions = jsonDoc.json.extensions || {};\n    jsonDoc.json.extensions[KHR_MATERIALS_VARIANTS] = {\n      variants: variantDefs\n    };\n    return this;\n  }\n}\nKHRMaterialsVariants.EXTENSION_NAME = KHR_MATERIALS_VARIANTS;\n\nconst {\n  G\n} = TextureChannel;\n/**\n * Defines volume on a PBR {@link Material}. See {@link KHRMaterialsVolume}.\n */\nclass Volume extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_MATERIALS_VOLUME;\n    this.propertyType = 'Volume';\n    this.parentTypes = [PropertyType.MATERIAL];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      thicknessFactor: 0.0,\n      thicknessTexture: null,\n      thicknessTextureInfo: new TextureInfo(this.graph, 'thicknessTexture'),\n      attenuationDistance: Infinity,\n      attenuationColor: [1.0, 1.0, 1.0]\n    });\n  }\n  /**********************************************************************************************\n   * Thickness.\n   */\n  /**\n   * Thickness of the volume beneath the surface in meters in the local coordinate system of the\n   * node. If the value is 0 the material is thin-walled. Otherwise the material is a volume\n   * boundary. The doubleSided property has no effect on volume boundaries.\n   */\n  getThicknessFactor() {\n    return this.get('thicknessFactor');\n  }\n  /**\n   * Thickness of the volume beneath the surface in meters in the local coordinate system of the\n   * node. If the value is 0 the material is thin-walled. Otherwise the material is a volume\n   * boundary. The doubleSided property has no effect on volume boundaries.\n   */\n  setThicknessFactor(factor) {\n    return this.set('thicknessFactor', factor);\n  }\n  /**\n   * Texture that defines the thickness, stored in the G channel. This will be multiplied by\n   * thicknessFactor.\n   */\n  getThicknessTexture() {\n    return this.getRef('thicknessTexture');\n  }\n  /**\n   * Settings affecting the material's use of its thickness texture. If no texture is attached,\n   * {@link TextureInfo} is `null`.\n   */\n  getThicknessTextureInfo() {\n    return this.getRef('thicknessTexture') ? this.getRef('thicknessTextureInfo') : null;\n  }\n  /**\n   * Texture that defines the thickness, stored in the G channel. This will be multiplied by\n   * thicknessFactor.\n   */\n  setThicknessTexture(texture) {\n    return this.setRef('thicknessTexture', texture, {\n      channels: G\n    });\n  }\n  /**********************************************************************************************\n   * Attenuation.\n   */\n  /**\n   * Density of the medium given as the average distance in meters that light travels in the\n   * medium before interacting with a particle.\n   */\n  getAttenuationDistance() {\n    return this.get('attenuationDistance');\n  }\n  /**\n   * Density of the medium given as the average distance in meters that light travels in the\n   * medium before interacting with a particle.\n   */\n  setAttenuationDistance(distance) {\n    return this.set('attenuationDistance', distance);\n  }\n  /**\n   * Color (linear) that white light turns into due to absorption when reaching the attenuation\n   * distance.\n   */\n  getAttenuationColor() {\n    return this.get('attenuationColor');\n  }\n  /**\n   * Color (linear) that white light turns into due to absorption when reaching the attenuation\n   * distance.\n   */\n  setAttenuationColor(color) {\n    return this.set('attenuationColor', color);\n  }\n}\nVolume.EXTENSION_NAME = KHR_MATERIALS_VOLUME;\n\n/**\n * [KHR_materials_volume](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_materials_volume/)\n * adds refraction, absorption, or scattering to a glTF PBR material already using transmission or\n * translucency.\n *\n * ![Illustration](/media/extensions/khr-materials-volume.png)\n *\n * > _**Figure:** Base color changes the amount of light passing through the volume boundary\n * > (left). The overall color of the object is the same everywhere, as if the object is covered\n * > with a colored, transparent foil. Absorption changes the amount of light traveling through the\n * > volume (right). The overall color depends on the distance the light traveled through it; at\n * > small distances (tail of the dragon) less light is absorbed and the color is brighter than at\n * > large distances. Source: Khronos Group._\n *\n * By default, a glTF 2.0 material describes the scattering properties of a surface enclosing an\n * infinitely thin volume. The surface defined by the mesh represents a thin wall. The volume\n * extension makes it possible to turn the surface into an interface between volumes. The mesh to\n * which the material is attached defines the boundaries of an homogeneous medium and therefore must\n * be manifold. Volumes provide effects like refraction, absorption and scattering. Scattering\n * effects will require future (TBD) extensions.\n *\n * The volume extension must be combined with {@link KHRMaterialsTransmission} or\n * `KHR_materials_translucency` in order to define entry of light into the volume.\n *\n * Properties:\n * - {@link Volume}\n *\n * ### Example\n *\n * The `KHRMaterialsVolume` class provides a single {@link ExtensionProperty} type, `Volume`, which\n * may be attached to any {@link Material} instance. For example:\n *\n * ```typescript\n * import { KHRMaterialsVolume, Volume } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const volumeExtension = document.createExtension(KHRMaterialsVolume);\n *\n * // Create a Volume property.\n * const volume = volumeExtension.createVolume()\n * \t.setThicknessFactor(1.0)\n * \t.setThicknessTexture(texture)\n * \t.setAttenuationDistance(1.0)\n * \t.setAttenuationColorFactor([1, 0.5, 0.5]);\n *\n * // Attach the property to a Material.\n * material.setExtension('KHR_materials_volume', volume);\n * ```\n *\n * A thickness texture is required in most realtime renderers, and can be baked in software such as\n * Blender or Substance Painter. When `thicknessFactor = 0`, all volumetric effects are disabled.\n */\nclass KHRMaterialsVolume extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MATERIALS_VOLUME;\n    this.prereadTypes = [PropertyType.MESH];\n    this.prewriteTypes = [PropertyType.MESH];\n  }\n  /** Creates a new Volume property for use on a {@link Material}. */\n  createVolume() {\n    return new Volume(this.document.getGraph());\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(_context) {\n    return this;\n  }\n  /** @hidden */\n  preread(context) {\n    const jsonDoc = context.jsonDoc;\n    const materialDefs = jsonDoc.json.materials || [];\n    const textureDefs = jsonDoc.json.textures || [];\n    materialDefs.forEach((materialDef, materialIndex) => {\n      if (materialDef.extensions && materialDef.extensions[KHR_MATERIALS_VOLUME]) {\n        const volume = this.createVolume();\n        context.materials[materialIndex].setExtension(KHR_MATERIALS_VOLUME, volume);\n        const volumeDef = materialDef.extensions[KHR_MATERIALS_VOLUME];\n        // Factors.\n        if (volumeDef.thicknessFactor !== undefined) {\n          volume.setThicknessFactor(volumeDef.thicknessFactor);\n        }\n        if (volumeDef.attenuationDistance !== undefined) {\n          volume.setAttenuationDistance(volumeDef.attenuationDistance);\n        }\n        if (volumeDef.attenuationColor !== undefined) {\n          volume.setAttenuationColor(volumeDef.attenuationColor);\n        }\n        // Textures.\n        if (volumeDef.thicknessTexture !== undefined) {\n          const textureInfoDef = volumeDef.thicknessTexture;\n          const texture = context.textures[textureDefs[textureInfoDef.index].source];\n          volume.setThicknessTexture(texture);\n          context.setTextureInfo(volume.getThicknessTextureInfo(), textureInfoDef);\n        }\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  prewrite(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listMaterials().forEach(material => {\n      const volume = material.getExtension(KHR_MATERIALS_VOLUME);\n      if (volume) {\n        const materialIndex = context.materialIndexMap.get(material);\n        const materialDef = jsonDoc.json.materials[materialIndex];\n        materialDef.extensions = materialDef.extensions || {};\n        // Factors.\n        const volumeDef = materialDef.extensions[KHR_MATERIALS_VOLUME] = {};\n        if (volume.getThicknessFactor() > 0) {\n          volumeDef.thicknessFactor = volume.getThicknessFactor();\n        }\n        if (Number.isFinite(volume.getAttenuationDistance())) {\n          volumeDef.attenuationDistance = volume.getAttenuationDistance();\n        }\n        if (!MathUtils.eq(volume.getAttenuationColor(), [1, 1, 1])) {\n          volumeDef.attenuationColor = volume.getAttenuationColor();\n        }\n        // Textures.\n        if (volume.getThicknessTexture()) {\n          const texture = volume.getThicknessTexture();\n          const textureInfo = volume.getThicknessTextureInfo();\n          volumeDef.thicknessTexture = context.createTextureInfoDef(texture, textureInfo);\n        }\n      }\n    });\n    return this;\n  }\n}\nKHRMaterialsVolume.EXTENSION_NAME = KHR_MATERIALS_VOLUME;\n\n/**\n * [`KHR_mesh_quantization`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/)\n * expands allowed component types for vertex attributes to include 16- and 8-bit storage.\n *\n * Quantization provides a memory/precision tradeoff — depending on the application needs, 16-bit or\n * 8-bit storage can be sufficient for mesh geometry, at 1/2 or 1/4 the size. For example, a 10x10\n * mesh might be written to a uint16 {@link Accessor}, with values `0–65536`, normalized to be\n * interpreted as `0–1`. With an additional 10x scale on any node {@link Node} instantiating the\n * quantized {@link Mesh}, the model retains its original scale with a minimal quality loss and\n * up to 50% file size reduction.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the\n * {@link Document}, and affects the entire Document by allowing more flexible use of\n * {@link Accessor} types for vertex attributes. Without the Extension, the same use of these data\n * types would yield an invalid glTF document, under the stricter core glTF specification.\n *\n * Properties:\n * - N/A\n *\n * ### Example\n *\n * ```typescript\n * import { KHRMeshQuantization } from '@gltf-transform/extensions';\n * import { quantize } from '@gltf-transform/functions';\n *\n * // Create an Extension attached to the Document.\n * const quantizationExtension = document.createExtension(KHRMeshQuantization).setRequired(true);\n *\n * // Use Uint16Array, Uint8Array, Int16Array, and Int8Array in vertex accessors manually,\n * // or apply the provided quantize() function to compute quantized accessors automatically:\n * await document.transform(quantize({\n * \tquantizePosition: 16,\n * \tquantizeNormal: 12,\n * \tquantizeTexcoord: 14\n * }));\n * ```\n *\n * For more documentation about automatic quantization, see the {@link quantize} function.\n */\nclass KHRMeshQuantization extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_MESH_QUANTIZATION;\n  }\n  /** @hidden */\n  read(_) {\n    return this;\n  }\n  /** @hidden */\n  write(_) {\n    return this;\n  }\n}\nKHRMeshQuantization.EXTENSION_NAME = KHR_MESH_QUANTIZATION;\n\nclass KTX2ImageUtils {\n  match(array) {\n    return array[0] === 0xab && array[1] === 0x4b && array[2] === 0x54 && array[3] === 0x58 && array[4] === 0x20 && array[5] === 0x32 && array[6] === 0x30 && array[7] === 0xbb && array[8] === 0x0d && array[9] === 0x0a && array[10] === 0x1a && array[11] === 0x0a;\n  }\n  getSize(array) {\n    const container = read(array);\n    return [container.pixelWidth, container.pixelHeight];\n  }\n  getChannels(array) {\n    const container = read(array);\n    const dfd = container.dataFormatDescriptor[0];\n    if (dfd.colorModel === KHR_DF_MODEL_ETC1S) {\n      return dfd.samples.length === 2 && (dfd.samples[1].channelType & 0xf) === 15 ? 4 : 3;\n    } else if (dfd.colorModel === KHR_DF_MODEL_UASTC) {\n      return (dfd.samples[0].channelType & 0xf) === 3 ? 4 : 3;\n    }\n    throw new Error(`Unexpected KTX2 colorModel, \"${dfd.colorModel}\".`);\n  }\n  getVRAMByteLength(array) {\n    const container = read(array);\n    const hasAlpha = this.getChannels(array) > 3;\n    let uncompressedBytes = 0;\n    for (let i = 0; i < container.levels.length; i++) {\n      const level = container.levels[i];\n      // Use level.uncompressedByteLength for UASTC; for ETC1S it's 0.\n      if (level.uncompressedByteLength) {\n        uncompressedBytes += level.uncompressedByteLength;\n      } else {\n        const levelWidth = Math.max(1, Math.floor(container.pixelWidth / Math.pow(2, i)));\n        const levelHeight = Math.max(1, Math.floor(container.pixelHeight / Math.pow(2, i)));\n        const blockSize = hasAlpha ? 16 : 8;\n        uncompressedBytes += levelWidth / 4 * (levelHeight / 4) * blockSize;\n      }\n    }\n    return uncompressedBytes;\n  }\n}\n/**\n * [`KHR_texture_basisu`](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu)\n * enables KTX2 GPU textures with Basis Universal supercompression for any material texture.\n *\n * GPU texture formats, unlike traditional image formats, remain compressed in GPU memory. As a\n * result, they (1) upload to the GPU much more quickly, and (2) require much less GPU memory. In\n * certain cases they may also have smaller filesizes than PNG or JPEG textures, but this is not\n * guaranteed. GPU textures often require more careful tuning during compression to maintain image\n * quality, but this extra effort is worthwhile for applications that need to maintain a smooth\n * framerate while uploading images, or where GPU memory is limited.\n *\n * Defining no {@link ExtensionProperty} types, this {@link Extension} is simply attached to the\n * {@link Document}, and affects the entire Document by allowing use of the `image/ktx2` MIME type\n * and passing KTX2 image data to the {@link Texture.setImage} method. Without the Extension, the\n * same MIME types and image data would yield an invalid glTF document, under the stricter core glTF\n * specification.\n *\n * Properties:\n * - N/A\n *\n * ### Example\n *\n * ```typescript\n * import { KHRTextureBasisu } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const basisuExtension = document.createExtension(KHRTextureBasisu)\n * \t.setRequired(true);\n * document.createTexture('MyCompressedTexture')\n * \t.setMimeType('image/ktx2')\n * \t.setImage(fs.readFileSync('my-texture.ktx2'));\n * ```\n *\n * Compression is not done automatically when adding the extension as shown above — you must\n * compress the image data first, then pass the `.ktx2` payload to {@link Texture.setImage}. The\n * glTF Transform CLI has functions to help with this, or any similar KTX2-capable\n * utility will work.\n *\n * When the `KHR_texture_basisu` extension is added to a file by glTF Transform, the extension\n * should always be required. This tool does not support writing assets that \"fall back\" to optional\n * PNG or JPEG image data.\n *\n * > _**NOTICE:** Compressing some textures — particularly 3-component (RGB) normal maps, and\n * > occlusion/roughness/metalness maps, may give poor results with the ETC1S compression option.\n * > These issues can often be avoided with the larger UASTC compression option, or by upscaling the\n * > texture before compressing it.\n * >\n * > For best results when authoring new textures, use\n * > [texture dilation](https://docs.substance3d.com/spdoc/padding-134643719.html) and minimize\n * > prominent UV seams._\n */\nclass KHRTextureBasisu extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_TEXTURE_BASISU;\n    /** @hidden */\n    this.prereadTypes = [PropertyType.TEXTURE];\n  }\n  /** @hidden */\n  static register() {\n    ImageUtils.registerFormat('image/ktx2', new KTX2ImageUtils());\n  }\n  /** @hidden */\n  preread(context) {\n    context.jsonDoc.json.textures.forEach(textureDef => {\n      if (textureDef.extensions && textureDef.extensions[KHR_TEXTURE_BASISU]) {\n        const basisuDef = textureDef.extensions[KHR_TEXTURE_BASISU];\n        textureDef.source = basisuDef.source;\n      }\n    });\n    return this;\n  }\n  /** @hidden */\n  read(_context) {\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const jsonDoc = context.jsonDoc;\n    this.document.getRoot().listTextures().forEach(texture => {\n      if (texture.getMimeType() === 'image/ktx2') {\n        const imageIndex = context.imageIndexMap.get(texture);\n        jsonDoc.json.textures.forEach(textureDef => {\n          if (textureDef.source === imageIndex) {\n            textureDef.extensions = textureDef.extensions || {};\n            textureDef.extensions[KHR_TEXTURE_BASISU] = {\n              source: textureDef.source\n            };\n            delete textureDef.source;\n          }\n        });\n      }\n    });\n    return this;\n  }\n}\nKHRTextureBasisu.EXTENSION_NAME = KHR_TEXTURE_BASISU;\n\n/**\n * Defines UV transform for a {@link TextureInfo}. See {@link KHRTextureTransform}.\n */\nclass Transform extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_TEXTURE_TRANSFORM;\n    this.propertyType = 'Transform';\n    this.parentTypes = [PropertyType.TEXTURE_INFO];\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      offset: [0.0, 0.0],\n      rotation: 0,\n      scale: [1.0, 1.0],\n      texCoord: null\n    });\n  }\n  getOffset() {\n    return this.get('offset');\n  }\n  setOffset(offset) {\n    return this.set('offset', offset);\n  }\n  getRotation() {\n    return this.get('rotation');\n  }\n  setRotation(rotation) {\n    return this.set('rotation', rotation);\n  }\n  getScale() {\n    return this.get('scale');\n  }\n  setScale(scale) {\n    return this.set('scale', scale);\n  }\n  getTexCoord() {\n    return this.get('texCoord');\n  }\n  setTexCoord(texCoord) {\n    return this.set('texCoord', texCoord);\n  }\n}\nTransform.EXTENSION_NAME = KHR_TEXTURE_TRANSFORM;\n\n/**\n * [`KHR_texture_transform`](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_texture_transform/)\n * adds offset, rotation, and scale to {@link TextureInfo} properties.\n *\n * Affine UV transforms are useful for reducing the number of textures the GPU must load, improving\n * performance when used in techniques like texture atlases. UV transforms cannot be animated at\n * this time.\n *\n * Properties:\n * - {@link Transform}\n *\n * ### Example\n *\n * The `KHRTextureTransform` class provides a single {@link ExtensionProperty} type, `Transform`, which\n * may be attached to any {@link TextureInfo} instance. For example:\n *\n * ```typescript\n * import { KHRTextureTransform } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const transformExtension = document.createExtension(KHRTextureTransform)\n * \t.setRequired(true);\n *\n * // Create a reusable Transform.\n * const transform = transformExtension.createTransform()\n * \t.setScale([100, 100]);\n *\n * // Apply the Transform to a Material's baseColorTexture.\n * document.createMaterial()\n * \t.setBaseColorTexture(myTexture)\n * \t.getBaseColorTextureInfo()\n * \t.setExtension('KHR_texture_transform', transform);\n * ```\n */\nclass KHRTextureTransform extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_TEXTURE_TRANSFORM;\n  }\n  /** Creates a new Transform property for use on a {@link TextureInfo}. */\n  createTransform() {\n    return new Transform(this.document.getGraph());\n  }\n  /** @hidden */\n  read(context) {\n    for (const [textureInfo, textureInfoDef] of Array.from(context.textureInfos.entries())) {\n      if (!textureInfoDef.extensions || !textureInfoDef.extensions[KHR_TEXTURE_TRANSFORM]) continue;\n      const transform = this.createTransform();\n      const transformDef = textureInfoDef.extensions[KHR_TEXTURE_TRANSFORM];\n      if (transformDef.offset !== undefined) transform.setOffset(transformDef.offset);\n      if (transformDef.rotation !== undefined) transform.setRotation(transformDef.rotation);\n      if (transformDef.scale !== undefined) transform.setScale(transformDef.scale);\n      if (transformDef.texCoord !== undefined) transform.setTexCoord(transformDef.texCoord);\n      textureInfo.setExtension(KHR_TEXTURE_TRANSFORM, transform);\n    }\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const textureInfoEntries = Array.from(context.textureInfoDefMap.entries());\n    for (const [textureInfo, textureInfoDef] of textureInfoEntries) {\n      const transform = textureInfo.getExtension(KHR_TEXTURE_TRANSFORM);\n      if (!transform) continue;\n      textureInfoDef.extensions = textureInfoDef.extensions || {};\n      const transformDef = {};\n      const eq = MathUtils.eq;\n      if (!eq(transform.getOffset(), [0, 0])) transformDef.offset = transform.getOffset();\n      if (transform.getRotation() !== 0) transformDef.rotation = transform.getRotation();\n      if (!eq(transform.getScale(), [1, 1])) transformDef.scale = transform.getScale();\n      if (transform.getTexCoord() != null) transformDef.texCoord = transform.getTexCoord();\n      textureInfoDef.extensions[KHR_TEXTURE_TRANSFORM] = transformDef;\n    }\n    return this;\n  }\n}\nKHRTextureTransform.EXTENSION_NAME = KHR_TEXTURE_TRANSFORM;\n\nconst PARENT_TYPES = [PropertyType.ROOT, PropertyType.SCENE, PropertyType.NODE, PropertyType.MESH, PropertyType.MATERIAL, PropertyType.TEXTURE, PropertyType.ANIMATION];\n/**\n * Defines an XMP packet associated with a Document or Property. See {@link KHRXMP}.\n */\nclass Packet extends ExtensionProperty {\n  init() {\n    this.extensionName = KHR_XMP_JSON_LD;\n    this.propertyType = 'Packet';\n    this.parentTypes = PARENT_TYPES;\n  }\n  getDefaults() {\n    return Object.assign(super.getDefaults(), {\n      context: {},\n      properties: {}\n    });\n  }\n  /**********************************************************************************************\n   * Context.\n   */\n  /**\n   * Returns the XMP context definition URL for the given term.\n   * See: https://json-ld.org/spec/latest/json-ld/#the-context\n   * @param term Case-sensitive term. Usually a concise, lowercase, alphanumeric identifier.\n   */\n  getContext() {\n    return this.get('context');\n  }\n  /**\n   * Sets the XMP context definition URL for the given term.\n   * See: https://json-ld.org/spec/latest/json-ld/#the-context\n   *\n   * Example:\n   *\n   * ```typescript\n   * packet.setContext({\n   *   dc: 'http://purl.org/dc/elements/1.1/',\n   *   model3d: 'https://schema.khronos.org/model3d/xsd/1.0/',\n   * });\n   * ```\n   *\n   * @param term Case-sensitive term. Usually a concise, lowercase, alphanumeric identifier.\n   * @param definition URI for XMP namespace.\n   */\n  setContext(context) {\n    return this.set('context', _extends({}, context));\n  }\n  /**********************************************************************************************\n   * Properties.\n   */\n  /**\n   * Lists properties defined in this packet.\n   *\n   * Example:\n   *\n   * ```typescript\n   * packet.listProperties(); // → ['dc:Language', 'dc:Creator', 'xmp:CreateDate']\n   * ```\n   */\n  listProperties() {\n    return Object.keys(this.get('properties'));\n  }\n  /**\n   * Returns the value of a property, as a literal or JSONLD object.\n   *\n   * Example:\n   *\n   * ```typescript\n   * packet.getProperty('dc:Creator'); // → {\"@list\": [\"Acme, Inc.\"]}\n   * packet.getProperty('dc:Title'); // → {\"@type\": \"rdf:Alt\", \"rdf:_1\": {\"@language\": \"en-US\", \"@value\": \"Lamp\"}}\n   * packet.getProperty('xmp:CreateDate'); // → \"2022-01-01\"\n   * ```\n   */\n  getProperty(name) {\n    const properties = this.get('properties');\n    return name in properties ? properties[name] : null;\n  }\n  /**\n   * Sets the value of a property, as a literal or JSONLD object.\n   *\n   * Example:\n   *\n   * ```typescript\n   * packet.setProperty('dc:Creator', {'@list': ['Acme, Inc.']});\n   * packet.setProperty('dc:Title', {\n   * \t'@type': 'rdf:Alt',\n   * \t'rdf:_1': {'@language': 'en-US', '@value': 'Lamp'}\n   * });\n   * packet.setProperty('model3d:preferredSurfaces', {'@list': ['vertical']});\n   * ```\n   */\n  setProperty(name, value) {\n    this._assertContext(name);\n    const properties = _extends({}, this.get('properties'));\n    if (value) {\n      properties[name] = value;\n    } else {\n      delete properties[name];\n    }\n    return this.set('properties', properties);\n  }\n  /**********************************************************************************************\n   * Serialize / Deserialize.\n   */\n  /**\n   * Serializes the packet context and properties to a JSONLD object.\n   */\n  toJSONLD() {\n    const context = copyJSON(this.get('context'));\n    const properties = copyJSON(this.get('properties'));\n    return _extends({\n      '@context': context\n    }, properties);\n  }\n  /**\n   * Deserializes a JSONLD packet, then overwrites existing context and properties with\n   * the new values.\n   */\n  fromJSONLD(jsonld) {\n    jsonld = copyJSON(jsonld);\n    // Context.\n    const context = jsonld['@context'];\n    if (context) this.set('context', context);\n    delete jsonld['@context'];\n    // Properties.\n    return this.set('properties', jsonld);\n  }\n  /**********************************************************************************************\n   * Validation.\n   */\n  /** @hidden */\n  _assertContext(name) {\n    const prefix = name.split(':')[0];\n    if (!(prefix in this.get('context'))) {\n      throw new Error(`${KHR_XMP_JSON_LD}: Missing context for term, \"${name}\".`);\n    }\n  }\n}\nPacket.EXTENSION_NAME = KHR_XMP_JSON_LD;\nfunction copyJSON(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\n/**\n * [KHR_xmp_json_ld](https://github.com/KhronosGroup/gltf/blob/main/extensions/2.0/Khronos/KHR_xmp_json_ld/)\n * defines XMP metadata associated with a glTF asset.\n *\n * XMP metadata provides standardized fields describing the content, provenance, usage\n * restrictions, or other attributes of a 3D model. XMP metadata does not generally affect the\n * parsing or runtime behavior of the content — for that, use custom extensions, custom vertex\n * attributes, or extras. Similarly, storage mechanisms other than XMP should be preferred\n * for binary content like mesh data, animations, or textures.\n *\n * Generally XMP metadata is associated with the entire glTF asset by attaching an XMP {@link Packet}\n * to the document {@link Root}. In less common cases where metadata must be associated with\n * specific subsets of a document, XMP Packets may be attached to {@link Scene}, {@link Node},\n * {@link Mesh}, {@link Material}, {@link Texture}, or {@link Animation} properties.\n *\n * Within each packet, XMP properties become available when an\n * [XMP namespace](https://www.adobe.io/xmp/docs/XMPNamespaces/) is registered\n * with {@link Packet.setContext}. Packets cannot use properties whose namespaces are not\n * registered as context. While not all XMP namespaces are relevant to 3D assets, some common\n * namespaces provide useful metadata about authorship and provenance. Additionally, the `model3d`\n * namespace provides certain properties specific to 3D content, such as Augmented Reality (AR)\n * orientation data.\n *\n * Common XMP contexts for 3D models include:\n *\n * | Prefix      | URI                                         | Name                           |\n * |:------------|:--------------------------------------------|:-------------------------------|\n * | `dc`        | http://purl.org/dc/elements/1.1/            | Dublin Core                    |\n * | `model3d`   | https://schema.khronos.org/model3d/xsd/1.0/ | Model 3D                       |\n * | `rdf`       | http://www.w3.org/1999/02/22-rdf-syntax-ns# | Resource Description Framework |\n * | `xmp`       | http://ns.adobe.com/xap/1.0/                | XMP                            |\n * | `xmpRights` | http://ns.adobe.com/xap/1.0/rights/         | XMP Rights Management          |\n *\n * Only the XMP contexts required for a packet should be assigned, and different packets\n * in the same asset may use different contexts. For greater detail on available XMP\n * contexts and how to use them in glTF assets, see the\n * [3DC Metadata Recommendations](https://github.com/KhronosGroup/3DC-Metadata-Recommendations/blob/main/model3d.md).\n *\n * Properties:\n * - {@link Packet}\n *\n * ### Example\n *\n * ```typescript\n * import { KHRXMP, Packet } from '@gltf-transform/extensions';\n *\n * // Create an Extension attached to the Document.\n * const xmpExtension = document.createExtension(KHRXMP);\n *\n * // Create Packet property.\n * const packet = xmpExtension.createPacket()\n * \t.setContext({\n * \t\tdc: 'http://purl.org/dc/elements/1.1/',\n * \t})\n *\t.setProperty('dc:Creator', {\"@list\": [\"Acme, Inc.\"]});\n *\n * // Option 1: Assign to Document Root.\n * document.getRoot().setExtension('KHR_xmp_json_ld', packet);\n *\n * // Option 2: Assign to a specific Property.\n * texture.setExtension('KHR_xmp_json_ld', packet);\n * ```\n */\nclass KHRXMP extends Extension {\n  constructor(...args) {\n    super(...args);\n    this.extensionName = KHR_XMP_JSON_LD;\n  }\n  /** Creates a new XMP packet, to be linked with a {@link Document} or {@link Property Properties}. */\n  createPacket() {\n    return new Packet(this.document.getGraph());\n  }\n  /** Lists XMP packets currently defined in a {@link Document}. */\n  listPackets() {\n    return Array.from(this.properties);\n  }\n  /** @hidden */\n  read(context) {\n    var _context$jsonDoc$json;\n    const extensionDef = (_context$jsonDoc$json = context.jsonDoc.json.extensions) == null ? void 0 : _context$jsonDoc$json[KHR_XMP_JSON_LD];\n    if (!extensionDef || !extensionDef.packets) return this;\n    // Deserialize packets.\n    const json = context.jsonDoc.json;\n    const root = this.document.getRoot();\n    const packets = extensionDef.packets.map(packetDef => this.createPacket().fromJSONLD(packetDef));\n    const defLists = [[json.asset], json.scenes, json.nodes, json.meshes, json.materials, json.images, json.animations];\n    const propertyLists = [[root], root.listScenes(), root.listNodes(), root.listMeshes(), root.listMaterials(), root.listTextures(), root.listAnimations()];\n    // Assign packets.\n    for (let i = 0; i < defLists.length; i++) {\n      const defs = defLists[i] || [];\n      for (let j = 0; j < defs.length; j++) {\n        const def = defs[j];\n        if (def.extensions && def.extensions[KHR_XMP_JSON_LD]) {\n          const xmpDef = def.extensions[KHR_XMP_JSON_LD];\n          propertyLists[i][j].setExtension(KHR_XMP_JSON_LD, packets[xmpDef.packet]);\n        }\n      }\n    }\n    return this;\n  }\n  /** @hidden */\n  write(context) {\n    const {\n      json\n    } = context.jsonDoc;\n    const packetDefs = [];\n    for (const packet of this.properties) {\n      // Serialize packets.\n      packetDefs.push(packet.toJSONLD());\n      // Assign packets.\n      for (const parent of packet.listParents()) {\n        let parentDef;\n        switch (parent.propertyType) {\n          case PropertyType.ROOT:\n            parentDef = json.asset;\n            break;\n          case PropertyType.SCENE:\n            parentDef = json.scenes[context.sceneIndexMap.get(parent)];\n            break;\n          case PropertyType.NODE:\n            parentDef = json.nodes[context.nodeIndexMap.get(parent)];\n            break;\n          case PropertyType.MESH:\n            parentDef = json.meshes[context.meshIndexMap.get(parent)];\n            break;\n          case PropertyType.MATERIAL:\n            parentDef = json.materials[context.materialIndexMap.get(parent)];\n            break;\n          case PropertyType.TEXTURE:\n            parentDef = json.images[context.imageIndexMap.get(parent)];\n            break;\n          case PropertyType.ANIMATION:\n            parentDef = json.animations[context.animationIndexMap.get(parent)];\n            break;\n          default:\n            parentDef = null;\n            this.document.getLogger().warn(`[${KHR_XMP_JSON_LD}]: Unsupported parent property, \"${parent.propertyType}\"`);\n            break;\n        }\n        if (!parentDef) continue;\n        parentDef.extensions = parentDef.extensions || {};\n        parentDef.extensions[KHR_XMP_JSON_LD] = {\n          packet: packetDefs.length - 1\n        };\n      }\n    }\n    if (packetDefs.length > 0) {\n      json.extensions = json.extensions || {};\n      json.extensions[KHR_XMP_JSON_LD] = {\n        packets: packetDefs\n      };\n    }\n    return this;\n  }\n}\nKHRXMP.EXTENSION_NAME = KHR_XMP_JSON_LD;\n\nconst KHRONOS_EXTENSIONS = [KHRDracoMeshCompression, KHRLightsPunctual, KHRMaterialsAnisotropy, KHRMaterialsClearcoat, KHRMaterialsDiffuseTransmission, KHRMaterialsDispersion, KHRMaterialsEmissiveStrength, KHRMaterialsIOR, KHRMaterialsIridescence, KHRMaterialsPBRSpecularGlossiness, KHRMaterialsSpecular, KHRMaterialsSheen, KHRMaterialsTransmission, KHRMaterialsUnlit, KHRMaterialsVariants, KHRMaterialsVolume, KHRMeshQuantization, KHRTextureBasisu, KHRTextureTransform, KHRXMP];\nconst ALL_EXTENSIONS = [EXTMeshGPUInstancing, EXTMeshoptCompression, EXTTextureAVIF, EXTTextureWebP, ...KHRONOS_EXTENSIONS];\n\nexport { ALL_EXTENSIONS, Anisotropy, Clearcoat, DiffuseTransmission, Dispersion, EXTMeshGPUInstancing, EXTMeshoptCompression, EXTTextureAVIF, EXTTextureWebP, EmissiveStrength, INSTANCE_ATTRIBUTE, IOR, InstancedMesh, Iridescence, KHRDracoMeshCompression, KHRLightsPunctual, KHRMaterialsAnisotropy, KHRMaterialsClearcoat, KHRMaterialsDiffuseTransmission, KHRMaterialsDispersion, KHRMaterialsEmissiveStrength, KHRMaterialsIOR, KHRMaterialsIridescence, KHRMaterialsPBRSpecularGlossiness, KHRMaterialsSheen, KHRMaterialsSpecular, KHRMaterialsTransmission, KHRMaterialsUnlit, KHRMaterialsVariants, KHRMaterialsVolume, KHRMeshQuantization, KHRONOS_EXTENSIONS, KHRTextureBasisu, KHRTextureTransform, KHRXMP, Light, Mapping, MappingList, PBRSpecularGlossiness, Packet, Sheen, Specular, Transform, Transmission, Unlit, Variant, Volume };\n//# sourceMappingURL=index.modern.js.map\n","// Copyright 2023-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Extension, ExtensionProperty, PropertyType, WriterContext } from '@gltf-transform/core';\nconst NAME = 'EXT_mesh_manifold';\nconst MERGE = 'MERGE';\nexport class ManifoldPrimitive extends ExtensionProperty {\n    static EXTENSION_NAME = NAME;\n    init() {\n        ManifoldPrimitive.EXTENSION_NAME = NAME;\n        this.propertyType = 'ManifoldPrimitive';\n        this.parentTypes = [PropertyType.MESH];\n    }\n    getDefaults() {\n        return Object.assign(super.getDefaults(), { manifoldPrimitive: null, mergeIndices: null, mergeValues: null });\n    }\n    getMergeIndices() {\n        return this.getRef('mergeIndices');\n    }\n    getMergeValues() {\n        return this.getRef('mergeValues');\n    }\n    setMerge(indicesAccessor, valuesAccessor) {\n        if (indicesAccessor.getCount() !== valuesAccessor.getCount())\n            throw new Error('merge vectors must be the same length.');\n        this.setRef('mergeIndices', indicesAccessor);\n        return this.setRef('mergeValues', valuesAccessor);\n    }\n    getRunIndex() {\n        return this.get('runIndex');\n    }\n    setRunIndex(runIndex) {\n        return this.set('runIndex', runIndex);\n    }\n    setIndices(indices) {\n        return this.setRef('indices', indices);\n    }\n    getIndices() {\n        return this.getRef('indices');\n    }\n}\nexport class EXTManifold extends Extension {\n    extensionName = NAME;\n    prewriteTypes = [PropertyType.ACCESSOR];\n    static EXTENSION_NAME = NAME;\n    createManifoldPrimitive() {\n        return new ManifoldPrimitive(this.document.getGraph());\n    }\n    read(context) {\n        const { json } = context.jsonDoc;\n        const meshDefs = json.meshes || [];\n        meshDefs.forEach((meshDef, meshIndex) => {\n            if (!meshDef.extensions || !meshDef.extensions[NAME])\n                return;\n            const mesh = context.meshes[meshIndex];\n            const manifoldPrimitive = this.createManifoldPrimitive();\n            mesh.setExtension(NAME, manifoldPrimitive);\n            const manifoldDef = meshDef.extensions[NAME];\n            if (manifoldDef.manifoldPrimitive) {\n                let count = 0;\n                const runIndex = Array();\n                runIndex.push(count);\n                for (const primitive of mesh.listPrimitives()) {\n                    const indices = primitive.getIndices();\n                    if (!indices) {\n                        console.log('Skipping non-indexed primitive ', primitive.getName());\n                        continue;\n                    }\n                    count += indices.getCount();\n                    runIndex.push(count);\n                }\n                manifoldPrimitive.setRunIndex(runIndex);\n                manifoldPrimitive.setIndices(context.accessors[manifoldDef.manifoldPrimitive.indices]);\n            }\n            if (manifoldDef.mergeIndices != null && manifoldDef.mergeValues != null) {\n                manifoldPrimitive.setMerge(context.accessors[manifoldDef.mergeIndices], context.accessors[manifoldDef.mergeValues]);\n            }\n        });\n        return this;\n    }\n    prewrite(context) {\n        this.document.getRoot().listMeshes().forEach((mesh) => {\n            const manifoldPrimitive = mesh.getExtension(NAME);\n            if (!manifoldPrimitive)\n                return;\n            const indices = manifoldPrimitive.getIndices();\n            context.addAccessorToUsageGroup(indices, WriterContext.BufferViewUsage.ELEMENT_ARRAY_BUFFER);\n            const mergeFrom = manifoldPrimitive.getMergeIndices();\n            const mergeTo = manifoldPrimitive.getMergeValues();\n            if (!mergeFrom || !mergeTo)\n                return;\n            context.addAccessorToUsageGroup(mergeFrom, MERGE);\n            context.addAccessorToUsageGroup(mergeTo, MERGE);\n        });\n        return this;\n    }\n    write(context) {\n        const { json } = context.jsonDoc;\n        this.document.getRoot().listMeshes().forEach((mesh) => {\n            const manifoldPrimitive = mesh.getExtension(NAME);\n            if (!manifoldPrimitive)\n                return;\n            const meshIndex = context.meshIndexMap.get(mesh);\n            const meshDef = json.meshes[meshIndex];\n            const runIndex = manifoldPrimitive.getRunIndex();\n            const numPrimitive = runIndex.length - 1;\n            if (numPrimitive !== meshDef.primitives.length) {\n                throw new Error('The number of primitives must be exactly one less than the length of runIndex.');\n            }\n            const mergeIndicesIndex = context.accessorIndexMap.get(manifoldPrimitive.getMergeIndices());\n            const mergeValuesIndex = context.accessorIndexMap.get(manifoldPrimitive.getMergeValues());\n            const mergeIndices = json.accessors[mergeIndicesIndex];\n            const mergeValues = json.accessors[mergeValuesIndex];\n            const existingPrimitive = meshDef.primitives[0];\n            const primitive = {\n                indices: context.accessorIndexMap.get(manifoldPrimitive.getIndices()),\n                mode: existingPrimitive.mode,\n                attributes: { 'POSITION': existingPrimitive.attributes['POSITION'] }\n            };\n            const indices = json.accessors[primitive.indices];\n            if (!indices) {\n                return;\n            }\n            if (mergeIndices && mergeValues) {\n                indices.sparse = {\n                    count: mergeIndices.count,\n                    indices: {\n                        bufferView: mergeIndices.bufferView,\n                        byteOffset: mergeIndices.byteOffset,\n                        componentType: mergeIndices.componentType\n                    },\n                    values: {\n                        bufferView: mergeValues.bufferView,\n                        byteOffset: mergeValues.byteOffset,\n                    }\n                };\n            }\n            for (let i = 0; i < numPrimitive; ++i) {\n                const accessor = json.accessors[meshDef.primitives[i].indices];\n                accessor.bufferView = indices.bufferView;\n                accessor.byteOffset = indices.byteOffset + 4 * runIndex[i];\n                accessor.count = runIndex[i + 1] - runIndex[i];\n            }\n            meshDef.extensions = meshDef.extensions || {};\n            meshDef.extensions[NAME] = {\n                manifoldPrimitive: primitive,\n                mergeIndices: mergeIndicesIndex,\n                mergeValues: mergeValuesIndex\n            };\n            // Test the manifold primitive by replacing the material primitives\n            // meshDef.primitives = [primitive];\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=manifold-gltf.js.map","// Copyright 2023-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Accessor } from '@gltf-transform/core';\nimport { EXTManifold } from \"./manifold-gltf.js\";\nexport const attributeDefs = {\n    'POSITION': { type: Accessor.Type.VEC3, components: 3 },\n    'NORMAL': { type: Accessor.Type.VEC3, components: 3 },\n    'TANGENT': { type: Accessor.Type.VEC4, components: 4 },\n    'TEXCOORD_0': { type: Accessor.Type.VEC2, components: 2 },\n    'TEXCOORD_1': { type: Accessor.Type.VEC2, components: 2 },\n    'COLOR_0': { type: Accessor.Type.VEC3, components: 3 },\n    'JOINTS_0': { type: Accessor.Type.VEC4, components: 4 },\n    'WEIGHTS_0': { type: Accessor.Type.VEC4, components: 4 },\n    'SKIP_1': { type: null, components: 1 },\n    'SKIP_2': { type: null, components: 2 },\n    'SKIP_3': { type: null, components: 3 },\n    'SKIP_4': { type: null, components: 4 },\n};\n/**\n * Call this first to register the manifold extension so that readMesh and\n * writeMesh will work.\n */\nexport function setupIO(io) {\n    return io.registerExtensions([EXTManifold]);\n}\n/**\n * Read an input mesh into Manifold-compatible data structures, whether it\n * contains the EXT_mesh_manifold extension or not.\n *\n * @param mesh The Mesh to read.\n * @param attributes An array of attributes representing the order of desired\n *     properties returned in the vertProperties array of the output mesh. If\n *     omitted, this will be populated with the union of all attributes defined\n *     in the primitives of the input mesh. If present, the first entry must be\n *     'POSITION', and any attributes in the primitives that are not included in\n *     this list will be ignored, while those in the list but not defined in a\n *     primitive will be populated with zeros.\n * @returns The returned mesh is suitable for initializing a Manifold or Mesh of\n *     the Manifold library if desired. See Manifold documentation if you prefer\n *     to use these GL arrays in a different library. The runProperties array\n *     gives the Material and attributes list associated with each triangle run,\n *     which in turn corresponds to a primitive of the input mesh. These\n *     attributes are the intersection of the attributes present on the\n *     primitive and those requested in the attributes input.\n */\nexport function readMesh(mesh, attributes = []) {\n    const primitives = mesh.listPrimitives();\n    if (primitives.length === 0) {\n        return null;\n    }\n    if (attributes.length === 0) {\n        const attributeSet = new Set();\n        for (const primitive of primitives) {\n            const semantics = primitive.listSemantics();\n            for (const semantic of semantics) {\n                attributeSet.add(semantic);\n            }\n        }\n        let semantic;\n        for (semantic in attributeDefs) {\n            if (attributeSet.has(semantic)) {\n                attributes.push(semantic);\n                attributeSet.delete(semantic);\n            }\n        }\n        for (const semantic of attributeSet.keys()) {\n            attributes.push(semantic);\n        }\n    }\n    if (attributes.length < 1 || attributes[0] !== 'POSITION')\n        throw new Error('First attribute must be \"POSITION\".');\n    let numProp = 0;\n    const attributeOffsets = attributes.map((numProp = 0, def => {\n        const last = numProp;\n        numProp += attributeDefs[def].components;\n        return last;\n    }));\n    const manifoldPrimitive = mesh.getExtension('EXT_mesh_manifold');\n    let vertPropArray = Array();\n    let triVertArray = Array();\n    const runIndexArray = [0];\n    const mergeFromVertArray = Array();\n    const mergeToVertArray = Array();\n    const runProperties = Array();\n    if (manifoldPrimitive != null) {\n        const numVert = primitives[0].getAttribute('POSITION').getCount();\n        const foundAttribute = attributes.map((a) => attributeDefs[a].type == null);\n        vertPropArray = new Array(numProp * numVert);\n        for (const primitive of primitives) {\n            const indices = primitive.getIndices();\n            if (!indices) {\n                console.log('Skipping non-indexed primitive ', primitive.getName());\n                continue;\n            }\n            const attributesIn = primitive.listSemantics();\n            attributes.forEach((attributeOut, idx) => {\n                if (foundAttribute[idx]) {\n                    return;\n                }\n                for (const attributeIn of attributesIn) {\n                    if (attributeIn === attributeOut) {\n                        foundAttribute[idx] = true;\n                        const accessor = primitive.getAttribute(attributeIn);\n                        writeProperties(vertPropArray, accessor, numProp, attributeOffsets[idx]);\n                    }\n                }\n            });\n            triVertArray = [...triVertArray, ...indices.getArray()];\n            runIndexArray.push(triVertArray.length);\n            runProperties.push({\n                material: primitive.getMaterial(),\n                attributes: attributesIn.filter(b => attributes.some(a => a == b))\n            });\n        }\n        const mergeTriVert = manifoldPrimitive.getMergeIndices()?.getArray() ?? [];\n        const mergeTo = manifoldPrimitive.getMergeValues()?.getArray() ?? [];\n        const vert2merge = new Map();\n        for (const [i, idx] of mergeTriVert.entries()) {\n            vert2merge.set(triVertArray[idx], mergeTo[i]);\n        }\n        for (const [from, to] of vert2merge.entries()) {\n            mergeFromVertArray.push(from);\n            mergeToVertArray.push(to);\n        }\n    }\n    else {\n        for (const primitive of primitives) {\n            const indices = primitive.getIndices();\n            if (!indices) {\n                console.log('Skipping non-indexed primitive ', primitive.getName());\n                continue;\n            }\n            const numVert = vertPropArray.length / numProp;\n            vertPropArray =\n                [...vertPropArray, ...readPrimitive(primitive, numProp, attributes)];\n            triVertArray =\n                [...triVertArray, ...indices.getArray().map((i) => i + numVert)];\n            runIndexArray.push(triVertArray.length);\n            const attributesIn = primitive.listSemantics();\n            runProperties.push({\n                material: primitive.getMaterial(),\n                attributes: attributesIn.filter(b => attributes.some(a => a == b))\n            });\n        }\n    }\n    const vertProperties = new Float32Array(vertPropArray);\n    const triVerts = new Uint32Array(triVertArray);\n    const runIndex = new Uint32Array(runIndexArray);\n    const mergeFromVert = new Uint32Array(mergeFromVertArray);\n    const mergeToVert = new Uint32Array(mergeToVertArray);\n    const meshOut = { numProp, triVerts, vertProperties, runIndex, mergeFromVert, mergeToVert };\n    return { mesh: meshOut, runProperties };\n}\n/**\n * Write a Manifold Mesh into a glTF Mesh object, using the EXT_mesh_manifold\n * extension to allow for lossless roundtrip of the manifold mesh through the\n * glTF file.\n *\n * @param doc The glTF Document to which this Mesh will be added.\n * @param manifoldMesh The Manifold Mesh to convert to glTF.\n * @param id2properties A map from originalID to Properties that include the\n *     glTF Material and the set of attributes to output. All triangle runs with\n *     the same originalID will be combined into a single output primitive. Any\n *     originalIDs not found in the map will have the glTF default material and\n *     no attributes beyond 'POSITION'. Each attributes array must correspond to\n *     the manifoldMesh vertProperties, thus the first attribute must always be\n *     'POSITION'. Any properties that should not be output for a given\n *     primitive must use the 'SKIP_*' attributes.\n * @returns The glTF Mesh to add to the Document.\n */\nexport function writeMesh(doc, manifoldMesh, id2properties) {\n    if (doc.getRoot().listBuffers().length === 0) {\n        doc.createBuffer();\n    }\n    const buffer = doc.getRoot().listBuffers()[0];\n    const manifoldExtension = doc.createExtension(EXTManifold);\n    const mesh = doc.createMesh();\n    const runIndex = Array();\n    const attributeUnion = Array();\n    const primitive2attributes = new Map();\n    const numRun = manifoldMesh.runIndex.length - 1;\n    let lastID = -1;\n    for (let run = 0; run < numRun; ++run) {\n        const id = manifoldMesh.runOriginalID[run];\n        if (id == lastID) {\n            continue;\n        }\n        lastID = id;\n        runIndex.push(manifoldMesh.runIndex[run]);\n        const indices = doc.createAccessor('primitive indices of ID ' + id)\n            .setBuffer(buffer)\n            .setType(Accessor.Type.SCALAR)\n            .setArray(new Uint32Array(1));\n        const primitive = doc.createPrimitive().setIndices(indices);\n        const properties = id2properties.get(id);\n        if (properties) {\n            const { material, attributes } = properties;\n            if (attributes.length < 1 || attributes[0] !== 'POSITION')\n                throw new Error('First attribute must be \"POSITION\".');\n            primitive.setMaterial(material);\n            primitive2attributes.set(primitive, attributes);\n            properties.attributes.forEach((attribute, i) => {\n                if (i >= attributeUnion.length) {\n                    attributeUnion.push(attribute);\n                }\n                else {\n                    const size = attributeDefs[attribute].components;\n                    const unionSize = attributeDefs[attributeUnion[i]].components;\n                    if (size != unionSize) {\n                        throw new Error('Attribute sizes do not correspond: ' + attribute + ' and ' +\n                            attributeUnion[i]);\n                    }\n                    if (attributeDefs[attributeUnion[i]].type == null) {\n                        attributeUnion[i] = attribute;\n                    }\n                }\n            });\n        }\n        else {\n            primitive2attributes.set(primitive, ['POSITION']);\n        }\n        mesh.addPrimitive(primitive);\n    }\n    runIndex.push(manifoldMesh.runIndex[numRun]);\n    const numVert = manifoldMesh.numVert;\n    const numProp = manifoldMesh.numProp;\n    let offset = 0;\n    attributeUnion.forEach((attribute, aIdx) => {\n        const def = attributeDefs[attribute];\n        if (def == null)\n            throw new Error(attribute + ' is not a recognized attribute.');\n        if (def.type == null) {\n            ++offset;\n            return;\n        }\n        const n = def.components;\n        if (offset + n > numProp)\n            throw new Error('Too many attribute channels.');\n        const array = new Float32Array(n * numVert);\n        for (let v = 0; v < numVert; ++v) {\n            for (let i = 0; i < n; ++i) {\n                let x = manifoldMesh.vertProperties[numProp * v + offset + i];\n                if (attribute == 'COLOR_0') {\n                    x = Math.max(0, Math.min(1, x));\n                }\n                array[n * v + i] = x;\n            }\n        }\n        const accessor = doc.createAccessor(attribute)\n            .setBuffer(buffer)\n            .setType(def.type)\n            .setArray(array);\n        for (const primitive of mesh.listPrimitives()) {\n            const attributes = primitive2attributes.get(primitive);\n            if (attributes.length > aIdx &&\n                attributeDefs[attributes[aIdx]].type != null) {\n                primitive.setAttribute(attribute, accessor);\n            }\n        }\n        offset += n;\n    });\n    const manifoldPrimitive = manifoldExtension.createManifoldPrimitive();\n    mesh.setExtension('EXT_mesh_manifold', manifoldPrimitive);\n    const indices = doc.createAccessor('manifold indices')\n        .setBuffer(buffer)\n        .setType(Accessor.Type.SCALAR)\n        .setArray(manifoldMesh.triVerts);\n    manifoldPrimitive.setIndices(indices);\n    manifoldPrimitive.setRunIndex(runIndex);\n    const vert2merge = [...Array(manifoldMesh.numVert).keys()];\n    const ind = Array();\n    const val = Array();\n    if (manifoldMesh.mergeFromVert && manifoldMesh.mergeToVert) {\n        for (const [i, from] of manifoldMesh.mergeFromVert.entries()) {\n            vert2merge[from] = manifoldMesh.mergeToVert[i];\n        }\n        for (const [i, vert] of manifoldMesh.triVerts.entries()) {\n            const newVert = vert2merge[vert];\n            if (vert !== newVert) {\n                ind.push(i);\n                val.push(newVert);\n            }\n        }\n    }\n    if (ind.length > 0) {\n        const indicesAccessor = doc.createAccessor('merge from')\n            .setBuffer(buffer)\n            .setType(Accessor.Type.SCALAR)\n            .setArray(new Uint32Array(ind));\n        const valuesAccessor = doc.createAccessor('merge to')\n            .setBuffer(buffer)\n            .setType(Accessor.Type.SCALAR)\n            .setArray(new Uint32Array(val));\n        manifoldPrimitive.setMerge(indicesAccessor, valuesAccessor);\n    }\n    return mesh;\n}\n/**\n * Helper function to dispose of a Mesh, useful when replacing an existing Mesh\n * with one from writeMesh.\n */\nexport function disposeMesh(mesh) {\n    if (!mesh)\n        return;\n    const primitives = mesh.listPrimitives();\n    for (const primitive of primitives) {\n        primitive.getIndices()?.dispose();\n        for (const accessor of primitive.listAttributes()) {\n            accessor.dispose();\n        }\n    }\n    const manifoldPrimitive = mesh.getExtension('EXT_mesh_manifold');\n    if (manifoldPrimitive) {\n        manifoldPrimitive.getIndices()?.dispose();\n        manifoldPrimitive.getMergeIndices()?.dispose();\n        manifoldPrimitive.getMergeValues()?.dispose();\n    }\n    mesh.dispose();\n}\n/**\n * Helper function to download an image and apply it to the given texture.\n *\n * @param texture The texture to update\n * @param uri The location of the image to download\n */\nexport async function loadTexture(texture, uri) {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n    texture.setMimeType(blob.type);\n    texture.setImage(new Uint8Array(await blob.arrayBuffer()));\n}\nfunction writeProperties(vertProperties, accessor, numProp, offset) {\n    const array = accessor.getArray();\n    const size = accessor.getElementSize();\n    const numVert = accessor.getCount();\n    for (let i = 0; i < numVert; ++i) {\n        for (let j = 0; j < size; ++j) {\n            vertProperties[numProp * i + offset + j] = array[i * size + j];\n        }\n    }\n}\nfunction readPrimitive(primitive, numProp, attributes) {\n    const vertProperties = [];\n    let offset = 0;\n    for (const attribute of attributes) {\n        const size = attributeDefs[attribute].components;\n        if (attributeDefs[attribute].type == null) {\n            offset += size;\n            continue;\n        }\n        const accessor = primitive.getAttribute(attribute);\n        if (accessor) {\n            writeProperties(vertProperties, accessor, numProp, offset);\n        }\n        offset += size;\n    }\n    return vertProperties;\n}\n//# sourceMappingURL=gltf-io.js.map","// Copyright 2023-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { WebIO } from '@gltf-transform/core';\nimport { KHRONOS_EXTENSIONS } from '@gltf-transform/extensions';\nimport { setupIO } from \"./gltf-io.js\";\n/**\n * Object to convert GLTF documents.\n *\n */\nexport class ExportGLTF {\n    extensions = ['glb', 'gltf'];\n    /**\n     * Convert a GLTF-Transform document to a blob.\n     *\n     * @param doc The GLTF document to convert.\n     * @returns A blob containing the converted model.\n     */\n    async asBlob(doc) {\n        const io = setupIO(new WebIO());\n        io.registerExtensions(KHRONOS_EXTENSIONS);\n        const glb = await io.writeBinary(doc);\n        return new Blob([glb], { type: 'application/octet-stream' });\n    }\n}\n//# sourceMappingURL=export-gltf.js.map","// Copyright 2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst memoryRegistry = Array();\n// manifold static methods (that return a new manifold)\nconst manifoldStaticFunctions = [\n    'cube', 'cylinder', 'sphere', 'tetrahedron', 'extrude', 'revolve', 'compose',\n    'union', 'difference', 'intersection', 'levelSet', 'smooth', 'ofMesh', 'hull'\n];\n// manifold member functions (that return a new manifold)\nconst manifoldMemberFunctions = [\n    'add',\n    'subtract',\n    'intersect',\n    'decompose',\n    'warp',\n    'transform',\n    'translate',\n    'rotate',\n    'scale',\n    'mirror',\n    'calculateCurvature',\n    'calculateNormals',\n    'smoothByNormals',\n    'smoothOut',\n    'refine',\n    'refineToLength',\n    'refineToTolerance',\n    'setProperties',\n    'setTolerance',\n    'simplify',\n    'asOriginal',\n    'trimByPlane',\n    'split',\n    'splitByPlane',\n    'slice',\n    'project',\n    'hull'\n];\n// CrossSection static methods (that return a new cross-section)\nconst crossSectionStaticFunctions = [\n    'square', 'circle', 'union', 'difference', 'intersection', 'compose',\n    'ofPolygons', 'hull'\n];\n// CrossSection member functions (that return a new cross-section)\nconst crossSectionMemberFunctions = [\n    'add', 'subtract', 'intersect', 'rectClip', 'decompose', 'transform',\n    'translate', 'rotate', 'scale', 'mirror', 'simplify', 'offset', 'hull'\n];\n/**\n * Delete any objects tagged for garbage collection.\n */\nexport const cleanup = () => {\n    for (const obj of memoryRegistry) {\n        // decompose result is an array of manifolds\n        if (obj instanceof Array)\n            for (const elem of obj)\n                elem.delete();\n        else\n            obj.delete();\n    }\n    memoryRegistry.length = 0;\n};\n/**\n * Intercept function calls for garbage collection.\n *\n * The returned object of the call will be added to the garbage collection list.\n * When `cleanup()` called, the `delete()` method on that object will be called.\n *\n * @param originalFn\n * @returns\n */\nexport const garbageCollectFunction = (originalFn) => {\n    return (...args) => {\n        //@ts-ignore\n        const result = originalFn(...args);\n        memoryRegistry.push(result);\n        return result;\n    };\n};\nconst interceptMethods = (target, methodNames) => {\n    for (const name of methodNames) {\n        const originalFn = target[name];\n        target[name] = garbageCollectFunction(originalFn);\n    }\n};\n/**\n * Set up garbage collection for a white listed set of methods belonging\n * to the Manifold WASM module.\n */\nexport const garbageCollectManifold = (target) => {\n    interceptMethods(target.Manifold, manifoldStaticFunctions);\n    interceptMethods(target.Manifold.prototype, manifoldMemberFunctions);\n    interceptMethods(target.CrossSection, crossSectionStaticFunctions);\n    interceptMethods(target.CrossSection.prototype, crossSectionMemberFunctions);\n    return target;\n};\n//# sourceMappingURL=garbage-collector.js.map","// Copyright 2022-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst { cos, sin, PI } = Math;\nconst TAU = PI * 2;\nexport function euler2quat(rotation) {\n    // https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles#Source_code\n    const cr = cos(rotation[2] * 0.5 * TAU / 360);\n    const sr = sin(rotation[2] * 0.5 * TAU / 360);\n    const cp = cos(rotation[1] * 0.5 * TAU / 360);\n    const sp = sin(rotation[1] * 0.5 * TAU / 360);\n    const cy = cos(rotation[0] * 0.5 * TAU / 360);\n    const sy = sin(rotation[0] * 0.5 * TAU / 360);\n    const q = [0, 0, 0, 0];\n    q[3] = cr * cp * cy + sr * sp * sy;\n    q[2] = sr * cp * cy - cr * sp * sy;\n    q[1] = cr * sp * cy + sr * cp * sy;\n    q[0] = cr * cp * sy - sr * sp * cy;\n    return q;\n}\n;\n//# sourceMappingURL=math.js.map","// Copyright 2022-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Accessor } from '@gltf-transform/core';\nimport { euler2quat } from \"./math.js\";\nimport { globalDefaults } from \"./scene-builder.js\";\nconst FPS = 30;\nconst manifold2morph = new Map();\nlet animation;\nlet timesAccessor;\nlet weightsAccessor;\nlet weightsSampler;\nlet hasAnimation;\nexport function cleanup() {\n    manifold2morph.clear();\n}\nexport function addMotion(doc, type, node, out) {\n    const motion = node[type];\n    if (motion == null) {\n        return null;\n    }\n    if (typeof motion !== 'function') {\n        return motion;\n    }\n    const nFrames = timesAccessor.getCount();\n    const nEl = type == 'rotation' ? 4 : 3;\n    const frames = new Float32Array(nEl * nFrames);\n    for (let i = 0; i < nFrames; ++i) {\n        const x = i / (nFrames - 1);\n        const m = motion(globalDefaults.animationMode !== 'ping-pong' ?\n            x :\n            (1 - Math.cos(x * 2 * Math.PI)) / 2);\n        frames.set(nEl === 4 ? euler2quat(m) : m, nEl * i);\n    }\n    const framesAccessor = doc.createAccessor(node.name + ' ' + type + ' frames')\n        .setBuffer(doc.getRoot().listBuffers()[0])\n        .setArray(frames)\n        .setType(nEl === 4 ? Accessor.Type.VEC4 : Accessor.Type.VEC3);\n    const sampler = doc.createAnimationSampler()\n        .setInput(timesAccessor)\n        .setOutput(framesAccessor)\n        .setInterpolation('LINEAR');\n    const channel = doc.createAnimationChannel()\n        .setTargetPath(type)\n        .setTargetNode(out)\n        .setSampler(sampler);\n    animation.addSampler(sampler);\n    animation.addChannel(channel);\n    hasAnimation = true;\n    return motion(0);\n}\nexport function setMorph(doc, node, manifold) {\n    if (manifold2morph.has(manifold)) {\n        const channel = doc.createAnimationChannel()\n            .setTargetPath('weights')\n            .setTargetNode(node)\n            .setSampler(weightsSampler);\n        animation.addChannel(channel);\n        hasAnimation = true;\n    }\n}\nexport const getMorph = (manifold) => manifold2morph.get(manifold);\nexport function morphStart(manifoldMesh, morph) {\n    const inputPositions = [];\n    if (morph == null) {\n        return inputPositions;\n    }\n    for (let i = 0; i < manifoldMesh.numVert; ++i) {\n        for (let j = 0; j < 3; ++j)\n            inputPositions[i * 3 + j] =\n                manifoldMesh.vertProperties[i * manifoldMesh.numProp + j];\n    }\n    if (morph.start) {\n        for (let i = 0; i < manifoldMesh.numVert; ++i) {\n            const vertProp = manifoldMesh.vertProperties;\n            const offset = i * manifoldMesh.numProp;\n            const pos = inputPositions.slice(offset, offset + 3);\n            morph.start(pos);\n            for (let j = 0; j < 3; ++j)\n                vertProp[offset + j] = pos[j];\n        }\n    }\n    return inputPositions;\n}\nexport function morphEnd(doc, manifoldMesh, mesh, inputPositions, morph) {\n    if (morph == null) {\n        return;\n    }\n    mesh.setWeights([0]);\n    mesh.listPrimitives().forEach((primitive, i) => {\n        if (morph.end) {\n            for (let i = 0; i < manifoldMesh.numVert; ++i) {\n                const pos = inputPositions.slice(3 * i, 3 * (i + 1));\n                morph.end(pos);\n                inputPositions.splice(3 * i, 3, ...pos);\n            }\n        }\n        const startPosition = primitive.getAttribute('POSITION').getArray();\n        const array = new Float32Array(startPosition.length);\n        const offset = manifoldMesh.runIndex[i];\n        for (let j = 0; j < array.length; ++j) {\n            array[j] = inputPositions[offset + j] - startPosition[j];\n        }\n        const morphAccessor = doc.createAccessor(mesh.getName() + ' morph target')\n            .setBuffer(doc.getRoot().listBuffers()[0])\n            .setArray(array)\n            .setType(Accessor.Type.VEC3);\n        const morphTarget = doc.createPrimitiveTarget().setAttribute('POSITION', morphAccessor);\n        primitive.addTarget(morphTarget);\n    });\n}\n/**\n * Apply a morphing animation to the input manifold. Specify the start\n * function which will be applied to the vertex positions of the first frame and\n * linearly interpolated across the length of the overall animation. This\n * animation will only be shown if this manifold is used directly on a GLTFNode.\n *\n * @group Modelling Functions\n * @param manifold The object to add morphing animation to.\n * @param func A warping function to apply to the first animation frame.\n */\nexport const setMorphStart = (manifold, func) => {\n    const morph = manifold2morph.get(manifold);\n    if (morph != null) {\n        morph.start = func;\n    }\n    else {\n        manifold2morph.set(manifold, { start: func });\n    }\n};\n/**\n * Apply a morphing animation to the input manifold. Specify the end\n * function which will be applied to the vertex positions of the last frame and\n * linearly interpolated across the length of the overall animation. This\n * animation will only be shown if this manifold is used directly on a GLTFNode.\n *\n * @group Modelling Functions\n * @param manifold The object to add morphing animation to.\n * @param func A warping function to apply to the last animation frame.\n */\nexport const setMorphEnd = (manifold, func) => {\n    const morph = manifold2morph.get(manifold);\n    if (morph != null) {\n        morph.end = func;\n    }\n    else {\n        manifold2morph.set(manifold, { end: func });\n    }\n};\nexport function addAnimationToDoc(doc) {\n    animation = doc.createAnimation('');\n    hasAnimation = false;\n    const nFrames = Math.round(globalDefaults.animationLength * FPS) + 1;\n    const times = new Float32Array(nFrames);\n    const weights = new Float32Array(nFrames);\n    for (let i = 0; i < nFrames; ++i) {\n        const x = i / (nFrames - 1);\n        times[i] = x * globalDefaults.animationLength;\n        weights[i] = globalDefaults.animationMode !== 'ping-pong' ?\n            x :\n            (1 - Math.cos(x * 2 * Math.PI)) / 2;\n    }\n    timesAccessor = doc.createAccessor('animation times')\n        .setBuffer(doc.createBuffer())\n        .setArray(times)\n        .setType(Accessor.Type.SCALAR);\n    weightsAccessor = doc.createAccessor('animation weights')\n        .setBuffer(doc.getRoot().listBuffers()[0])\n        .setArray(weights)\n        .setType(Accessor.Type.SCALAR);\n    weightsSampler = doc.createAnimationSampler()\n        .setInput(timesAccessor)\n        .setOutput(weightsAccessor)\n        .setInterpolation('LINEAR');\n    animation.addSampler(weightsSampler);\n}\nexport function cleanupAnimationInDoc() {\n    if (!hasAnimation) {\n        timesAccessor.dispose();\n        weightsAccessor.dispose();\n        weightsSampler.dispose();\n        animation.dispose();\n    }\n}\n//# sourceMappingURL=animation.js.map","// Copyright 2022-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Material } from '@gltf-transform/core';\nimport { KHRMaterialsUnlit } from '@gltf-transform/extensions';\nimport { globalDefaults } from \"./scene-builder.js\";\nconst id2material = new Map();\nconst materialCache = new Map();\nexport function cleanup() {\n    id2material.clear();\n    materialCache.clear();\n}\n/**\n * Returns a shallow copy of the input manifold with the given material\n * properties applied. They will be carried along through operations.\n *\n * @group Modelling Functions\n * @param manifold The input object.\n * @param material A set of material properties to apply to this manifold.\n */\nexport const setMaterial = (manifold, material) => {\n    const out = manifold.asOriginal();\n    id2material.set(out.originalID(), material);\n    return out;\n};\nexport const getMaterialByID = (id) => {\n    return id2material.get(id);\n};\nexport function getBackupMaterial(node) {\n    if (node == null) {\n        return {};\n    }\n    if (node.material == null) {\n        node.material = getBackupMaterial(node.parent);\n    }\n    return node.material;\n}\nfunction makeDefaultMaterial(doc, matIn = {}) {\n    const defaults = { ...globalDefaults };\n    Object.assign(defaults, matIn);\n    const { roughness, metallic, baseColorFactor, alpha, unlit } = defaults;\n    const material = doc.createMaterial(matIn.name ?? '');\n    if (unlit) {\n        const unlit = doc.createExtension(KHRMaterialsUnlit).createUnlit();\n        material.setExtension('KHR_materials_unlit', unlit);\n    }\n    if (alpha < 1) {\n        material.setAlphaMode(Material.AlphaMode.BLEND).setDoubleSided(true);\n    }\n    return material.setRoughnessFactor(roughness)\n        .setMetallicFactor(metallic)\n        .setBaseColorFactor([...baseColorFactor, alpha]);\n}\nexport function getCachedMaterial(doc, matDef) {\n    if (!materialCache.has(matDef)) {\n        materialCache.set(matDef, makeDefaultMaterial(doc, matDef));\n    }\n    return materialCache.get(matDef);\n}\n//# sourceMappingURL=material.js.map","// Copyright 2022-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { writeMesh } from \"./gltf-io.js\";\nimport { getCachedMaterial, getMaterialByID as getOriginalMaterialByID } from \"./material.js\";\n// Debug setup to show source meshes\nlet ghost = false;\nconst shown = new Map();\nconst singles = new Map();\nexport const SHOW = {\n    baseColorFactor: [1, 0, 0],\n    alpha: 0.25,\n    roughness: 1,\n    metallic: 0\n};\nexport const GHOST = {\n    baseColorFactor: [0.5, 0.5, 0.5],\n    alpha: 0.25,\n    roughness: 1,\n    metallic: 0\n};\nexport function cleanup() {\n    ghost = false;\n    shown.clear();\n    singles.clear();\n}\nconst getDebugMeshByID = (id) => {\n    return shown.has(id) ? shown.get(id) : singles.get(id);\n};\n/**\n * Material for a debug visualization.\n *\n * There are two conditions:\n *\n *   * This is a mesh that has been flagged with `show`.\n *     It will be highlighted with the SHOW material.\n *   * This is a mesh that has been flagged with `only`.\n *     Any other mesh will have the GHOST material, while\n *     this one gets it's natural material.\n *\n * @param id The `originalID` of the mesh.\n */\nconst getDebugMaterialByID = (id) => {\n    const show = shown.has(id);\n    const inMesh = show ? shown.get(id) : singles.get(id);\n    if (show && inMesh) {\n        return SHOW;\n    }\n    return getOriginalMaterialByID(id);\n};\n/**\n * Override materials when debugging.\n *\n * When a mesh is flagged with `only`, we set the `ghost` global.\n * Everything gets rendered in the GHOST material, while the flagged\n * mesh is added as a debug node.\n *\n * @param id The `originalID` of the mesh.\n */\nexport const getMaterialByID = (id) => ghost ? GHOST : getOriginalMaterialByID(id);\nconst debug = (manifold, map) => {\n    let result = manifold.asOriginal();\n    map.set(result.originalID(), result.getMesh());\n    return result;\n};\n/**\n * Wrap any shape object with this method to display it and any copies in\n * transparent red. This is particularly useful for debugging `subtract()` as it\n * will allow you find the object even if it doesn't currently intersect the\n * result.\n *\n * @group Modelling Functions\n * @param shape The object to show - returned for chaining.\n */\nexport const show = (manifold) => {\n    return debug(manifold, shown);\n};\n/**\n * Wrap any shape object with this method to display it and any copies as the\n * result, while ghosting out the final result in transparent gray. Helpful for\n * debugging as it allows you to see objects that may be hidden in the interior\n * of the result. Multiple objects marked `only()` will all be shown.\n *\n * @group Modelling Functions\n * @param shape The object to show - returned for chaining.\n */\nexport const only = (manifold) => {\n    ghost = true;\n    return debug(manifold, singles);\n};\nexport const getDebugGLTFMesh = (doc, manifoldMesh, id2properties, backupMaterial = {}) => {\n    const debugNodes = [];\n    for (const [run, id] of manifoldMesh.runOriginalID.entries()) {\n        const debugMesh = getDebugMeshByID(id);\n        if (!debugMesh) {\n            continue;\n        }\n        // Here, we'll get back either a debug material (like SHOW),\n        // or the original mesh material.\n        const material = getDebugMaterialByID(id) || backupMaterial;\n        id2properties.get(id).material = getCachedMaterial(doc, material);\n        const debugNode = doc.createNode('debug')\n            .setMesh(writeMesh(doc, debugMesh, id2properties))\n            .setMatrix(manifoldMesh.transform(run));\n        debugNodes.push(debugNode);\n    }\n    return debugNodes;\n};\n//# sourceMappingURL=debug.js.map","// Copyright 2022-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * The scene builder provides modelling outside of the native\n * capabilities of Maniold WASM.  This includes scene graphs, materials,\n * and animation functions.  In general, the scene builder\n * follows GLTF semantics.\n *\n * This module includes modelling functions for use inside a ManifoldCAD script\n * (e.g.: `show`, `only`, `setMaterial`, etc.).  It also includes a set of\n * management functions (e.g.: `manifoldToGLTFDoc`, `cleanup`, etc.) that are\n * used to export complete scenes and generally manage the state of the scene\n * builder.\n *\n * @module scene-builder\n */\nimport { Document } from '@gltf-transform/core';\nimport { addAnimationToDoc, addMotion, cleanup as cleanupAnimation, cleanupAnimationInDoc, getMorph, morphEnd, morphStart, setMorph } from \"./animation.js\";\nimport { cleanup as cleanupDebug, getDebugGLTFMesh, getMaterialByID } from \"./debug.js\";\nimport { writeMesh } from \"./gltf-io.js\";\nimport { cleanup as cleanupMaterial, getBackupMaterial, getCachedMaterial } from \"./material.js\";\nimport { euler2quat } from \"./math.js\";\nexport { setMorphEnd, setMorphStart } from \"./animation.js\";\nexport { only, show } from \"./debug.js\";\nexport { setMaterial } from \"./material.js\";\nconst GLOBAL_DEFAULTS = {\n    roughness: 0.2,\n    metallic: 1,\n    baseColorFactor: [1, 1, 0],\n    alpha: 1,\n    unlit: false,\n    animationLength: 1,\n    animationMode: 'loop'\n};\nexport const globalDefaults = { ...GLOBAL_DEFAULTS };\n/**\n * Reset and garbage collect the scene builder and any\n * encapsulated modules.\n *\n * @group Management Functions\n */\nexport function cleanup() {\n    cleanupAnimation();\n    cleanupDebug();\n    cleanupMaterial();\n    resetGLTFNodes();\n}\nexport class GLTFNode {\n    _parent;\n    manifold;\n    translation;\n    rotation;\n    scale;\n    material;\n    name;\n    constructor(parent) {\n        this._parent = parent;\n    }\n    clone(parent) {\n        const copy = new GLTFNode(parent ?? this.parent);\n        Object.assign(copy, this);\n        return copy;\n    }\n    get parent() {\n        return this._parent;\n    }\n}\nconst nodes = new Array();\nexport class GLTFNodeTracked extends GLTFNode {\n    constructor(parent) {\n        super(parent);\n        nodes.push(this);\n    }\n}\nexport const getGLTFNodes = () => {\n    return nodes;\n};\nexport const resetGLTFNodes = () => {\n    nodes.length = 0;\n};\n// Swallow informational logs in testing framework\nfunction log(...args) {\n    if (typeof self !== 'undefined' && self.console) {\n        self.console.log(...args);\n    }\n}\nfunction createGLTFnode(doc, node) {\n    const out = doc.createNode(node.name);\n    // Animation Motion\n    const pos = addMotion(doc, 'translation', node, out);\n    if (pos != null) {\n        out.setTranslation(pos);\n    }\n    const rot = addMotion(doc, 'rotation', node, out);\n    if (rot != null) {\n        out.setRotation(euler2quat(rot));\n    }\n    const scale = addMotion(doc, 'scale', node, out);\n    if (scale != null) {\n        out.setScale(scale);\n    }\n    return out;\n}\nfunction addMesh(doc, node, manifold, backupMaterial = {}) {\n    const numTri = manifold.numTri();\n    if (numTri == 0) {\n        log('Empty manifold, skipping.');\n        return;\n    }\n    log(`Triangles: ${numTri.toLocaleString()}`);\n    const box = manifold.boundingBox();\n    const size = [0, 0, 0];\n    for (let i = 0; i < 3; i++) {\n        size[i] = Math.round((box.max[i] - box.min[i]) * 10) / 10;\n    }\n    log(`Bounding Box: X = ${size[0].toLocaleString()} mm, Y = ${size[1].toLocaleString()} mm, Z = ${size[2].toLocaleString()} mm`);\n    const volume = Math.round(manifold.volume() / 10);\n    log(`Genus: ${manifold.genus().toLocaleString()}, Volume: ${(volume / 100).toLocaleString()} cm^3`);\n    // From Z-up to Y-up (glTF)\n    const manifoldMesh = manifold.getMesh();\n    // Material\n    const id2properties = new Map();\n    for (const id of manifoldMesh.runOriginalID) {\n        const material = getMaterialByID(id) || backupMaterial;\n        id2properties.set(id, {\n            material: getCachedMaterial(doc, material),\n            attributes: ['POSITION', ...material.attributes ?? []]\n        });\n    }\n    // Animation Morph\n    const morph = getMorph(manifold);\n    const inputPositions = morphStart(manifoldMesh, morph);\n    // Core\n    const mesh = writeMesh(doc, manifoldMesh, id2properties);\n    node.setMesh(mesh);\n    // Animation Morph\n    morphEnd(doc, manifoldMesh, mesh, inputPositions, morph);\n    // If we're using a debug mode (`show` or `only`), check\n    // to see if this mesh requires special handling.\n    const debugNodes = getDebugGLTFMesh(doc, manifoldMesh, id2properties, backupMaterial);\n    for (const debugNode of debugNodes) {\n        node.addChild(debugNode);\n    }\n}\nfunction cloneNode(toNode, fromNode) {\n    toNode.setMesh(fromNode.getMesh());\n    fromNode.listChildren().forEach((child) => {\n        const clone = child.clone();\n        toNode.addChild(clone);\n    });\n}\nfunction cloneNodeNewMaterial(doc, toNode, fromNode, backupMaterial, oldBackupMaterial) {\n    cloneNode(toNode, fromNode);\n    const oldMesh = fromNode.getMesh();\n    const newMesh = doc.createMesh();\n    toNode.setMesh(newMesh);\n    oldMesh.listPrimitives().forEach((primitive) => {\n        const newPrimitive = primitive.clone();\n        if (primitive.getMaterial() === oldBackupMaterial) {\n            newPrimitive.setMaterial(backupMaterial);\n        }\n        newMesh.addPrimitive(newPrimitive);\n    });\n    // Track cloned meshes for easier export, later.\n    newMesh.setExtras({ clonedFrom: oldMesh });\n}\nfunction createNodeFromCache(doc, nodeDef, manifold2node) {\n    const node = createGLTFnode(doc, nodeDef);\n    const { manifold } = nodeDef;\n    if (manifold) {\n        // Animation Morph\n        setMorph(doc, node, manifold);\n        const backupMaterial = getBackupMaterial(nodeDef);\n        const cachedNodes = manifold2node.get(manifold);\n        if (cachedNodes == null) {\n            // Cache miss.\n            addMesh(doc, node, manifold, backupMaterial);\n            const cache = new Map();\n            cache.set(backupMaterial, node);\n            manifold2node.set(manifold, cache);\n        }\n        else {\n            // Cache hit...\n            const cachedNode = cachedNodes.get(backupMaterial);\n            if (cachedNode == null) {\n                // ...but not for this material.\n                const [oldBackupMaterial, oldNode] = cachedNodes.entries().next().value;\n                cloneNodeNewMaterial(doc, node, oldNode, getCachedMaterial(doc, backupMaterial), getCachedMaterial(doc, oldBackupMaterial));\n                cachedNodes.set(backupMaterial, node);\n            }\n            else {\n                // ...for this exact material.\n                cloneNode(node, cachedNode);\n            }\n        }\n    }\n    return node;\n}\nfunction parseOptions(defaults) {\n    Object.assign(globalDefaults, GLOBAL_DEFAULTS);\n    Object.assign(globalDefaults, defaults);\n}\nfunction createWrapper(doc) {\n    const halfRoot2 = Math.sqrt(2) / 2;\n    const mm2m = 1 / 1000;\n    const wrapper = doc.createNode('wrapper')\n        .setRotation([-halfRoot2, 0, 0, halfRoot2])\n        .setScale([mm2m, mm2m, mm2m]);\n    doc.createScene().addChild(wrapper);\n    return wrapper;\n}\n/**\n * Convert a Manifold object into a GLTF-Transform Document.\n *\n * @group Management Functions\n * @param manifold The Manifold object\n * @param defaults Parameters potentially set by a ManifoldCAD script\n * @returns An in-memory GLTF-Transform Document\n */\nexport function manifoldToGLTFDoc(manifold, defaults) {\n    const node = new GLTFNode();\n    node.manifold = manifold;\n    return GLTFNodesToGLTFDoc([node], defaults);\n}\n/**\n * Convert a list of GLTF Nodes into a GLTF-Transform Document.\n *\n * @group Management Functions\n * @param nodes A list of GLTF Nodes\n * @param defaults Parameters potentially set by a ManifoldCAD script\n * @returns An in-memory GLTF-Transform Document\n */\nexport function GLTFNodesToGLTFDoc(nodes, defaults) {\n    parseOptions(defaults);\n    if (nodes.length == 0) {\n        throw new TypeError('nodes[] must contain at least one GLTFNode.');\n    }\n    const doc = new Document();\n    const root = createWrapper(doc);\n    addAnimationToDoc(doc);\n    const node2gltf = new Map();\n    const manifold2node = new Map();\n    let leafNodes = 0;\n    // First, create a node in the GLTF document for each ManifoldCAD node.\n    for (const nodeDef of nodes) {\n        node2gltf.set(nodeDef, createNodeFromCache(doc, nodeDef, manifold2node));\n        if (nodeDef.manifold) {\n            ++leafNodes;\n        }\n    }\n    // Step through each node and set its parent.\n    // Nodes without parents are added directly to the root.\n    for (const nodeDef of nodes) {\n        const gltfNode = node2gltf.get(nodeDef);\n        const { parent } = nodeDef;\n        if (parent) {\n            node2gltf.get(parent).addChild(gltfNode);\n        }\n        else {\n            root.addChild(gltfNode);\n        }\n    }\n    log('Total glTF nodes: ', nodes.length, ', Total mesh references: ', leafNodes);\n    cleanupAnimationInDoc();\n    return doc;\n}\n/**\n * Map various types to a flat array of GLTFNodes\n *\n * @group Management Functions\n * @param any An object or array of models.\n * @returns An array of GLTFNodes.\n */\nexport async function anyToGLTFNodeList(any) {\n    // Lazy load manifoldCAD.\n    const manifoldCAD = await import(\"./manifoldCAD.js\");\n    if (Array.isArray(any)) {\n        return await any.map(anyToGLTFNodeList)\n            .reduce(async (acc, cur) => ([...(await acc), ...(await cur)]), new Promise(resolve => resolve([])));\n    }\n    else if (any instanceof manifoldCAD.GLTFNode || any instanceof GLTFNode) {\n        const node = any;\n        if (!node.parent)\n            return [node];\n        return [await anyToGLTFNodeList(node.parent), node].flat();\n    }\n    else if (any instanceof manifoldCAD.Manifold) {\n        const node = new GLTFNode();\n        node.manifold = any;\n        return [node];\n    }\n    throw new Error('Cannot convert model to GLTFNode!');\n}\n//# sourceMappingURL=scene-builder.js.map","\nvar Module = (() => {\n  var _scriptName = import.meta.url;\n  \n  return (\nasync function(moduleArg = {}) {\n  var moduleRtn;\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){const{createRequire:createRequire}=await import(\"module\");var require=createRequire(import.meta.url)}var _ManifoldInitialized=false;Module.setup=function(){if(_ManifoldInitialized)return;_ManifoldInitialized=true;Module.initTBB();function toVec(vec,list,f=(x=>x)){if(list){for(let x of list){vec.push_back(f(x))}}return vec}function fromVec(vec,f=(x=>x)){const result=[];const size=vec.size();for(let i=0;i<size;i++)result.push(f(vec.get(i)));return result}function vec2polygons(vec,f=(x=>x)){const result=[];const nPoly=vec.size();for(let i=0;i<nPoly;i++){const v=vec.get(i);const nPts=v.size();const poly=[];for(let j=0;j<nPts;j++){poly.push(f(v.get(j)))}result.push(poly)}return result}function polygons2vec(polygons){if(polygons[0].length<3){polygons=[polygons]}return toVec(new Module.Vector2_vec2,polygons,poly=>toVec(new Module.Vector_vec2,poly,p=>{if(p instanceof Array)return{x:p[0],y:p[1]};return p}))}function disposePolygons(polygonsVec){for(let i=0;i<polygonsVec.size();i++)polygonsVec.get(i).delete();polygonsVec.delete()}function vararg2vec2(vec){if(vec[0]instanceof Array)return{x:vec[0][0],y:vec[0][1]};if(typeof vec[0]==\"number\")return{x:vec[0]||0,y:vec[1]||0};return vec[0]}function vararg2vec3(vec){if(vec[0]instanceof Array)return{x:vec[0][0],y:vec[0][1],z:vec[0][2]};if(typeof vec[0]==\"number\")return{x:vec[0]||0,y:vec[1]||0,z:vec[2]||0};return vec[0]}function fillRuleToInt(fillRule){return fillRule==\"EvenOdd\"?0:fillRule==\"NonZero\"?1:fillRule==\"Negative\"?3:2}function joinTypeToInt(joinType){return joinType==\"Round\"?1:joinType==\"Miter\"?2:0}const CrossSectionCtor=Module.CrossSection;function cross(polygons,fillRule=\"Positive\"){if(polygons instanceof CrossSectionCtor){return polygons}else{const polygonsVec=polygons2vec(polygons);const cs=new CrossSectionCtor(polygonsVec,fillRuleToInt(fillRule));disposePolygons(polygonsVec);return cs}}Module.CrossSection.prototype.translate=function(...vec){return this._Translate(vararg2vec2(vec))};Module.CrossSection.prototype.scale=function(vec){if(typeof vec==\"number\"){return this._Scale({x:vec,y:vec})}return this._Scale(vararg2vec2([vec]))};Module.CrossSection.prototype.mirror=function(vec){return this._Mirror(vararg2vec2([vec]))};Module.CrossSection.prototype.warp=function(func){const wasmFuncPtr=addFunction(function(vec2Ptr){const x=getValue(vec2Ptr,\"double\");const y=getValue(vec2Ptr+8,\"double\");const vert=[x,y];func(vert);setValue(vec2Ptr,vert[0],\"double\");setValue(vec2Ptr+8,vert[1],\"double\")},\"vi\");const out=this._Warp(wasmFuncPtr);removeFunction(wasmFuncPtr);return out};Module.CrossSection.prototype.decompose=function(){const vec=this._Decompose();const result=fromVec(vec);vec.delete();return result};Module.CrossSection.prototype.bounds=function(){const result=this._Bounds();return{min:[\"x\",\"y\"].map(f=>result.min[f]),max:[\"x\",\"y\"].map(f=>result.max[f])}};Module.CrossSection.prototype.offset=function(delta,joinType=\"Round\",miterLimit=2,circularSegments=0){return this._Offset(delta,joinTypeToInt(joinType),miterLimit,circularSegments)};Module.CrossSection.prototype.simplify=function(epsilon=1e-6){return this._Simplify(epsilon)};Module.CrossSection.prototype.extrude=function(height,nDivisions=0,twistDegrees=0,scaleTop=[1,1],center=false){scaleTop=vararg2vec2([scaleTop]);const man=Module._Extrude(this._ToPolygons(),height,nDivisions,twistDegrees,scaleTop);return center?man.translate([0,0,-height/2]):man};Module.CrossSection.prototype.revolve=function(circularSegments=0,revolveDegrees=360){return Module._Revolve(this._ToPolygons(),circularSegments,revolveDegrees)};Module.CrossSection.prototype.add=function(other){return this._add(cross(other))};Module.CrossSection.prototype.subtract=function(other){return this._subtract(cross(other))};Module.CrossSection.prototype.intersect=function(other){return this._intersect(cross(other))};Module.CrossSection.prototype.toPolygons=function(){const vec=this._ToPolygons();const result=vec2polygons(vec,v=>[v.x,v.y]);vec.delete();return result};Module.Manifold.prototype.smoothOut=function(minSharpAngle=60,minSmoothness=0){return this._SmoothOut(minSharpAngle,minSmoothness)};Module.Manifold.prototype.warp=function(func){const wasmFuncPtr=addFunction(function(vec3Ptr){const x=getValue(vec3Ptr,\"double\");const y=getValue(vec3Ptr+8,\"double\");const z=getValue(vec3Ptr+16,\"double\");const vert=[x,y,z];func(vert);setValue(vec3Ptr,vert[0],\"double\");setValue(vec3Ptr+8,vert[1],\"double\");setValue(vec3Ptr+16,vert[2],\"double\")},\"vi\");const out=this._Warp(wasmFuncPtr);removeFunction(wasmFuncPtr);const status=out.status();if(status!==\"NoError\"){throw new Module.ManifoldError(status)}return out};Module.Manifold.prototype.calculateNormals=function(normalIdx,minSharpAngle=60){return this._CalculateNormals(normalIdx,minSharpAngle)};Module.Manifold.prototype.setProperties=function(numProp,func){const oldNumProp=this.numProp();const wasmFuncPtr=addFunction(function(newPtr,vec3Ptr,oldPtr){const newProp=[];for(let i=0;i<numProp;++i){newProp[i]=getValue(newPtr+8*i,\"double\")}const pos=[];for(let i=0;i<3;++i){pos[i]=getValue(vec3Ptr+8*i,\"double\")}const oldProp=[];for(let i=0;i<oldNumProp;++i){oldProp[i]=getValue(oldPtr+8*i,\"double\")}func(newProp,pos,oldProp);for(let i=0;i<numProp;++i){setValue(newPtr+8*i,newProp[i],\"double\")}},\"viii\");const out=this._SetProperties(numProp,wasmFuncPtr);removeFunction(wasmFuncPtr);return out};Module.Manifold.prototype.translate=function(...vec){return this._Translate(vararg2vec3(vec))};Module.Manifold.prototype.rotate=function(xOrVec,y,z){if(Array.isArray(xOrVec)){return this._Rotate(...xOrVec)}else{return this._Rotate(xOrVec,y||0,z||0)}};Module.Manifold.prototype.scale=function(vec){if(typeof vec==\"number\"){return this._Scale({x:vec,y:vec,z:vec})}return this._Scale(vararg2vec3([vec]))};Module.Manifold.prototype.mirror=function(vec){return this._Mirror(vararg2vec3([vec]))};Module.Manifold.prototype.trimByPlane=function(normal,offset=0){return this._TrimByPlane(vararg2vec3([normal]),offset)};Module.Manifold.prototype.slice=function(height=0){const polygonsVec=this._Slice(height);const result=new CrossSectionCtor(polygonsVec,fillRuleToInt(\"Positive\"));disposePolygons(polygonsVec);return result};Module.Manifold.prototype.project=function(){const polygonsVec=this._Project();const result=new CrossSectionCtor(polygonsVec,fillRuleToInt(\"Positive\"));disposePolygons(polygonsVec);return result};Module.Manifold.prototype.split=function(manifold){const vec=this._Split(manifold);const result=fromVec(vec);vec.delete();return result};Module.Manifold.prototype.splitByPlane=function(normal,offset=0){const vec=this._SplitByPlane(vararg2vec3([normal]),offset);const result=fromVec(vec);vec.delete();return result};Module.Manifold.prototype.decompose=function(){const vec=this._Decompose();const result=fromVec(vec);vec.delete();return result};Module.Manifold.prototype.boundingBox=function(){const result=this._boundingBox();return{min:[\"x\",\"y\",\"z\"].map(f=>result.min[f]),max:[\"x\",\"y\",\"z\"].map(f=>result.max[f])}};class Mesh{constructor({numProp:numProp=3,triVerts:triVerts=new Uint32Array,vertProperties:vertProperties=new Float32Array,mergeFromVert:mergeFromVert,mergeToVert:mergeToVert,runIndex:runIndex,runOriginalID:runOriginalID,faceID:faceID,halfedgeTangent:halfedgeTangent,runTransform:runTransform}={}){this.numProp=numProp;this.triVerts=triVerts;this.vertProperties=vertProperties;this.mergeFromVert=mergeFromVert;this.mergeToVert=mergeToVert;this.runIndex=runIndex;this.runOriginalID=runOriginalID;this.faceID=faceID;this.halfedgeTangent=halfedgeTangent;this.runTransform=runTransform}get numTri(){return this.triVerts.length/3}get numVert(){return this.vertProperties.length/this.numProp}get numRun(){return this.runOriginalID.length}merge(){const{changed:changed,mesh:mesh}=Module._Merge(this);Object.assign(this,{...mesh});return changed}verts(tri){return this.triVerts.subarray(3*tri,3*(tri+1))}position(vert){return this.vertProperties.subarray(this.numProp*vert,this.numProp*vert+3)}extras(vert){return this.vertProperties.subarray(this.numProp*vert+3,this.numProp*(vert+1))}tangent(halfedge){return this.halfedgeTangent.subarray(4*halfedge,4*(halfedge+1))}transform(run){const mat4=new Array(16);for(const col of[0,1,2,3]){for(const row of[0,1,2]){mat4[4*col+row]=this.runTransform[12*run+3*col+row]}}mat4[15]=1;return mat4}}Module.Mesh=Mesh;Module.Manifold.prototype.getMesh=function(normalIdx=-1){return new Mesh(this._GetMeshJS(normalIdx))};Module.ManifoldError=function ManifoldError(code,...args){let message=\"Unknown error\";switch(code){case\"NonFiniteVertex\":message=\"Non-finite vertex\";break;case\"NotManifold\":message=\"Not manifold\";break;case\"VertexOutOfBounds\":message=\"Vertex index out of bounds\";break;case\"PropertiesWrongLength\":message=\"Properties have wrong length\";break;case\"MissingPositionProperties\":message=\"Less than three properties\";break;case\"MergeVectorsDifferentLengths\":message=\"Merge vectors have different lengths\";break;case\"MergeIndexOutOfBounds\":message=\"Merge index out of bounds\";break;case\"TransformWrongLength\":message=\"Transform vector has wrong length\";break;case\"RunIndexWrongLength\":message=\"Run index vector has wrong length\";break;case\"FaceIDWrongLength\":message=\"Face ID vector has wrong length\";case\"InvalidConstruction\":message=\"Manifold constructed with invalid parameters\"}const base=Error.apply(this,[message,...args]);base.name=this.name=\"ManifoldError\";this.message=base.message;this.stack=base.stack;this.code=code};Module.ManifoldError.prototype=Object.create(Error.prototype,{constructor:{value:Module.ManifoldError,writable:true,configurable:true}});Module.CrossSection=function(polygons,fillRule=\"Positive\"){const polygonsVec=polygons2vec(polygons);const cs=new CrossSectionCtor(polygonsVec,fillRuleToInt(fillRule));disposePolygons(polygonsVec);return cs};Module.CrossSection.ofPolygons=function(polygons,fillRule=\"Positive\"){return new Module.CrossSection(polygons,fillRule)};Module.CrossSection.square=function(...args){let size=undefined;if(args.length==0)size={x:1,y:1};else if(typeof args[0]==\"number\")size={x:args[0],y:args[0]};else size=vararg2vec2(args);const center=args[1]||false;return Module._Square(size,center)};Module.CrossSection.circle=function(radius,circularSegments=0){return Module._Circle(radius,circularSegments)};function crossSectionBatchbool(name){return function(...args){if(args.length==1)args=args[0];const v=new Module.Vector_crossSection;for(const cs of args)v.push_back(cross(cs));const result=Module[\"_crossSection\"+name](v);v.delete();return result}}Module.CrossSection.compose=crossSectionBatchbool(\"Compose\");Module.CrossSection.union=crossSectionBatchbool(\"UnionN\");Module.CrossSection.difference=crossSectionBatchbool(\"DifferenceN\");Module.CrossSection.intersection=crossSectionBatchbool(\"IntersectionN\");function pushVec2(vec,ps){toVec(vec,ps,p=>{if(p instanceof Array)return{x:p[0],y:p[1]};return p})}Module.CrossSection.hull=function(...args){if(args.length==1)args=args[0];let pts=new Module.Vector_vec2;for(const cs of args){if(cs instanceof CrossSectionCtor){Module._crossSectionCollectVertices(pts,cs)}else if(cs instanceof Array&&cs.length==2&&typeof cs[0]==\"number\"){pts.push_back({x:cs[0],y:cs[1]})}else if(cs.x){pts.push_back(cs)}else{const wrap=cs[0].length==2&&typeof cs[0][0]==\"number\"||cs[0].x;const polys=wrap?[cs]:cs;for(const poly of polys)pushVec2(pts,poly)}}const result=Module._crossSectionHullPoints(pts);pts.delete();return result};Module.CrossSection.prototype=Object.create(CrossSectionCtor.prototype);Object.defineProperty(Module.CrossSection,Symbol.hasInstance,{get:()=>t=>t instanceof CrossSectionCtor});const ManifoldCtor=Module.Manifold;Module.Manifold=function(mesh){const manifold=new ManifoldCtor(mesh);const status=manifold.status();if(status!==\"NoError\"){throw new Module.ManifoldError(status)}return manifold};Module.Manifold.ofMesh=function(mesh){return new Module.Manifold(mesh)};Module.Manifold.tetrahedron=function(){return Module._Tetrahedron()};Module.Manifold.cube=function(...args){let size=undefined;if(args.length==0)size={x:1,y:1,z:1};else if(typeof args[0]==\"number\")size={x:args[0],y:args[0],z:args[0]};else size=vararg2vec3(args);const center=args[1]||false;return Module._Cube(size,center)};Module.Manifold.cylinder=function(height,radiusLow,radiusHigh=-1,circularSegments=0,center=false){return Module._Cylinder(height,radiusLow,radiusHigh,circularSegments,center)};Module.Manifold.sphere=function(radius,circularSegments=0){return Module._Sphere(radius,circularSegments)};Module.Manifold.smooth=function(mesh,sharpenedEdges=[]){const sharp=new Module.Vector_smoothness;toVec(sharp,sharpenedEdges);const result=Module._Smooth(mesh,sharp);sharp.delete();return result};Module.Manifold.extrude=function(polygons,height,nDivisions=0,twistDegrees=0,scaleTop=[1,1],center=false){const cs=polygons instanceof CrossSectionCtor?polygons:Module.CrossSection(polygons,\"Positive\");return cs.extrude(height,nDivisions,twistDegrees,scaleTop,center)};Module.Manifold.revolve=function(polygons,circularSegments=0,revolveDegrees=360){const cs=polygons instanceof CrossSectionCtor?polygons:Module.CrossSection(polygons,\"Positive\");return cs.revolve(circularSegments,revolveDegrees)};Module.Manifold.reserveIDs=function(n){return Module._ReserveIDs(n)};Module.Manifold.compose=function(manifolds){const vec=new Module.Vector_manifold;toVec(vec,manifolds);const result=Module._manifoldCompose(vec);vec.delete();return result};function manifoldBatchbool(name){return function(...args){if(args.length==1)args=args[0];const v=new Module.Vector_manifold;for(const m of args)v.push_back(m);const result=Module[\"_manifold\"+name+\"N\"](v);v.delete();return result}}Module.Manifold.union=manifoldBatchbool(\"Union\");Module.Manifold.difference=manifoldBatchbool(\"Difference\");Module.Manifold.intersection=manifoldBatchbool(\"Intersection\");Module.Manifold.levelSet=function(sdf,bounds,edgeLength,level=0,tolerance=-1){const bounds2={min:{x:bounds.min[0],y:bounds.min[1],z:bounds.min[2]},max:{x:bounds.max[0],y:bounds.max[1],z:bounds.max[2]}};const wasmFuncPtr=addFunction(function(vec3Ptr){const x=getValue(vec3Ptr,\"double\");const y=getValue(vec3Ptr+8,\"double\");const z=getValue(vec3Ptr+16,\"double\");const vert=[x,y,z];return sdf(vert)},\"di\");const out=Module._LevelSet(wasmFuncPtr,bounds2,edgeLength,level,tolerance);removeFunction(wasmFuncPtr);return out};function pushVec3(vec,ps){toVec(vec,ps,p=>{if(p instanceof Array)return{x:p[0],y:p[1],z:p[2]};return p})}Module.Manifold.hull=function(...args){if(args.length==1)args=args[0];let pts=new Module.Vector_vec3;for(const m of args){if(m instanceof ManifoldCtor){Module._manifoldCollectVertices(pts,m)}else if(m instanceof Array&&m.length==3&&typeof m[0]==\"number\"){pts.push_back({x:m[0],y:m[1],z:m[2]})}else if(m.x){pts.push_back(m)}else{pushVec3(pts,m)}}const result=Module._manifoldHullPoints(pts);pts.delete();return result};Module.Manifold.prototype=Object.create(ManifoldCtor.prototype);Object.defineProperty(Module.Manifold,Symbol.hasInstance,{get:()=>t=>t instanceof ManifoldCtor});Module.triangulate=function(polygons,epsilon=-1,allowConvex=true){const polygonsVec=polygons2vec(polygons);const result=fromVec(Module._Triangulate(polygonsVec,epsilon,allowConvex),x=>[x[0],x[1],x[2]]);disposePolygons(polygonsVec);return result}};var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var readAsync,readBinary;if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");scriptDirectory=require(\"url\").fileURLToPath(new URL(\"./\",import.meta.url));readBinary=filename=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);var ret=fs.readFileSync(filename);return ret};readAsync=(filename,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return new Promise((resolve,reject)=>{fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)reject(err);else resolve(binary?data.buffer:data)})})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=url=>{if(isFileURI(url)){return new Promise((reject,resolve)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){resolve(xhr.response)}reject(xhr.status)};xhr.onerror=reject;xhr.send(null)})}return fetch(url,{credentials:\"same-origin\"}).then(response=>{if(response.ok){return response.arrayBuffer()}return Promise.reject(new Error(response.status+\" : \"+response.url))})}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith(\"file://\");function findWasmBinary(){if(Module[\"locateFile\"]){var f=\"manifold.wasm\";if(!isDataURI(f)){return locateFile(f)}return f}return new URL(\"manifold.wasm\",import.meta.url).href}var wasmBinaryFile;function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary){return readAsync(binaryFile).then(response=>new Uint8Array(response),()=>getBinarySync(binaryFile))}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function getWasmImports(){return{a:wasmImports}}function createWasm(){var info=getWasmImports();function receiveInstance(instance,module){wasmExports=instance.exports;wasmExports=applySignatureConversions(wasmExports);wasmMemory=wasmExports[\"J\"];updateMemoryViews();wasmTable=wasmExports[\"M\"];addOnInit(wasmExports[\"K\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}if(!wasmBinaryFile)wasmBinaryFile=findWasmBinary();instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};function getValue(ptr,type=\"i8\"){if(type.endsWith(\"*\"))type=\"*\";switch(type){case\"i1\":return HEAP8[ptr>>>0];case\"i8\":return HEAP8[ptr>>>0];case\"i16\":return HEAP16[ptr>>>1>>>0];case\"i32\":return HEAP32[ptr>>>2>>>0];case\"i64\":abort(\"to do getValue(i64) use WASM_BIGINT\");case\"float\":return HEAPF32[ptr>>>2>>>0];case\"double\":return HEAPF64[ptr>>>3>>>0];case\"*\":return HEAPU32[ptr>>>2>>>0];default:abort(`invalid type for getValue: ${type}`)}}var noExitRuntime=Module[\"noExitRuntime\"]||true;function setValue(ptr,value,type=\"i8\"){if(type.endsWith(\"*\"))type=\"*\";switch(type){case\"i1\":HEAP8[ptr>>>0]=value;break;case\"i8\":HEAP8[ptr>>>0]=value;break;case\"i16\":HEAP16[ptr>>>1>>>0]=value;break;case\"i32\":HEAP32[ptr>>>2>>>0]=value;break;case\"i64\":abort(\"to do setValue(i64) use WASM_BIGINT\");case\"float\":HEAPF32[ptr>>>2>>>0]=value;break;case\"double\":HEAPF64[ptr>>>3>>>0]=value;break;case\"*\":HEAPU32[ptr>>>2>>>0]=value;break;default:abort(`invalid type for setValue: ${type}`)}}class ExceptionInfo{constructor(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24}set_type(type){HEAPU32[this.ptr+4>>>2>>>0]=type}get_type(){return HEAPU32[this.ptr+4>>>2>>>0]}set_destructor(destructor){HEAPU32[this.ptr+8>>>2>>>0]=destructor}get_destructor(){return HEAPU32[this.ptr+8>>>2>>>0]}set_caught(caught){caught=caught?1:0;HEAP8[this.ptr+12>>>0]=caught}get_caught(){return HEAP8[this.ptr+12>>>0]!=0}set_rethrown(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>>0]=rethrown}get_rethrown(){return HEAP8[this.ptr+13>>>0]!=0}init(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)}set_adjusted_ptr(adjustedPtr){HEAPU32[this.ptr+16>>>2>>>0]=adjustedPtr}get_adjusted_ptr(){return HEAPU32[this.ptr+16>>>2>>>0]}get_exception_ptr(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>>2>>>0]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){ptr>>>=0;type>>>=0;destructor>>>=0;var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast}var __abort_js=()=>{abort(\"\")};var structRegistrations={};var runDestructors=destructors=>{while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}};function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>>2>>>0])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var InternalError;var throwInternalError=message=>{throw new InternalError(message)};var whenDependentTypesAreResolved=(myTypes,dependentTypes,getTypeConverters)=>{myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}};var __embind_finalize_value_object=function(structType){structType>>>=0;var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>getterReturnType[\"fromWireType\"](getter(getterContext,ptr)),write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,fromWireType:ptr=>{var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},toWireType:(destructors,o)=>{for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError(`Missing field: \"${fieldName}\"`)}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction:rawDestructor}]})};function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0;name>>>=0;size>>>=0}var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c>>>0]){ret+=embind_charCodes[HEAPU8[c++>>>0]]}return ret};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;function __embind_register_bool(rawType,name,trueValue,falseValue){rawType>>>=0;name>>>=0;name=readLatin1String(name);registerType(rawType,{name:name,fromWireType:function(wt){return!!wt},toWireType:function(destructors,o){return o?trueValue:falseValue},argPackAdvance:GenericWireTypeSize,readValueFromPointer:function(pointer){return this[\"fromWireType\"](HEAPU8[pointer>>>0])},destructorFunction:null})}var shallowCopyInternalPointer=o=>({count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType});var throwInstanceAlreadyDeleted=obj=>{function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")};var finalizationRegistry=false;var detachFinalizer=handle=>{};var runDestructor=$$=>{if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}};var releaseClassHandle=$$=>{$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}};var downcastPointer=(ptr,ptrClass,desiredClass)=>{if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)};var registeredPointers={};var getInheritedInstanceCount=()=>Object.keys(registeredInstances).length;var getLiveInheritedInstances=()=>{var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv};var deletionQueue=[];var flushPendingDeletes=()=>{while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}};var delayFunction;var setDelayFunction=fn=>{delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}};var init_embind=()=>{Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction};var registeredInstances={};var getBasestPointer=(class_,ptr)=>{if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr};var getInheritedInstance=(class_,ptr)=>{ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]};var makeClassHandle=(prototype,record)=>{if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record,writable:true}}))};function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}var attachFinalizer=handle=>{if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)};var init_ClassHandle=()=>{Object.assign(ClassHandle.prototype,{isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;other.$$=other.$$;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right},clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}},delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}},isDeleted(){return!this.$$.ptr},deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}})};function ClassHandle(){}var createNamedFunction=(name,body)=>Object.defineProperty(body,\"name\",{value:name});var ensureOverloadTable=(proto,methodName,humanName)=>{if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(...args){if(!proto[methodName].overloadTable.hasOwnProperty(args.length)){throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`)}return proto[methodName].overloadTable[args.length].apply(this,args)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}};var exposePublicSymbol=(name,value,numArguments)=>{if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(`Cannot register public name '${name}' twice`)}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`)}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}};var char_0=48;var char_9=57;var makeLegalFunctionName=name=>{if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return`_${name}`}return name};function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}var upcastPointer=(ptr,ptrClass,desiredClass)=>{while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr};function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle||!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(()=>clonedHandle[\"delete\"]()));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}var init_RegisteredPointer=()=>{Object.assign(RegisteredPointer.prototype,{getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr},destructor(ptr){this.rawDestructor?.(ptr)},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,fromWireType:RegisteredPointer_fromWireType})};function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}var replacePublicSymbol=(name,value,numArguments)=>{if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistent public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var dynCallLegacy=(sig,ptr,args)=>{sig=sig.replace(/p/g,\"i\");var f=Module[\"dynCall_\"+sig];return f(ptr,...args)};var wasmTable;var getWasmTableEntry=funcPtr=>wasmTable.get(funcPtr);var dynCall=(sig,ptr,args=[])=>{if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr)(...args);return sig[0]==\"p\"?rtn>>>0:rtn};var getDynCaller=(sig,ptr)=>(...args)=>dynCall(sig,ptr,args);var embind__requireFunction=(signature,rawFunction)=>{signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}if(signature.includes(\"p\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`)}return fp};var extendError=(baseErrorType,errorName)=>{var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return`${this.name}: ${this.message}`}};return errorClass};var UnboundTypeError;var getTypeName=type=>{var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv};var throwUnboundTypeError=(message,types)=>{var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(`${message}: `+unboundTypes.map(getTypeName).join([\", \"]))};function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){rawType>>>=0;rawPointerType>>>=0;rawConstPointerType>>>=0;baseClassRawType>>>=0;getActualTypeSignature>>>=0;getActualType>>>=0;upcastSignature>>>=0;upcast>>>=0;downcastSignature>>>=0;downcast>>>=0;name>>>=0;destructorSignature>>>=0;rawDestructor>>>=0;name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);upcast&&=embind__requireFunction(upcastSignature,upcast);downcast&&=embind__requireFunction(downcastSignature,downcast);rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],base=>{base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(name,function(...args){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[args.length];if(undefined===body){throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`)}return body.apply(this,args)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);if(registeredClass.baseClass){registeredClass.baseClass.__derivedClasses??=[];registeredClass.baseClass.__derivedClasses.push(registeredClass)}var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}var heap32VectorToArray=(count,firstElement)=>{var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>>2>>>0])}return array};function usesDestructorStack(argTypes){for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){return true}}return false}function newFunc(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync){var needsDestructorStack=usesDestructorStack(argTypes);var argCount=argTypes.length;var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=`\\n        return function (${argsList}) {\\n        if (arguments.length !== ${argCount-2}) {\\n          throwBindingError('function ' + humanName + ' called with ' + arguments.length + ' arguments, expected ${argCount-2}');\\n        }`;if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"humanName\",\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam['toWireType'](\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\"['toWireType'](\"+dtorStack+\", arg\"+i+\");\\n\";args1.push(\"argType\"+i)}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns||isAsync?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=`${paramName}_dtor(${paramName});\\n`;args1.push(`${paramName}_dtor`)}}}if(returns){invokerFnBody+=\"var ret = retType['fromWireType'](rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";return[args1,invokerFnBody]}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=usesDestructorStack(argTypes);var returns=argTypes[0].name!==\"void\";var closureArgs=[humanName,throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];for(var i=0;i<argCount-2;++i){closureArgs.push(argTypes[i+2])}if(!needsDestructorStack){for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){if(argTypes[i].destructorFunction!==null){closureArgs.push(argTypes[i].destructorFunction)}}}let[args,invokerFnBody]=createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync);args.push(invokerFnBody);var invokerFn=newFunc(Function,args)(...closureArgs);return createNamedFunction(humanName,invokerFn)}var __embind_register_class_constructor=function(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){rawClassType>>>=0;rawArgTypesAddr>>>=0;invokerSignature>>>=0;invoker>>>=0;rawConstructor>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],classType=>{classType=classType[0];var humanName=`constructor ${classType.name}`;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`)}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})};var getFunctionName=signature=>{signature=signature.trim();const argsIndex=signature.indexOf(\"(\");if(argsIndex!==-1){return signature.substr(0,argsIndex)}else{return signature}};var __embind_register_class_function=function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync){rawClassType>>>=0;methodName>>>=0;rawArgTypesAddr>>>=0;invokerSignature>>>=0;rawInvoker>>>=0;context>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);methodName=getFunctionName(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],classType=>{classType=classType[0];var humanName=`${classType.name}.${methodName}`;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})};var emval_freelist=[];var emval_handles=[];function __emval_decref(handle){handle>>>=0;if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}}var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};var EmValType={name:\"emscripten::val\",fromWireType:handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},toWireType:(destructors,value)=>Emval.toHandle(value),argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction:null};function __embind_register_emval(rawType){rawType>>>=0;return registerType(rawType,EmValType)}var enumReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?function(pointer){return this[\"fromWireType\"](HEAP8[pointer>>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU8[pointer>>>0])};case 2:return signed?function(pointer){return this[\"fromWireType\"](HEAP16[pointer>>>1>>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU16[pointer>>>1>>>0])};case 4:return signed?function(pointer){return this[\"fromWireType\"](HEAP32[pointer>>>2>>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>>2>>>0])};default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};function __embind_register_enum(rawType,name,size,isSigned){rawType>>>=0;name>>>=0;size>>>=0;name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,fromWireType:function(c){return this.constructor.values[c]},toWireType:(destructors,c)=>c.value,argPackAdvance:GenericWireTypeSize,readValueFromPointer:enumReadValueFromPointer(name,size,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}var requireRegisteredType=(rawType,humanName)=>{var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`)}return impl};function __embind_register_enum_value(rawEnumType,name,enumValue){rawEnumType>>>=0;name>>>=0;var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(`${enumType.name}_${name}`,function(){})}});Enum.values[enumValue]=Value;Enum[name]=Value}var embindRepr=v=>{if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>>2>>>0])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>>3>>>0])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=function(rawType,name,size){rawType>>>=0;name>>>=0;size>>>=0;name=readLatin1String(name);registerType(rawType,{name:name,fromWireType:value=>value,toWireType:(destructors,value)=>value,argPackAdvance:GenericWireTypeSize,readValueFromPointer:floatReadValueFromPointer(name,size),destructorFunction:null})};function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync){name>>>=0;rawArgTypesAddr>>>=0;signature>>>=0;rawInvoker>>>=0;fn>>>=0;var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);name=getFunctionName(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,argTypes=>{var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn,isAsync),argCount-1);return[]})}var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer>>>0]:pointer=>HEAPU8[pointer>>>0];case 2:return signed?pointer=>HEAP16[pointer>>>1>>>0]:pointer=>HEAPU16[pointer>>>1>>>0];case 4:return signed?pointer=>HEAP32[pointer>>>2>>>0]:pointer=>HEAPU32[pointer>>>2>>>0];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};function __embind_register_integer(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0;name>>>=0;size>>>=0;name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,fromWireType:fromWireType,toWireType:toWireType,argPackAdvance:GenericWireTypeSize,readValueFromPointer:integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){rawType>>>=0;name>>>=0;var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>>2>>>0];var data=HEAPU32[handle+4>>>2>>>0];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,fromWireType:decodeMemoryView,argPackAdvance:GenericWireTypeSize,readValueFromPointer:decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_optional(rawOptionalType,rawType){rawOptionalType>>>=0;rawType>>>=0;__embind_register_emval(rawOptionalType)}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder:undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>{ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"};function __embind_register_std_string(rawType,name){rawType>>>=0;name>>>=0;name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,fromWireType(value){var length=HEAPU32[value>>>2>>>0];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr>>>0]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i>>>0])}str=a.join(\"\")}_free(value);return str},toWireType(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>>2>>>0]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i>>>0]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i>>>0]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx>>>0])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr>>>0,endPtr>>>0));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>>1>>>0];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>>1>>>0]=codeUnit;outPtr+=2}HEAP16[outPtr>>>1>>>0]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>>2>>>0];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{outPtr>>>=0;maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>>2>>>0]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>>2>>>0]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=function(rawType,charSize,name){rawType>>>=0;charSize>>>=0;name>>>=0;name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>>1>>>0]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>>2>>>0]}registerType(rawType,{name:name,fromWireType:value=>{var length=HEAPU32[value>>>2>>>0];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},toWireType:(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>>2>>>0]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})};function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){rawType>>>=0;name>>>=0;constructorSignature>>>=0;rawConstructor>>>=0;destructorSignature>>>=0;rawDestructor>>>=0;structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structType>>>=0;fieldName>>>=0;getterReturnType>>>=0;getterSignature>>>=0;getter>>>=0;getterContext>>>=0;setterArgumentType>>>=0;setterSignature>>>=0;setter>>>=0;setterContext>>>=0;structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}var __embind_register_void=function(rawType,name){rawType>>>=0;name>>>=0;name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,argPackAdvance:0,fromWireType:()=>undefined,toWireType:(destructors,o)=>undefined})};function __emscripten_memcpy_js(dest,src,num){dest>>>=0;src>>>=0;num>>>=0;return HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}var emval_returnValue=(returnType,destructorsRef,handle)=>{var destructors=[];var result=returnType[\"toWireType\"](destructors,handle);if(destructors.length){HEAPU32[destructorsRef>>>2>>>0]=Emval.toHandle(destructors)}return result};function __emval_as(handle,returnType,destructorsRef){handle>>>=0;returnType>>>=0;destructorsRef>>>=0;handle=Emval.toValue(handle);returnType=requireRegisteredType(returnType,\"emval::as\");return emval_returnValue(returnType,destructorsRef,handle)}var emval_symbols={};var getStringOrSymbol=address=>{var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}return symbol};var emval_methodCallers=[];function __emval_call_method(caller,objHandle,methodName,destructorsRef,args){caller>>>=0;objHandle>>>=0;methodName>>>=0;destructorsRef>>>=0;args>>>=0;caller=emval_methodCallers[caller];objHandle=Emval.toValue(objHandle);methodName=getStringOrSymbol(methodName);return caller(objHandle,objHandle[methodName],destructorsRef,args)}function __emval_equals(first,second){first>>>=0;second>>>=0;first=Emval.toValue(first);second=Emval.toValue(second);return first==second}var emval_addMethodCaller=caller=>{var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id};var emval_lookupTypes=(argCount,argTypes)=>{var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAPU32[argTypes+i*4>>>2>>>0],\"parameter \"+i)}return a};var reflectConstruct=Reflect.construct;function __emval_get_method_caller(argCount,argTypes,kind){argTypes>>>=0;var types=emval_lookupTypes(argCount,argTypes);var retType=types.shift();argCount--;var functionBody=`return function (obj, func, destructorsRef, args) {\\n`;var offset=0;var argsList=[];if(kind===0){argsList.push(\"obj\")}var params=[\"retType\"];var args=[retType];for(var i=0;i<argCount;++i){argsList.push(\"arg\"+i);params.push(\"argType\"+i);args.push(types[i]);functionBody+=`  var arg${i} = argType${i}.readValueFromPointer(args${offset?\"+\"+offset:\"\"});\\n`;offset+=types[i][\"argPackAdvance\"]}var invoker=kind===1?\"new func\":\"func.call\";functionBody+=`  var rv = ${invoker}(${argsList.join(\", \")});\\n`;if(!retType.isVoid){params.push(\"emval_returnValue\");args.push(emval_returnValue);functionBody+=\"  return emval_returnValue(retType, destructorsRef, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=newFunc(Function,params)(...args);var functionName=`methodCaller<(${types.map(t=>t.name).join(\", \")}) => ${retType.name}>`;return emval_addMethodCaller(createNamedFunction(functionName,invokerFunction))}function __emval_get_property(handle,key){handle>>>=0;key>>>=0;handle=Emval.toValue(handle);key=Emval.toValue(key);return Emval.toHandle(handle[key])}function __emval_incref(handle){handle>>>=0;if(handle>9){emval_handles[handle+1]+=1}}function __emval_new_cstring(v){v>>>=0;return Emval.toHandle(getStringOrSymbol(v))}function __emval_new_object(){return Emval.toHandle({})}function __emval_run_destructors(handle){handle>>>=0;var destructors=Emval.toValue(handle);runDestructors(destructors);__emval_decref(handle)}function __emval_set_property(handle,key,value){handle>>>=0;key>>>=0;value>>>=0;handle=Emval.toValue(handle);key=Emval.toValue(key);value=Emval.toValue(value);handle[key]=value}function __emval_take_value(type,arg){type>>>=0;arg>>>=0;type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}var getHeapMax=()=>4294901760;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};function _emscripten_resize_heap(requestedSize){requestedSize>>>=0;var oldSize=HEAPU8.length;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false}var uleb128Encode=(n,target)=>{if(n<128){target.push(n)}else{target.push(n%128|128,n>>7)}};var sigToWasmTypes=sig=>{var typeNames={i:\"i32\",j:\"i64\",f:\"f32\",d:\"f64\",e:\"externref\",p:\"i32\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return type};var generateFuncType=(sig,target)=>{var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={i:127,p:127,j:126,f:125,d:124,e:111};target.push(96);uleb128Encode(sigParam.length,target);for(var i=0;i<sigParam.length;++i){target.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){target.push(0)}else{target.push(1,typeCodes[sigRet])}};var convertJsFunctionToWasm=(func,sig)=>{if(typeof WebAssembly.Function==\"function\"){return new WebAssembly.Function(sigToWasmTypes(sig),func)}var typeSectionBody=[1];generateFuncType(sig,typeSectionBody);var bytes=[0,97,115,109,1,0,0,0,1];uleb128Encode(typeSectionBody.length,bytes);bytes.push(...typeSectionBody);bytes.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var module=new WebAssembly.Module(new Uint8Array(bytes));var instance=new WebAssembly.Instance(module,{e:{f:func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc};var updateTableMap=(offset,count)=>{if(functionsInTableMap){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}};var functionsInTableMap;var getFunctionAddress=func=>{if(!functionsInTableMap){functionsInTableMap=new WeakMap;updateTableMap(0,wasmTable.length)}return functionsInTableMap.get(func)||0};var freeTableIndexes=[];var getEmptyTableSlot=()=>{if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1};var setWasmTableEntry=(idx,func)=>wasmTable.set(idx,func);var addFunction=(func,sig)=>{var rtn=getFunctionAddress(func);if(rtn){return rtn}var ret=getEmptyTableSlot();try{setWasmTableEntry(ret,func)}catch(err){if(!(err instanceof TypeError)){throw err}var wrapped=convertJsFunctionToWasm(func,sig);setWasmTableEntry(ret,wrapped)}functionsInTableMap.set(func,ret);return ret};var removeFunction=index=>{functionsInTableMap.delete(getWasmTableEntry(index));setWasmTableEntry(index,null);freeTableIndexes.push(index)};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var wasmImports={i:___cxa_throw,D:__abort_js,n:__embind_finalize_value_object,C:__embind_register_bigint,H:__embind_register_bool,h:__embind_register_class,g:__embind_register_class_constructor,a:__embind_register_class_function,G:__embind_register_emval,t:__embind_register_enum,e:__embind_register_enum_value,x:__embind_register_float,c:__embind_register_function,j:__embind_register_integer,f:__embind_register_memory_view,k:__embind_register_optional,w:__embind_register_std_string,s:__embind_register_std_wstring,o:__embind_register_value_object,l:__embind_register_value_object_field,I:__embind_register_void,F:__emscripten_memcpy_js,v:__emval_as,z:__emval_call_method,b:__emval_decref,m:__emval_equals,y:__emval_get_method_caller,B:__emval_get_property,u:__emval_incref,q:__emval_new_cstring,A:__emval_new_object,p:__emval_run_destructors,r:__emval_set_property,d:__emval_take_value,E:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"K\"])();var ___getTypeName=a0=>(___getTypeName=wasmExports[\"L\"])(a0);var _malloc=a0=>(_malloc=wasmExports[\"N\"])(a0);var _free=a0=>(_free=wasmExports[\"O\"])(a0);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"P\"])(a0);function applySignatureConversions(wasmExports){wasmExports=Object.assign({},wasmExports);var makeWrapper_pp=f=>a0=>f(a0)>>>0;var makeWrapper_p=f=>()=>f()>>>0;wasmExports[\"L\"]=makeWrapper_pp(wasmExports[\"L\"]);wasmExports[\"N\"]=makeWrapper_pp(wasmExports[\"N\"]);wasmExports[\"_emscripten_stack_alloc\"]=makeWrapper_pp(wasmExports[\"_emscripten_stack_alloc\"]);wasmExports[\"emscripten_stack_get_current\"]=makeWrapper_p(wasmExports[\"emscripten_stack_get_current\"]);return wasmExports}Module[\"addFunction\"]=addFunction;Module[\"removeFunction\"]=removeFunction;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);Module[\"onRuntimeInitialized\"]?.();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();moduleRtn=readyPromise;\n\n\n  return moduleRtn;\n}\n);\n})();\nexport default Module;\n","// Copyright 2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport Module from '../manifold.js';\nimport { isNode } from \"./util.js\";\n// Instantiate Manifold WASM\nlet manifoldwasm = null;\nlet wasmUrl = null;\n/**\n * Tell us how to find `manifold.wasm`.\n * This is important when using a bundler like WebPack.\n *\n * @param url Path to manifold.wasm\n */\nexport function setWasmUrl(url) {\n    wasmUrl = url;\n}\n/**\n * Instantiate a new Manifold WASM instance.\n *\n * @returns The newly created instance.\n */\nexport async function instantiateManifold() {\n    let module = null;\n    if (!isNode()) {\n        if (typeof wasmUrl !== 'string' || !wasmUrl) {\n            throw new Error('No URL given for \\'manifold.wasm\\'.');\n        }\n        module = await Module({ locateFile: () => wasmUrl });\n    }\n    else {\n        module = await Module();\n    }\n    module.setup();\n    return module;\n}\n/**\n * Instantiate or get a global Manifold WASM instance.\n *\n * @returns A manifold instance.\n */\nexport async function getManifoldModule() {\n    if (!manifoldwasm)\n        manifoldwasm = await instantiateManifold();\n    return manifoldwasm;\n}\n//# sourceMappingURL=wasm.js.map","// Copyright 2022-2025 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { bundleCode, setHasOwnWorker, setWasmUrl as setEsbuildWasmUrl } from \"./bundler.js\";\nimport { BundlerError, RuntimeError } from \"./error.js\";\nimport { Export3MF } from \"./export-3mf.js\";\nimport { ExportGLTF } from \"./export-gltf.js\";\nimport * as garbageCollector from \"./garbage-collector.js\";\nimport * as scenebuilder from \"./scene-builder.js\";\nimport { getSourceMappedStackTrace, isWebWorker } from \"./util.js\";\nimport { getManifoldModule, setWasmUrl as setManifoldWasmUrl } from \"./wasm.js\";\nlet exporters;\nconst AsyncFunction = Object.getPrototypeOf(async function () { }).constructor;\n// Swallow informational logs in testing framework\nfunction log(...args) {\n    if (typeof self !== 'undefined' && self.console) {\n        self.console.log(...args);\n    }\n}\n/**\n * Clean up any state from the last run.\n *\n * This includes any outstanding Manifold, Mesh or CrossSection objects,\n * even if referenced elsewhere.\n */\nexport function cleanup() {\n    garbageCollector.cleanup();\n    scenebuilder.cleanup();\n}\n/**\n * Transform a model from code to a GLTF document.\n *\n * @param code A string containing the code to evaluate.\n * @returns A gltf-transform Document.\n */\nexport async function evaluate(code, options = {}) {\n    const t0 = performance.now();\n    const { doNotBundle, ...bundleOpt } = options;\n    const bundled = doNotBundle === true ? code : await bundleCode(code, bundleOpt);\n    const t1 = performance.now();\n    if (doNotBundle !== true) {\n        log(`Bundling code took ${((t1 - t0) / 1000).toFixed(2)} seconds`);\n    }\n    const manifoldCAD = await import(\"./manifoldCAD.js\");\n    manifoldCAD.resetToCircularDefaults();\n    cleanup();\n    // Customize `manifold-3d/manifoldCAD`.\n    // Let models know that they are running inside this worker.\n    const manifoldImport = {\n        ...manifoldCAD,\n        isManifoldCAD: () => true,\n    };\n    // If a top level script imports manifoldCAD, track GLTF nodes.\n    // Libraries are expected to manage this on their own; if a\n    // library somehow doesn't export a GLTF node, it must not\n    // show up here.\n    const toplevelImport = {\n        ...manifoldImport,\n        GLTFNode: scenebuilder.GLTFNodeTracked,\n        getGLTFNodes: scenebuilder.getGLTFNodes,\n        resetGLTFNodes: scenebuilder.resetGLTFNodes,\n    };\n    // Set up global variables exposed to the model without an import.\n    const globalDefaults = {};\n    const globals = {\n        // Global defaults can be populated by the script.\n        // This can be used to set parameters elsewhere in ManifoldCAD.  For\n        // example, the GLTF exporter will look for animation type and\n        // framerate.\n        globalDefaults,\n        // The bundler will swap these objects in when needed.\n        _manifold_cad_top_level: toplevelImport,\n        _manifold_cad_library: manifoldImport,\n        // While this project is built using ES modules, and we assume models and\n        // libraries are ES modules, code executed via `new Function()` or `eval` is\n        // treated as commonJS.\n        // CommonJS expects 'exports' to exist:\n        exports: {},\n        // This is where we expect results after running the script.\n        module: { exports: { default: null } },\n    };\n    let result = null;\n    try {\n        const evalFn = new AsyncFunction(...Object.keys(globals), bundled);\n        await evalFn(...Object.values(globals));\n        result = globals.module?.exports?.default;\n        // If the default export is a function, execute it.  This way libraries can\n        // preview their results when run as a top level script, without incurring\n        // that overhead when imported into another model.\n        if (typeof result === 'function') {\n            result = await result();\n        }\n    }\n    catch (error) {\n        // \"According to step 12 of\n        // https://tc39.es/ecma262/#sec-createdynamicfunction, the Function\n        // constructor always prefixes the source with additional 2 lines.\"\n        // https://github.com/nodejs/node/issues/43047#issuecomment-1564068099\n        const stacktrace = getSourceMappedStackTrace(bundled, error, -2);\n        let newError = null;\n        const missing = Object.keys(toplevelImport).find((x) => error.message.match(x));\n        if (error.name === 'ReferenceError' && missing) {\n            newError = new RuntimeError(error, error.message + '.  Import it by adding \\`' +\n                `import {${missing}} from 'manifold-3d/manifoldCAD';` +\n                '\\` to the top of your model.');\n        }\n        else if (error.name === 'ReferenceError' && error.message.match(/glMatrix/)) {\n            newError = new RuntimeError(error, 'ManifoldCAD no longer includes gl-matrix directly.  ' +\n                'Import it by adding `import * as glMatrix from \\'gl-matrix\\';` ' +\n                'to the top of your model.');\n        }\n        else {\n            newError = new RuntimeError(error);\n        }\n        newError.manifoldStack = stacktrace;\n        throw newError;\n    }\n    const t2 = performance.now();\n    log(`Manifold took ${((t2 - t1) / 1000).toFixed(2)} seconds`);\n    // If we don't actually have a model, complain.\n    if (!result || (Array.isArray(result) && !result.length)) {\n        if (scenebuilder.getGLTFNodes().length) {\n            throw new Error('GLTF Nodes were created, but not exported.  ' +\n                'Add `const nodes = getGLTFNodes();` and `export default nodes;` ' +\n                'to the end of your model.');\n        }\n        throw new Error('No output as no model was exported.  Add a default export ' +\n            '(e.g.: `export default result;`) to the bottom of your model.  ' +\n            'The default export must be a `Manifold` or `GLTFNode` object, ' +\n            'an array of `Manifold` or `GLTFNode` objects, ' +\n            'or a function that returns any of the above.');\n    }\n    // Create a gltf-transform document.\n    const nodes = await scenebuilder.anyToGLTFNodeList(result);\n    const doc = scenebuilder.GLTFNodesToGLTFDoc(nodes, globalDefaults);\n    const t3 = performance.now();\n    log(`Creating GLTF Document took ${((t3 - t2) / 1000).toFixed(2)} seconds`);\n    return doc;\n}\n/**\n * Convert an in-memory GLTF document to a URL encoded blob.\n *\n * @param doc The GLTF document.\n * @param extension The target file extension.\n * @returns A URL encoded blob.\n */\nexport const exportBlobURL = async (doc, extension) => {\n    const t0 = performance.now();\n    exporters = [new Export3MF(), new ExportGLTF()];\n    const blob = await exporters.find(ex => ex.extensions.includes(extension)).asBlob(doc);\n    const blobURL = URL.createObjectURL(blob);\n    const t1 = performance.now();\n    log(`Exporting ${extension.toUpperCase()} took ${(Math.round((t1 - t0) / 10) / 100).toLocaleString()} seconds`);\n    return blobURL;\n};\n/**\n * Set up message handlers and logging when run as a web worker.\n */\nconst initializeWebWorker = () => {\n    const interceptConsole = () => {\n        console.debug('Intercepting console.log() in manifoldCAD worker.');\n        if (self.console) {\n            const oldLog = self.console.log;\n            self.console.log = function (...args) {\n                let message = '';\n                for (const arg of args) {\n                    if (arg == null) {\n                        message += 'undefined';\n                    }\n                    else if (typeof arg == 'object') {\n                        message += JSON.stringify(arg, null, 4);\n                    }\n                    else {\n                        message += arg.toString();\n                    }\n                }\n                self.postMessage({ type: 'log', message });\n                oldLog(...args);\n            };\n        }\n        ;\n    };\n    const sendError = (error) => {\n        // Log the error / stack trace to the console.\n        if (error.stack &&\n            (error instanceof BundlerError || error instanceof RuntimeError)) {\n            console.error(error.stack);\n        }\n        else {\n            console.error(error);\n        }\n        self.postMessage({\n            type: 'error',\n            name: error.name,\n            message: error.message,\n            stack: error.stack\n        });\n    };\n    const handleInitialize = async (message) => {\n        try {\n            console.debug('Initializing ManifoldCAD worker.');\n            if (message.manifoldWasmUrl)\n                setManifoldWasmUrl(message.manifoldWasmUrl);\n            if (message.esbuildWasmUrl)\n                setEsbuildWasmUrl(message.esbuildWasmUrl);\n            setHasOwnWorker(message.esbuildHasOwnWorker === true);\n            await getManifoldModule();\n            interceptConsole();\n            self.postMessage({ type: 'ready' });\n            console.debug('Successfully initialized ManifoldCAD worker!');\n        }\n        catch (error) {\n            sendError(error);\n        }\n    };\n    let gltfdoc = null;\n    const handleEvaluate = async (message) => {\n        try {\n            const { code, ...options } = message;\n            gltfdoc = await evaluate(message.code, options);\n            self.postMessage({ type: 'done' });\n        }\n        catch (error) {\n            sendError(error);\n        }\n    };\n    const handleExport = async (message) => {\n        try {\n            self.postMessage({\n                type: 'blob',\n                extension: message.extension,\n                blobURL: await exportBlobURL(gltfdoc, message.extension)\n            });\n        }\n        catch (error) {\n            sendError(error);\n        }\n    };\n    self.onmessage = async (e) => {\n        const message = e.data;\n        if (message.type === 'initialize') {\n            handleInitialize(message);\n        }\n        else if (message.type === 'evaluate') {\n            handleEvaluate(message);\n        }\n        else if (message.type === 'export') {\n            handleExport(message);\n        }\n    };\n};\nif (isWebWorker())\n    initializeWebWorker();\n//# sourceMappingURL=worker.js.map"],"names":["module","__defProp","__getOwnPropDesc","__getOwnPropNames","__hasOwnProp","__export","target","all","name","__copyProps","to","from","except","desc","key","__toCommonJS","mod","__async","__this","__arguments","generator","resolve","reject","fulfilled","value","step","e","rejected","x","browser_exports","analyzeMetafile","analyzeMetafileSync","build","buildSync","context","browser_default","formatMessages","formatMessagesSync","initialize","stop","transform","transformSync","version","encodePacket","packet","visit","bb","encodeUTF8","item","keys","ByteBuffer","writeUInt32LE","decodePacket","bytes","decodeUTF8","count","value2","i","id","isRequest","buf","delta","clone","offset","readUInt32LE","length","ptr","encodeInvariant","encoder","decoder","text","buffer","byteOffset","byteLength","quote","buildLogLevelDefault","transformLogLevelDefault","validateAndJoinStringArray","values","what","toJoin","validateStringValue","canBeAnything","mustBeBoolean","mustBeString","mustBeRegExp","mustBeInteger","mustBeValidPortNumber","mustBeFunction","mustBeArray","mustBeArrayOfStrings","mustBeObject","mustBeEntryPoints","mustBeWebAssemblyModule","mustBeObjectOrNull","mustBeStringOrBoolean","mustBeStringOrObject","mustBeStringOrArrayOfStrings","mustBeStringOrUint8Array","mustBeStringOrURL","getFlag","object","mustBeFn","mustBe","checkForInvalidFlags","where","validateInitializeOptions","options","wasmURL","wasmModule","worker","validateMangleCache","mangleCache","validated","pushLogFlags","flags","isTTY","logLevelDefault","color","logLevel","logLimit","pushCommonFlags","legalComments","sourceRoot","sourcesContent","format","globalName","mangleProps","reserveProps","mangleQuoted","minify","minifySyntax","minifyWhitespace","minifyIdentifiers","lineLimit","drop","dropLabels","charset","treeShaking","ignoreAnnotations","jsx","jsxFactory","jsxFragment","jsxImportSource","jsxDev","jsxSideEffects","define","logOverride","supported","pure","keepNames","platform","tsconfigRaw","absPaths","jsRegExpToGoRegExp","fn","flagsForBuildOptions","callName","writeDefault","_a","entries","stdinContents","stdinResolveDir","sourcemap","bundle","splitting","preserveSymlinks","metafile","outfile","outdir","outbase","tsconfig","resolveExtensions","nodePathsInput","mainFields","conditions","external","packages","alias","loader","outExtension","publicPath","entryNames","chunkNames","assetNames","inject","banner","footer","entryPoints","absWorkingDir","stdin","write","allowOverwrite","old","type","path","ext","n","entryPoint","entryPointKeys","input","output","stdinKeys","contents","resolveDir","sourcefile","loader2","nodePaths","flagsForTransformOptions","createChannel","streamIn","requestCallbacksByKey","closeData","responseCallbacks","nextRequestID","nextBuildKey","stdout","stdoutUsed","readFromStdout","chunk","limit","swap","handleIncomingPacket","afterClose","error","sendRequest","refs","callback","response","sendResponse","handleRequest","request","requestCallbacks","errors","extractErrorMessageV8","isFirstPacket","binaryVersion","defaultWD","refCount","buildKey","buildRefs","buildOrContextImpl","err","res","fs","details","createObjectStash","start","inputPath","replaceDetailsInMessages","warnings","outstanding","next","result","failureErrorWithLog","messages","kind","terminalWidth","sanitizeMessages","verbose","isContext","handleError","pluginName","message","plugins","handlePlugins","buildOrContextContinue","done","requestPlugins","runOnEndCallbacks","scheduleOnDisposeCallbacks","buildResponseToResult","callback2","originalErrors","originalWarnings","convertOutputFiles","onEndErrors","onEndWarnings","latestResultPromise","provideLatestResult","request2","didDispose","settlePromise","result2","triggerAnotherBuild","error2","response2","options2","delay","port","host","servedir","keyfile","certfile","fallback","cors","onRequest","corsKeys","origin","request3","initialOptions","onStartCallbacks","onEndCallbacks","onResolveCallbacks","onLoadCallbacks","onDisposeCallbacks","nextCallbackID","isSetupDone","setup","plugin","promise","keys2","importer","namespace","pluginData","importAttributes","resolve2","sanitizeStringMap","registeredText","registeredNote","extractCallerV8","filter","_0","note","id2","suffix","sideEffects","watchFiles","watchDirs","sanitizeStringArray","newErrors","newWarnings","cb","map","nextID","ident","tried","lines","location2","parseStackLinesV8","stash","at","line","match","lineText","column","file","pluginText","sanitizeLocation","suggestion","relevantASCII","property","fallbackPluginName","messagesClone","index","notes","detail","notesClone","noteKeys","noteText","noteLocation","hash","binary","regexp","ensureServiceIsRunning","stopService","initializePromise","longLivedService","useWorker","startRunningService","rejectAllWith","rejectAllPromise","blob","onmessage","postMessage","globalThis","o","k","enosys","outputBuf","fd","nl","position","mode","uid","gid","link","perm","atime","mtime","code","setInt64","addr","v","getInt64","low","high","loadValue","f","storeValue","typeFlag","loadSlice","array","len","loadSliceOfValues","a","loadString","saddr","timeOrigin","b","sp","p","msec","m","args","str","dst","src","toCopy","instance","strPtr","argc","argvPtrs","arg","argv","go","event","wasm","stderr","parts","resumeStdin","stdinPos","data","first","tryToInstantiateModule","timeout","firstMessageResolve","firstMessageReject","firstMessagePromise","service","_","BundlerError","failure","RuntimeError","cause","comma","chars","intToChar","charToInt","c","decodeInteger","reader","relative","shift","integer","shouldNegate","hasMoreVlq","max","StringReader","char","pos","idx","decode","mappings","decoded","genColumn","sourcesIndex","sourceLine","sourceColumn","namesIndex","semi","sorted","lastCol","seg","sort","sortComparator","global","factory","this","schemeRegex","urlRegex","fileRegex","isAbsoluteUrl","isSchemeRelativeUrl","isAbsolutePath","isFileUrl","isRelative","parseAbsoluteUrl","makeUrl","parseFileUrl","scheme","user","query","parseUrl","url","stripPathFilename","mergePaths","base","normalizePath","rel","pieces","pointer","positive","addTrailingSlash","piece","inputType","baseUrl","baseType","queryHash","stripFilename","resolver","mapUrl","prefix","source","resolveUri","COLUMN","SOURCES_INDEX","SOURCE_LINE","SOURCE_COLUMN","NAMES_INDEX","maybeSort","owned","unsortedIndex","nextUnsortedSegmentLine","sortSegments","isSorted","j","found","binarySearch","haystack","needle","mid","cmp","upperBound","lowerBound","memoizedState","memoizedBinarySearch","state","lastKey","lastNeedle","lastIndex","parse","LINE_GTR_ZERO","COL_GTR_EQ_ZERO","LEAST_UPPER_BOUND","GREATEST_LOWER_BOUND","TraceMap","isString","parsed","names","sources","decodedMappings","originalPositionFor","bias","OMapping","segments","traceSegmentInternal","segment","resolvedSources","memo","exports","decodeBase64","decodeBase64WithBufferFrom","decodeBase64WithNewBuffer","decodeBase64WithAtob","base64","stripComment","sm","readFromFileMap","read","r","filename","throwError","Converter","opts","space","encodeBase64WithBufferFrom","encodeBase64WithNewBuffer","encodeBase64WithBtoa","json","encoding","content","obj","uri","comment","makeConverter","UNKNOWN_FUNCTION","stackString","stack","parseResult","parseChrome","parseWinjs","parseGecko","parseNode","parseJSC","chromeRe","chromeEvalRe","isNative","isEval","submatch","winjsRe","geckoRe","geckoEvalRe","javaScriptCoreRe","nodeRe","isWebWorker","isNode","getSourceMappedStackTrace","lineOffset","converter","convert","tracer","stackTraceParser.parse","call","frame","lineNumber","methodName","location","acc","cur","esbuildWasmUrl","esbuildHasOwnWorker","setWasmUrl","setHasOwnWorker","cdnUrlHelpers","specifier","cdnUrl","jsCDN","helper","log","esbuildManifoldPlugin","manifoldCADExportPath","manifoldCADExportSpecifier","ManifoldCADExportMatch","manifoldCADExportNames","dirname","__viteBrowserExternal","fileURLToPath","dir","skipResolve","globals","esbuild_initialized","getEsbuildConfig","esbuildOptions","esbuild.initialize","bundleCode","esbuild.build","defMatrix","matrix2str","makeItem","matrix","toDate3mf","d","pushHeader","out","unit","title","author","description","application","creationDate","license","modificationDate","pushObjectWithComponents","children","objectID","addComp","pushObjectWithMesh","vertices","indices","precision","fileForContentTypes","to3dmodel","meshes","components","items","header","FileForRelThumbnail","xmlType","u8","u16","i32","fleb","fdeb","clim","freb","eb","fl","revfl","_b","revfd","rev","hMap","cd","mb","s","l","le","co","rvb","sv","r_1","flt","fdt","flm","fdm","shft","slc","ec","ind","msg","nt","wbits","wbits16","hTree","t2","et","i0","i1","i2","maxSym","tr","mbt","ln","dt","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","w","clen","cf","wfblk","dat","wblk","final","syms","lf","df","li","bs","bl","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","flen","ftlen","dtlen","lm","ll","dm","dl","llm","lcts","it","clct","sym","deo","dflt","lvl","plvl","pre","post","st","lst","opt","msk_1","prev","head","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","maxd","ml","mmd","md","ti","pti","lin","din","crct","t","crc","cr","dopt","dict","newDat","mrg","wbytes","deflateSync","fltn","val","op","te","td","tds","strToU8","latin1","ar","ai","exfl","ex","wzh","u","ce","col","exl","y","exf","wzf","zipSync","files","tot","compression","com","ms","oe","cdl","badd","Export3MF","doc","to3mf","nextGlobalID","object2globalID","getObjectID","getMeshID","mesh","clonedFrom","setObjectID","manifoldPrimitive","positionAccessor","nodes","node","meshID","child","parent","parentID","comp","fileForRelThumbnail","model","zipFile","EventDispatcher","listener","listeners","listenerArray","GraphEdge","_name","_parent","_child","_attributes","Graph","parentSet","edge","childSet","attributes","_extends","RefList","ref","RefSet","RefMap","$attributes","$immutableKeys","GraphNode","graph","defaultAttributes","other","prevValue","nextValue","attribute","refAttributes","prevRef","metadata","refMap","VERSION","GLB_BUFFER","PropertyType","VertexLayout","BufferViewUsage$1","BufferViewUsage","TextureChannel","Format","ComponentTypeToTypedArray","BufferUtils","dataURI","byteString","ia","isBase64","arrays","totalByteLength","srcArray","paddingByte","paddedLength","dstArray","view","JPEGImageUtils","validateJPEGBuffer","_buffer","PNGImageUtils","ImageUtils","mimeType","impl","uncompressedBytes","channels","resolution","extension","FileUtils","fileName","ARRAY_TYPE","create","z","transformMat4","vec","stride","getBounds","resultBounds","createBounds","parents","meshBounds","getMeshBounds","expandBounds","worldMatrix","prim","localPos","worldPos","il","point","NULL_DOMAIN","HTTPUtils","isObject","isPlainObject","ctor","prot","_Logger","Verbosity","Logger","verbosity","determinant","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","multiply","b0","b1","b2","b3","getScaling","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","MathUtils","tolerance","min","componentType","srcMat","dstTranslation","dstRotation","dstScale","sx","sy","sz","_m1","invSX","invSY","invSZ","srcTranslation","srcRotation","srcScale","dstMat","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","equalsRef","refA","refB","equalsRefSet","refSetA","refSetB","refValuesA","refValuesB","equalsRefMap","refMapA","refMapB","keysA","keysB","equalsArray","equalsObject","numKeysA","numKeysB","valueA","valueB","isArray","ALPHABET","UNIQUE_RETRIES","ID_LENGTH","previousIDs","generateOne","rtn","uuid","retries","COPY_IDENTITY","EMPTY_SET","Property","extras","PropertyClass","thisValue","otherValue","subkey","skip","ExtensibleProperty","extensionProperty","Accessor","normalized","elementSize","sparse","arrayToComponentType","Animation","channel","sampler","AnimationChannel","targetPath","targetNode","AnimationSampler","interpolation","Buffer$1","Camera","znear","zfar","aspectRatio","yfov","xmag","ymag","ExtensionProperty","TextureInfo","texCoord","magFilter","minFilter","wrapS","wrapT","R","G","B","A","Material","doubleSided","alpha","baseColorFactor","alphaMode","alphaCutoff","texture","emissiveFactor","scale","strength","factor","Mesh","primitive","weights","Node","translation","rotation","ancestors","ancestor","parentNode","camera","skin","Primitive","semantic","accessor","material","PrimitiveTarget","Scene","Skin","skeleton","inverseBindMatrices","joint","Texture","image","Root","extensionName","otherExtension","defaultScene","Document","logger","_other","transforms","Extension","document","_event","required","_key","_dependency","_readerContext","_propertyType","_writerContext","ReaderContext","jsonDoc","textureInfo","textureInfoDef","textureDef","samplerDef","DEFAULT_OPTIONS","SUPPORTED_PREREAD_TYPES","GLTFReader","_options","assetDef","asset","extensionsUsed","extensionsRequired","unsupportedHooks","bufferDefs","bufferDef","bufferViewDefs","bufferViewDef","resource","accessorDefs","accessorDef","getAccessorArray","imageDefs","textureDefs","imageDef","bufferData","imageData","materialDefs","materialDef","pbrDef","meshDefs","meshDef","primitiveDef","targetNames","targetDef","targetIndex","targetName","accessorIndex","cameraDefs","cameraDef","perspectiveDef","orthoDef","nodeDefs","nodeDef","skinDefs","skinDef","nodeIndex","childIndex","animationDefs","animationDef","animation","samplers","channelDef","sceneDefs","sceneDef","scene","hasSparseValues","isZeroFilled","getSparseArray","getInterleavedArray","bufferView","TypedArray","componentSize","accessorByteOffset","byteStride","elementStride","sparseDef","indicesDef","valuesDef","BufferViewTarget","WriterContext","_doc","root","numBuffers","numImages","UniqueURIGenerator","getSlot","samplerKey","textureKey","def","throwOnConflict","resources","conflictMessage","cachedUsage","usage","prevUsage","multiple","basename","UNSIGNED_INT","UNSIGNED_SHORT","UNSIGNED_BYTE","SUPPORTED_PREWRITE_TYPES","GLTFWriter","extensionsRegistered","concatAccessors","accessors","bufferIndex","bufferByteOffset","bufferViewTarget","buffers","accessorArray","bufferViewData","interleaveAccessors","vertexCount","vertexByteOffset","viewByteOffset","concatSparseAccessors","sparseData","maxIndex","needSparseWarning","el","ValueArray","IndexArray","IndexComponentType","indicesBufferViewDef","indicesBufferViewIndex","valuesBufferViewDef","valuesBufferViewIndex","textureIndex","groupByParent","accessorParents","uniqueParents","parentToIndex","accessorGroups","bufferByteLength","groupAccessors","_buffer2","_buffer3","_buffer4","_buffer5","imagePadding","samplerIndexMap","samplerIndex","clean","unused","ChunkType","PlatformIO","extensions","dependencies","layout","isGLB","glb","isExternalBuffer","isExternalImage","jsonText","jsonChunkData","jsonChunkHeader","jsonChunk","binBuffer","binChunkData","binChunkHeader","binChunk","_this","images","pendingResources","resolveResource","resourceUUID","jsonByteOffset","jsonByteLength","binByteOffset","binByteLength","jsonDocument","WebIO","fetchConfig","KHR_SUPERCOMPRESSION_NONE","KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT","KHR_DF_VENDORID_KHRONOS","KHR_DF_VERSION","KHR_DF_MODEL_UNSPECIFIED","KHR_DF_MODEL_ETC1S","KHR_DF_MODEL_UASTC","KHR_DF_FLAG_ALPHA_STRAIGHT","KHR_DF_TRANSFER_SRGB","KHR_DF_PRIMARIES_BT709","KHR_DF_SAMPLE_DATATYPE_SIGNED","VK_FORMAT_UNDEFINED","createDefaultContainer","BufferReader","littleEndian","left","right","maxByteLength","term","KTX2_ID","decodeText","container","headerByteLength","headerReader","dfdByteOffset","dfdByteLength","kvdByteOffset","kvdByteLength","sgdByteOffset","sgdByteLength","levelByteLength","levelReader","dfdReader","vendorId","descriptorType","versionNumber","descriptorBlockSize","colorModel","colorPrimaries","transferFunction","texelBlockDimension","bytesPlane","dfd","numSamples","sample","kvdReader","keyValueByteLength","keyData","kvPadding","sgdReader","endpointCount","selectorCount","endpointsByteLength","selectorsByteLength","tablesByteLength","extendedByteLength","imageDescs","endpointsByteOffset","selectorsByteOffset","tablesByteOffset","extendedByteOffset","endpointsData","selectorsData","tablesData","extendedData","EXT_MESH_GPU_INSTANCING","EXT_MESHOPT_COMPRESSION","EXT_TEXTURE_WEBP","EXT_TEXTURE_AVIF","KHR_DRACO_MESH_COMPRESSION","KHR_LIGHTS_PUNCTUAL","KHR_MATERIALS_ANISOTROPY","KHR_MATERIALS_CLEARCOAT","KHR_MATERIALS_DIFFUSE_TRANSMISSION","KHR_MATERIALS_DISPERSION","KHR_MATERIALS_EMISSIVE_STRENGTH","KHR_MATERIALS_IOR","KHR_MATERIALS_IRIDESCENCE","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","KHR_MATERIALS_SHEEN","KHR_MATERIALS_SPECULAR","KHR_MATERIALS_TRANSMISSION","KHR_MATERIALS_UNLIT","KHR_MATERIALS_VOLUME","KHR_MATERIALS_VARIANTS","KHR_MESH_QUANTIZATION","KHR_TEXTURE_BASISU","KHR_TEXTURE_TRANSFORM","KHR_XMP_JSON_LD","INSTANCE_ATTRIBUTE","InstancedMesh","EXTMeshGPUInstancing","instancedMeshDef","instancedMesh","prop","EncoderMethod$1","EncoderMethod","MeshoptMode","MeshoptFilter","isFallbackBuffer","BYTE","SHORT","FLOAT","encodeNormalizedInt","decodeNormalizedInt","prepareAccessor","filterOptions","bits","decodeNormalizedIntArray","padNormals","padArrayElements","elementCount","getMeshoptMode","getMeshoptFilter","refName","refKey","isDelta","getTargetPath","DEFAULT_ENCODER_OPTIONS$1","EXTMeshoptCompression","dependency","propertyType","viewDef","meshoptDef","fallbackBuffer","fallbackBufferDef","_context","fallbackBufferIndex","parentToID","getParentID","preparedAccessor","bufferViewAccessors","otherBufferViews","compressedData","fallbackBufferByteOffset","bufferViewIndex","finalBufferViewDef","compressedByteOffset","bufferViewExtensionDef","AVIFImageUtils","box","unbox","EXTTextureAVIF","imageIndex","size","WEBPImageUtils","RIFF","WEBP","chunkId","chunkByteLength","width","height","EXTTextureWebP","decoderModule","COMPONENT_ARRAY","DATA_TYPE","decodeGeometry","dracoMesh","decodeIndex","numIndices","decodeAttribute","dataType","ArrayCtor","numComponents","numValues","initDecoderModule","_decoderModule","encoderModule","AttributeEnum","DEFAULT_QUANTIZATION_BITS","DEFAULT_ENCODER_OPTIONS","initEncoderModule","_encoderModule","encodeGeometry","builder","attributeIDs","dracoBuffer","hasMorphTargets","hasSparseAttributes","attributeEnum","getAttributeEnum","attributeID","addAttribute","quantizationVolume","range","EncodingError","numVertices","itemSize","KHRDracoMeshCompression","dracoMeshes","primDef","dracoDef","dracoAttribute","attributeArray","primitiveHashMap","listDracoPrimitives","primitiveEncodingMap","primHash","encodedPrim","attributeDef","dracoContext","included","excluded","nonIndexed","nonTriangles","accessorIndices","includedAccessors","includedHashKeys","primToHashKey","hashKey","createHashKey","dstIndices","dstAttribute","parentTypes","attr","indexMap","hashElements","Light","intensity","angle","KHRLightsPunctual","lights","lightDef","_lightDef$spot","_lightDef$spot2","light","lightNodeDef","lightDefs","lightIndexMap","R$7","G$7","B$5","Anisotropy","KHRMaterialsAnisotropy","materialIndex","anisotropy","anisotropyDef","R$6","G$6","B$4","Clearcoat","KHRMaterialsClearcoat","clearcoat","clearcoatDef","R$5","G$5","B$3","A$3","DiffuseTransmission","KHRMaterialsDiffuseTransmission","transmission","transmissionDef","Dispersion","dispersion","KHRMaterialsDispersion","dispersionDef","EmissiveStrength","KHRMaterialsEmissiveStrength","emissiveStrength","emissiveStrengthDef","IOR","ior","KHRMaterialsIOR","iorDef","R$4","G$4","Iridescence","thickness","KHRMaterialsIridescence","iridescence","iridescenceDef","R$3","G$3","B$2","A$2","PBRSpecularGlossiness","KHRMaterialsPBRSpecularGlossiness","specGloss","specGlossDef","R$2","G$2","B$1","A$1","Sheen","KHRMaterialsSheen","sheen","sheenDef","R$1","G$1","Specular","KHRMaterialsSpecular","specular","specularDef","Transmission","KHRMaterialsTransmission","Unlit","KHRMaterialsUnlit","Mapping","variant","MappingList","mapping","Variant","KHRMaterialsVariants","variants","variantDef","meshIndex","primIndex","mappingList","variantPrimDef","mappingDef","variantIndex","variantDefs","variantIndexMap","mappingDefs","Volume","distance","KHRMaterialsVolume","volume","volumeDef","KHRMeshQuantization","KTX2ImageUtils","hasAlpha","level","levelWidth","levelHeight","blockSize","KHRTextureBasisu","basisuDef","Transform","KHRTextureTransform","transformDef","textureInfoEntries","eq","PARENT_TYPES","Packet","properties","copyJSON","jsonld","KHRXMP","_context$jsonDoc$json","extensionDef","packets","packetDef","defLists","propertyLists","defs","xmpDef","packetDefs","parentDef","KHRONOS_EXTENSIONS","NAME","MERGE","ManifoldPrimitive","indicesAccessor","valuesAccessor","runIndex","EXTManifold","manifoldDef","mergeFrom","mergeTo","numPrimitive","mergeIndicesIndex","mergeValuesIndex","mergeIndices","mergeValues","existingPrimitive","attributeDefs","setupIO","io","writeMesh","manifoldMesh","id2properties","manifoldExtension","attributeUnion","primitive2attributes","numRun","lastID","run","unionSize","numVert","numProp","aIdx","vert2merge","vert","newVert","ExportGLTF","memoryRegistry","manifoldStaticFunctions","manifoldMemberFunctions","crossSectionStaticFunctions","crossSectionMemberFunctions","cleanup","elem","garbageCollectFunction","originalFn","interceptMethods","methodNames","garbageCollectManifold","cos","sin","PI","TAU","euler2quat","sr","cp","cy","q","FPS","manifold2morph","timesAccessor","weightsAccessor","weightsSampler","hasAnimation","addMotion","motion","nFrames","nEl","frames","globalDefaults","framesAccessor","setMorph","manifold","getMorph","morphStart","morph","inputPositions","vertProp","morphEnd","startPosition","morphAccessor","morphTarget","setMorphStart","func","setMorphEnd","addAnimationToDoc","times","cleanupAnimationInDoc","id2material","materialCache","setMaterial","getMaterialByID","getBackupMaterial","makeDefaultMaterial","matIn","defaults","roughness","metallic","unlit","getCachedMaterial","matDef","ghost","shown","singles","SHOW","GHOST","getDebugMeshByID","getDebugMaterialByID","show","inMesh","getOriginalMaterialByID","debug","only","getDebugGLTFMesh","backupMaterial","debugNodes","debugMesh","debugNode","GLOBAL_DEFAULTS","cleanupAnimation","cleanupDebug","cleanupMaterial","resetGLTFNodes","GLTFNode","copy","GLTFNodeTracked","getGLTFNodes","createGLTFnode","rot","addMesh","numTri","cloneNode","toNode","fromNode","cloneNodeNewMaterial","oldBackupMaterial","oldMesh","newMesh","newPrimitive","createNodeFromCache","manifold2node","cachedNodes","cache","cachedNode","oldNode","parseOptions","createWrapper","halfRoot2","mm2m","wrapper","manifoldToGLTFDoc","GLTFNodesToGLTFDoc","node2gltf","leafNodes","gltfNode","anyToGLTFNodeList","any","manifoldCAD","Module","_scriptName","moduleArg","moduleRtn","readyPromiseResolve","readyPromiseReject","readyPromise","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","createRequire","require","_ManifoldInitialized","toVec","list","fromVec","vec2polygons","nPoly","nPts","poly","polygons2vec","polygons","disposePolygons","polygonsVec","vararg2vec2","vararg2vec3","fillRuleToInt","fillRule","joinTypeToInt","joinType","CrossSectionCtor","cross","cs","wasmFuncPtr","addFunction","vec2Ptr","getValue","setValue","removeFunction","miterLimit","circularSegments","epsilon","nDivisions","twistDegrees","scaleTop","center","man","revolveDegrees","minSharpAngle","minSmoothness","vec3Ptr","status","normalIdx","oldNumProp","newPtr","oldPtr","newProp","oldProp","xOrVec","normal","triVerts","vertProperties","mergeFromVert","mergeToVert","runOriginalID","faceID","halfedgeTangent","runTransform","changed","tri","halfedge","mat4","row","radius","crossSectionBatchbool","pushVec2","ps","pts","polys","ManifoldCtor","radiusLow","radiusHigh","sharpenedEdges","sharp","manifolds","manifoldBatchbool","sdf","bounds","edgeLength","bounds2","pushVec3","allowConvex","moduleOverrides","scriptDirectory","locateFile","readAsync","readBinary","nodePath","isFileURI","ret","xhr","wasmBinary","wasmMemory","ABORT","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","preRun","addOnPreRun","callRuntimeCallbacks","initRuntime","postRun","addOnPostRun","addOnInit","runDependencies","dependenciesFulfilled","addRunDependency","removeRunDependency","abort","dataURIPrefix","isDataURI","findWasmBinary","wasmBinaryFile","getBinarySync","getBinaryPromise","binaryFile","instantiateArrayBuffer","imports","receiver","reason","instantiateAsync","getWasmImports","wasmImports","createWasm","info","receiveInstance","wasmExports","applySignatureConversions","wasmTable","receiveInstantiationResult","callbacks","ExceptionInfo","excPtr","destructor","caught","rethrown","adjustedPtr","isPointer","___cxa_is_pointer_type","adjusted","exceptionLast","___cxa_throw","__abort_js","structRegistrations","runDestructors","destructors","del","readPointer","awaitingDependencies","registeredTypes","typeDependencies","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","__embind_finalize_value_object","structType","reg","rawConstructor","rawDestructor","fieldRecords","fieldTypes","field","fields","fieldName","getterReturnType","getter","getterContext","setterArgumentType","setter","setterContext","rv","GenericWireTypeSize","__embind_register_bigint","primitiveType","minRange","maxRange","embind_init_charCodes","codes","embind_charCodes","readLatin1String","BindingError","throwBindingError","sharedRegisterType","rawType","registeredInstance","__embind_register_bool","trueValue","falseValue","wt","shallowCopyInternalPointer","throwInstanceAlreadyDeleted","getInstanceTypeName","handle","finalizationRegistry","detachFinalizer","runDestructor","$$","releaseClassHandle","toDelete","downcastPointer","ptrClass","desiredClass","registeredPointers","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","deletionQueue","flushPendingDeletes","delayFunction","setDelayFunction","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","prototype","record","hasSmartPtrType","hasSmartPtr","attachFinalizer","RegisteredPointer_fromWireType","rawPointer","makeDefaultHandle","actualType","registeredPointerRecord","toType","dp","init_ClassHandle","ClassHandle","leftClass","rightClass","createNamedFunction","body","ensureOverloadTable","proto","humanName","prevFunc","exposePublicSymbol","numArguments","char_0","char_9","makeLegalFunctionName","RegisteredClass","constructor","instancePrototype","baseClass","getActualType","upcast","downcast","upcastPointer","constNoSmartPtrRawPointerToWireType","embindRepr","handleClass","genericPointerToWireType","clonedHandle","Emval","nonConstNoSmartPtrRawPointerToWireType","init_RegisteredPointer","RegisteredPointer","registeredClass","isReference","isConst","isSmartPointer","pointeeType","sharingPolicy","rawGetPointee","rawShare","replacePublicSymbol","dynCallLegacy","sig","getWasmTableEntry","funcPtr","dynCall","getDynCaller","embind__requireFunction","signature","rawFunction","makeDynCaller","fp","extendError","baseErrorType","errorName","errorClass","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","basePrototype","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","usesDestructorStack","argTypes","newFunc","argumentList","dummy","createJsInvoker","isClassMethodFunc","returns","isAsync","needsDestructorStack","argCount","argsList","argsListWired","invokerFnBody","dtorStack","args1","paramName","craftInvokerFunction","classType","cppInvokerFunc","cppTargetFunc","closureArgs","invokerFn","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","getFunctionName","argsIndex","__embind_register_class_function","rawInvoker","isPureVirtual","unboundTypesHandler","method","memberFunction","emval_freelist","emval_handles","__emval_decref","count_emval_handles","init_emval","EmValType","__embind_register_emval","enumReadValueFromPointer","signed","__embind_register_enum","isSigned","requireRegisteredType","__embind_register_enum_value","rawEnumType","enumValue","enumType","Enum","Value","floatReadValueFromPointer","__embind_register_float","__embind_register_function","invokerArgsArray","integerReadValueFromPointer","__embind_register_integer","fromWireType","bitshift","isUnsignedType","checkAssertions","toTypeName","toWireType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_optional","rawOptionalType","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","endIdx","u1","stringToUTF8","outPtr","lengthBytesUTF8","UTF8Decoder","UTF8ArrayToString","heapOrArray","maxBytesToRead","endPtr","u0","u2","ch","UTF8ToString","__embind_register_std_string","stdStringIsUTF8","payload","decodeStartPtr","currentBytePtr","maxRead","stringSegment","valueIsOfTypeString","_malloc","charCode","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","trailSurrogate","lengthBytesUTF32","__embind_register_std_wstring","charSize","decodeString","encodeString","readCharAt","lengthBytesUTF","maxReadBytes","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","getterSignature","setterSignature","__embind_register_void","__emscripten_memcpy_js","dest","num","emval_returnValue","returnType","destructorsRef","__emval_as","emval_symbols","getStringOrSymbol","address","symbol","emval_methodCallers","__emval_call_method","caller","objHandle","__emval_equals","second","emval_addMethodCaller","emval_lookupTypes","__emval_get_method_caller","retType","functionBody","params","invokerFunction","functionName","__emval_get_property","__emval_incref","__emval_new_cstring","__emval_new_object","__emval_run_destructors","__emval_set_property","__emval_take_value","getHeapMax","growMemory","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","cutDown","overGrownHeapSize","newSize","replacement","uleb128Encode","sigToWasmTypes","typeNames","generateFuncType","sigRet","sigParam","typeCodes","convertJsFunctionToWasm","typeSectionBody","wrappedFunc","updateTableMap","functionsInTableMap","getFunctionAddress","freeTableIndexes","getEmptyTableSlot","setWasmTableEntry","wrapped","a0","makeWrapper_pp","makeWrapper_p","calledRun","runCaller","doRun","manifoldwasm","wasmUrl","instantiateManifold","getManifoldModule","exporters","AsyncFunction","garbageCollector.cleanup","scenebuilder.cleanup","evaluate","t0","doNotBundle","bundleOpt","bundled","t1","manifoldImport","toplevelImport","scenebuilder.GLTFNodeTracked","scenebuilder.getGLTFNodes","scenebuilder.resetGLTFNodes","stacktrace","newError","missing","scenebuilder.anyToGLTFNodeList","scenebuilder.GLTFNodesToGLTFDoc","t3","exportBlobURL","blobURL","initializeWebWorker","interceptConsole","oldLog","sendError","handleInitialize","setManifoldWasmUrl","setEsbuildWasmUrl","gltfdoc","handleEvaluate","handleExport"],"mappings":"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","x_google_ignoreList":[0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,20,21,22,23]}