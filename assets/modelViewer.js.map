{"version":3,"file":"modelViewer.js","sources":["../../model-viewer-script.ts"],"sourcesContent":["// Copyright 2024 The Manifold Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {Document, WebIO} from '@gltf-transform/core';\nimport {clearNodeTransform, flatten, mergeDocuments, prune} from '@gltf-transform/functions';\n\nimport {disposeMesh, Properties, readMesh, setupIO, writeMesh} from '../lib/gltf-io';\n\nimport Module, {Manifold, Mesh} from './built/manifold';\n\n// Set up gltf-transform\nconst io = setupIO(new WebIO());\nconst doc = new Document();\n\n\n// Set up Manifold WASM library\nconst wasm = await Module();\nwasm.setup();\nconst {Manifold, Mesh} = wasm;\n\n// Map of OriginalID to glTF material and attributes\nconst id2properties = new Map<number, Properties>();\n\n// Wrapper for gltf-io readMesh() that processes a whole glTF and stores the\n// properties in the above map. This function is simplified and intended only\n// for reading single-object glTFs, as it simply unions any extra meshes\n// together rather than returning a scene hierarchy.\nasync function readGLB(url: string) {\n  const manifolds = Array<Manifold>();\n  const docIn = await io.read(url);\n  await docIn.transform(flatten());\n  const nodes = docIn.getRoot().listNodes();\n  const ids = Array<number>();\n  for (const node of nodes) {\n    clearNodeTransform(node);\n    const gltfMesh = node.getMesh();\n    if (gltfMesh == null) continue;\n    const tmp = readMesh(gltfMesh);\n    if (tmp == null) continue;\n\n    const numID = tmp.runProperties.length;\n    const firstID = Manifold.reserveIDs(numID);\n    tmp.mesh.runOriginalID = new Uint32Array(numID);\n    for (let i = 0; i < numID; ++i) {\n      tmp.mesh.runOriginalID[i] = firstID + i;\n      ids.push(firstID + i);\n      id2properties.set(firstID + i, tmp.runProperties[i]);\n    }\n    manifolds.push(new Manifold(new Mesh(tmp.mesh)));\n  }\n  // pull in materials, TODO: replace with transfer() when available\n  const startIdx = doc.getRoot().listMaterials().length;\n  mergeDocuments(doc, docIn);\n  doc.getRoot().listScenes().forEach((s) => s.dispose());\n  doc.getRoot().listBuffers().forEach((s) => s.dispose());\n  doc.getRoot().listAccessors().forEach((s) => s.dispose());\n  for (const [i, id] of ids.entries()) {\n    const material = doc.getRoot().listMaterials()[startIdx + i];\n    id2properties.get(id)!.material = material;\n  }\n\n  return Manifold.union(manifolds);\n}\n\n// Read static input glTFs\nconst space = await readGLB('/models/space.glb');\nconst moon = await readGLB('/models/moon.glb');\n\nconst node = doc.createNode();\ndoc.createScene().addChild(node);\n\n// Set up UI for operations\ntype BooleanOp = 'union'|'difference'|'intersection';\n\nfunction csg(operation: BooleanOp) {\n  push2MV(Manifold[operation](space, moon));\n}\n\ncsg('difference');\nconst selectElement = document.querySelector('select')!;\nselectElement.onchange = function() {\n  csg(selectElement.value as BooleanOp);\n};\n\n// The resulting glTF\nlet objectURL = '';\n\n// Set up download UI\nconst downloadButton = document.querySelector('#download') as HTMLButtonElement;\ndownloadButton.onclick = function() {\n  const link = document.createElement('a');\n  link.download = 'manifold.glb';\n  link.href = objectURL;\n  link.click();\n};\n\n// <model-viewer> element for rendering resulting glTF.\nconst mv = document.querySelector('model-viewer');\n\n// Use gltf-io and gltf-transform to convert the resulting Manifold to a glTF\n// and display it with <model-viewer>.\nasync function push2MV(manifold: Manifold) {\n  disposeMesh(node.getMesh()!);\n  const mesh = writeMesh(doc, manifold.getMesh(), id2properties);\n  node.setMesh(mesh);\n  await doc.transform(prune());\n\n  const glb = await io.writeBinary(doc);\n\n  const blob = new Blob(\n      [glb as Uint8Array<ArrayBuffer>], {type: 'application/octet-stream'});\n  URL.revokeObjectURL(objectURL);\n  objectURL = URL.createObjectURL(blob);\n  (mv as any).src = objectURL;\n}\n"],"names":["io","setupIO","WebIO","doc","Document","wasm","Module","Manifold","Mesh","id2properties","readGLB","url","manifolds","docIn","flatten","nodes","ids","node","clearNodeTransform","gltfMesh","tmp","readMesh","numID","firstID","i","startIdx","mergeDocuments","s","id","material","space","moon","csg","operation","push2MV","selectElement","objectURL","downloadButton","link","mv","manifold","disposeMesh","mesh","writeMesh","prune","glb","blob"],"mappings":"4LAsBA,MAAMA,EAAKC,EAAQ,IAAIC,CAAO,EACxBC,EAAM,IAAIC,EAIVC,EAAO,MAAMC,EAAA,EACnBD,EAAK,MAAA,EACL,KAAM,CAAC,SAAAE,EAAU,KAAAC,CAAA,EAAQH,EAGnBI,MAAoB,IAM1B,eAAeC,EAAQC,EAAa,CAClC,MAAMC,EAAY,MAAA,EACZC,EAAQ,MAAMb,EAAG,KAAKW,CAAG,EAC/B,MAAME,EAAM,UAAUC,GAAS,EAC/B,MAAMC,EAAQF,EAAM,QAAA,EAAU,UAAA,EACxBG,EAAM,MAAA,EACZ,UAAWC,KAAQF,EAAO,CACxBG,EAAmBD,CAAI,EACvB,MAAME,EAAWF,EAAK,QAAA,EACtB,GAAIE,GAAY,KAAM,SACtB,MAAMC,EAAMC,EAASF,CAAQ,EAC7B,GAAIC,GAAO,KAAM,SAEjB,MAAME,EAAQF,EAAI,cAAc,OAC1BG,EAAUhB,EAAS,WAAWe,CAAK,EACzCF,EAAI,KAAK,cAAgB,IAAI,YAAYE,CAAK,EAC9C,QAASE,EAAI,EAAGA,EAAIF,EAAO,EAAEE,EAC3BJ,EAAI,KAAK,cAAcI,CAAC,EAAID,EAAUC,EACtCR,EAAI,KAAKO,EAAUC,CAAC,EACpBf,EAAc,IAAIc,EAAUC,EAAGJ,EAAI,cAAcI,CAAC,CAAC,EAErDZ,EAAU,KAAK,IAAIL,EAAS,IAAIC,EAAKY,EAAI,IAAI,CAAC,CAAC,CACjD,CAEA,MAAMK,EAAWtB,EAAI,QAAA,EAAU,gBAAgB,OAC/CuB,EAAevB,EAAKU,CAAK,EACzBV,EAAI,QAAA,EAAU,WAAA,EAAa,QAASwB,GAAMA,EAAE,SAAS,EACrDxB,EAAI,QAAA,EAAU,YAAA,EAAc,QAASwB,GAAMA,EAAE,SAAS,EACtDxB,EAAI,QAAA,EAAU,cAAA,EAAgB,QAASwB,GAAMA,EAAE,SAAS,EACxD,SAAW,CAACH,EAAGI,CAAE,IAAKZ,EAAI,UAAW,CACnC,MAAMa,EAAW1B,EAAI,QAAA,EAAU,cAAA,EAAgBsB,EAAWD,CAAC,EAC3Df,EAAc,IAAImB,CAAE,EAAG,SAAWC,CACpC,CAEA,OAAOtB,EAAS,MAAMK,CAAS,CACjC,CAGA,MAAMkB,EAAQ,MAAMpB,EAAQ,mBAAmB,EACzCqB,EAAO,MAAMrB,EAAQ,kBAAkB,EAEvCO,EAAOd,EAAI,WAAA,EACjBA,EAAI,YAAA,EAAc,SAASc,CAAI,EAK/B,SAASe,EAAIC,EAAsB,CACjCC,EAAQ3B,EAAS0B,CAAS,EAAEH,EAAOC,CAAI,CAAC,CAC1C,CAEAC,EAAI,YAAY,EAChB,MAAMG,EAAgB,SAAS,cAAc,QAAQ,EACrDA,EAAc,SAAW,UAAW,CAClCH,EAAIG,EAAc,KAAkB,CACtC,EAGA,IAAIC,EAAY,GAGhB,MAAMC,EAAiB,SAAS,cAAc,WAAW,EACzDA,EAAe,QAAU,UAAW,CAClC,MAAMC,EAAO,SAAS,cAAc,GAAG,EACvCA,EAAK,SAAW,eAChBA,EAAK,KAAOF,EACZE,EAAK,MAAA,CACP,EAGA,MAAMC,EAAK,SAAS,cAAc,cAAc,EAIhD,eAAeL,EAAQM,EAAoB,CACzCC,EAAYxB,EAAK,SAAU,EAC3B,MAAMyB,EAAOC,EAAUxC,EAAKqC,EAAS,QAAA,EAAW/B,CAAa,EAC7DQ,EAAK,QAAQyB,CAAI,EACjB,MAAMvC,EAAI,UAAUyC,GAAO,EAE3B,MAAMC,EAAM,MAAM7C,EAAG,YAAYG,CAAG,EAE9B2C,EAAO,IAAI,KACb,CAACD,CAA8B,EAAG,CAAC,KAAM,0BAAA,CAA0B,EACvE,IAAI,gBAAgBT,CAAS,EAC7BA,EAAY,IAAI,gBAAgBU,CAAI,EACnCP,EAAW,IAAMH,CACpB"}