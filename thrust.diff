diff --git a/src/third_party/thrust/thrust/detail/type_traits.h b/src/third_party/thrust/thrust/detail/type_traits.h
index d147f832..60b57654 100644
--- a/src/third_party/thrust/thrust/detail/type_traits.h
+++ b/src/third_party/thrust/thrust/detail/type_traits.h
@@ -144,11 +144,11 @@ template<typename T> struct has_trivial_constructor
       is_pod<T>::value
 #if THRUST_HOST_COMPILER == THRUST_HOST_COMPILER_MSVC || \
     THRUST_HOST_COMPILER == THRUST_HOST_COMPILER_CLANG
-      || __has_trivial_constructor(T)
+      || __is_trivially_constructible(T)
 #elif THRUST_HOST_COMPILER == THRUST_HOST_COMPILER_GCC
 // only use the intrinsic for >= 4.3
 #if (__GNUC__ >= 4) && (__GNUC_MINOR__ >= 3)
-      || __has_trivial_constructor(T)
+      || __is_trivially_constructible(T)
 #endif // GCC VERSION
 #endif // THRUST_HOST_COMPILER
       >
@@ -160,11 +160,11 @@ template<typename T> struct has_trivial_copy_constructor
       is_pod<T>::value
 #if THRUST_HOST_COMPILER == THRUST_HOST_COMPILER_MSVC || \
     THRUST_HOST_COMPILER == THRUST_HOST_COMPILER_CLANG
-      || __has_trivial_copy(T)
+      || __is_trivially_constructible(T)
 #elif THRUST_HOST_COMPILER == THRUST_HOST_COMPILER_GCC
 // only use the intrinsic for >= 4.3
 #if (__GNUC__ >= 4) && (__GNUC_MINOR__ >= 3)
-      || __has_trivial_copy(T)
+      || __is_trivially_constructible(T)
 #endif // GCC VERSION
 #endif // THRUST_HOST_COMPILER
     >
diff --git a/src/third_party/thrust/thrust/detail/type_traits/has_trivial_assign.h b/src/third_party/thrust/thrust/detail/type_traits/has_trivial_assign.h
index 8aa55165..73c8f776 100644
--- a/src/third_party/thrust/thrust/detail/type_traits/has_trivial_assign.h
+++ b/src/third_party/thrust/thrust/detail/type_traits/has_trivial_assign.h
@@ -39,10 +39,10 @@ template<typename T> struct has_trivial_assign
 #elif THRUST_HOST_COMPILER == THRUST_HOST_COMPILER_GCC
 // only use the intrinsic for >= 4.3
 #if (__GNUC__ >= 4) && (__GNUC_MINOR__ >= 3)
-      || __has_trivial_assign(T)
+      || std::is_trivially_assignable<T&, T&>::value
 #endif // GCC VERSION
 #elif THRUST_HOST_COMPILER == THRUST_HOST_COMPILER_CLANG
-      || __has_trivial_assign(T)
+      || std::is_trivially_assignable<T&, T&>::value
 #endif // THRUST_HOST_COMPILER
     >
 {};
